(* Content-type: application/mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 7.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       145,          7]
NotebookDataLength[    469609,      10279]
NotebookOptionsPosition[    451265,       9693]
NotebookOutlinePosition[    452015,       9717]
CellTagsIndexPosition[    451972,       9714]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Outstanding Question(s)", "Subtitle",
 CellChangeTimes->{{3.481656147338875*^9, 3.481656182917*^9}, {
  3.561917487784*^9, 3.561917489552*^9}, {3.561927852948*^9, 3.5619278533*^9}}
  ],

Cell["\<\
By Dustin Darcy, Aug. 15th 2010, updated Nov. 21 2015\
\>", "Text",
 CellChangeTimes->{{3.5619276945550003`*^9, 3.561927701134*^9}, {
  3.561927813744*^9, 3.561927842389*^9}, {3.6541289668019457`*^9, 
  3.654128978401419*^9}, {3.657138367324494*^9, 3.6571383703206654`*^9}}],

Cell[TextData[{
 StyleBox["The big question this notebook seeks to answer is whether there is \
a recurrence relation between the summed rows of triangular numbers of the \
form ",
  FontWeight->"Plain"],
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"tri", "(", "n", ")"}], "=", 
    RowBox[{"(", 
     FractionBox[
      RowBox[{
       SuperscriptBox["n", "2"], "+", "n"}], "2"], ")"}]}], TraditionalForm]],
  
  FontWeight->"Plain"],
 StyleBox[" where",
  FontWeight->"Plain"],
 " ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", "=", "36"}], TraditionalForm]],
  FontWeight->"Plain"],
 StyleBox[", ",
  FontWeight->"Plain"],
 Cell[BoxData[
  FormBox[
   RowBox[{"n", "=", "4"}], TraditionalForm]],
  FontWeight->"Plain"],
 StyleBox[", and squared primes. \n\nThe initial observation that kicked off \
the investigation is a curious link between ",
  FontWeight->"Plain"],
 Cell[BoxData[
  FormBox[
   StyleBox[
    RowBox[{"n", "=", "4"}],
    FontWeight->"Plain"], TraditionalForm]]],
 StyleBox["  ",
  FontWeight->"Plain"],
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{"meaning", " ", "triangular", " ", "number", " ", 
      RowBox[{"tri", "(", "4", ")"}]}], "=", 
     RowBox[{
      FractionBox[
       RowBox[{
        SuperscriptBox["4", "2"], "+", "4"}], "2"], "=", "10"}]}], ")"}], 
   TraditionalForm]],
  FontWeight->"Plain"],
 " ",
 StyleBox["and ",
  FontWeight->"Plain"],
 Cell[BoxData[
  FormBox[
   StyleBox[
    RowBox[{"n", "=", "36"}],
    FontWeight->"Plain"], TraditionalForm]]],
 StyleBox[" ",
  FontWeight->"Plain"],
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{"or", " ", 
      RowBox[{"tri", "(", "36", ")"}]}], "=", 
     RowBox[{
      FractionBox[
       RowBox[{
        SuperscriptBox["36", "2"], "+", "36"}], "2"], "=", "666"}]}], ")"}], 
   TraditionalForm]],
  FontWeight->"Plain"],
 StyleBox[". \n\nThe link is a bit easier to notice if we think of ",
  FontWeight->"Plain"],
 Cell[BoxData[
  FormBox[
   StyleBox[
    RowBox[{"tri", "(", "4", ")"}],
    FontWeight->"Plain"], TraditionalForm]]],
 " ",
 StyleBox["as a summation. It\[CloseCurlyQuote]s trivial to see that ",
  FontWeight->"Plain"],
 Cell[BoxData[
  FormBox[
   StyleBox[
    RowBox[{"tri", "(", "4", ")"}],
    FontWeight->"Plain"], TraditionalForm]]],
 " ",
 StyleBox["is the same as",
  FontWeight->"Plain"],
 " ",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"x", "=", "1"}], "4"], "x"}], "=", "10"}]],
  FontWeight->"Plain"],
 StyleBox[". Geometrically this creates a 4 row triangular number sequence \
composed of 10 digits (see the diagram below) whose rows sum to: ",
  FontWeight->"Plain"],
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"0123", "+", "456", "+", "78", "+", "9"}], "=", "666"}], 
   TraditionalForm]],
  FontWeight->"Plain"],
 StyleBox[". Since ",
  FontWeight->"Plain"],
 Cell[BoxData[
  FormBox[
   RowBox[{"n", "=", "36"}], TraditionalForm]],
  FontWeight->"Plain"],
 StyleBox[", ",
  FontWeight->"Plain"],
 Cell[BoxData[
  RowBox[{
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"x", "=", "1"}], "36"], "x"}], "=", "666"}]],
  FontWeight->"Plain"],
 StyleBox[". This suggested that ",
  FontWeight->"Plain"],
 Cell[BoxData[
  FormBox[
   RowBox[{"n", "=", "36"}], TraditionalForm]]],
 StyleBox[" might be a part of another \
\[OpenCurlyDoubleQuote]prime-square-sum sequence\[CloseCurlyDoubleQuote] as \
derived from the footprint of ",
  FontWeight->"Plain"],
 Cell[BoxData[
  FormBox[
   RowBox[{"n", "=", "4"}], TraditionalForm]],
  FontWeight->"Plain"],
 " through some as of yet unknown recursive series.\n\nThe second observation \
which made this connection curious enough to warrant deeper investigation is \
that 10 is the sum of the first 3 primes (i.e. ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"2", "+", "3", "+", "5"}], "=", "10"}], TraditionalForm]]],
 ") and 666 is the sum of the first seven squared primes ",
 StyleBox["(i.e. ",
  FontWeight->"Plain"],
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["2", "2"], "+", 
     SuperscriptBox["3", "2"], "+", 
     SuperscriptBox["5", "2"], "+", 
     SuperscriptBox["7", "2"], "+", 
     SuperscriptBox["11", "2"], "+", 
     SuperscriptBox["13", "2"], "+", 
     SuperscriptBox["17", "2"]}], "=", "666"}], TraditionalForm]],
  FontWeight->"Plain"],
 StyleBox[").",
  FontWeight->"Plain"],
 " This begs the question: is the sum of the rows in an ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", "=", "36"}], TraditionalForm]]],
 " triangle ",
 StyleBox["also ",
  FontSlant->"Italic"],
 "equal to the sum of squared or cubed primes?\[LineSeparator]",
 StyleBox["\n",
  FontWeight->"Plain"],
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJztnW2ILVt611v9ODCXm6/DcLC/jB80B2kUUbEJdPAF4YCXVhGh46idoAkt
o9hEMMcowRYkbQbFnMilow7c65lkDsxgwqSZOTCMjgkNDZOMSob2OC8wM37o
c28UnG/lY//pJ89db7v23rX3rl39+9E0tatWrVq1atX6r+ep9fL7P37yFz7+
+3Z2dv7I79nZ+fjv3dn5/9sdAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAQG/ef//7f/mvvPuDf/iT/+Ln/tPykbx9cWXbf3L/mW3b
31f+yzdtj0cet+2QbVtIxWCH/vE/+WLcbsQZz/UwOvf4x14ozN/7+79iG9pp
IW2/p9YOffqXf/Nb337vz/35f6tzv/Zfv6f4bUOR669xrodPwtghJSnGGa/l
+WBR1c5NtmP4uK2b/fyvfb0Wf+1ekvC+P0mzb1v+K7xdq3FdT3M8NwlTzP8Y
fzw3pj+mLck3T08MX8uTeK3a/fbJh6QMFO89pieeG7djmFr6k/z3PIz3VXum
jTzxeJJyUryXpEwW34ta2uIzSsLEOItlo1ae+5TPaoUFMA9WJiVPLlILY8XS
IrHSq3dKSmelt/jfSrK9HRa4u6ucbVsJiNu1OP1cO6p6RoppRz1Owy6kDdvj
b7S9cRbG7tr+7L3T5XTI5Fs1hl2iu3tha+fahu23/3kYu6h2xjjjtaT4HqZ2
rm/H8HHbblx1o5JUjL92L8m9xzR4muM92n+1JSxVtevGNMdzkzDF/I/xx3OT
9HvaYppjemL4Wp7Ea9Xut08+JOGL9x7Tk5zr2zFMLf1Jmj0P433VnmktzhhP
ks/Fe0nKZ/G9qKUtPqMkfIyzWDZq5blP+ewAhsCKk9t3VjhtW//VbHMzU/t1
ijfnYqPUz9JPK8x661W8Tb+S7e7upbAXzRJgeyTWcbsWp7Z1rt+FlFdJ0pvV
lVTS3iBFrrfYQioBSpW9jDpRId0+ys9VGEuY0hnDKA3e8FCcybW6u+ZuHr+f
m8QTw/u2/vzea/EX7yUJH2u8JB90j1YAVEL0xIvXzdOsc5MwxfyP8Sd5G9Mf
0+ZpjumJ4Wt5klyreL998iHur917TE88N4/H77GY/hg+L4e6r8YzLcaZx6Mw
tXtJ9hffi1ra4jNKwscyX3s3a+V5ZvnsAAbCiqKpj9UJKvmSKit+tq1GXSzn
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
1uhflea2Pd5Wva96toQVqaQ+GTdUcj0u0C1abBTgQaFVHgafMG0VKqnxgDW/
3zhVcl7tGMTj2s3Kqzb6Fhy9tbLi26Mv1R5Yqd912h7X9XitAWAB1Igd1l02
iEpa5eyzCmg4oVHrbDlClVT/z7kydmGVNGmLedXubzMTmZOWGI/NIp85MGQV
BSnSUyWtheBTNlmyo7j3mZ5oI6VI3z7WfFEA6M/g3RRXMUOdbTeq/RGq5AKf
tBZWSfXY8bwyaVtyegF3/yq2PmMnuxX7XXuqpKV2b2/v9A73YOtQn+mJ1l+K
NrtqJwD0xFRywJ4DzHZ+cXGxqXUYN8hKVzzpqZJR0GU8+hfVPtMTrb8U2Xu3
ir4BADAswy6H9MBVUtbBaNeAXimr64WywHfJpN9Rn+mJ1lyKFnDLw/JoIPCm
UwHbh5kAQ9VvD1wl19Dhc8wcHR2twjiaVyXNZtQHVu8w3Gd6ojWXovUvrQJi
ycFWsAAzPTkJWpNodelx5lobQgPHlr/oQ1ZJrIMVmdL9VVKT7OmjahxT02d6
onWWovZYWlgdt7e32JKwGEP151+PSpoemc2iQW2PHz/OR7ptxOeJddDd1f+D
+137q6QpY+ydmzdfG9MTrU0la99wNTFgd6/psYkbJ2xM7qtxqLsfPJu0CpQ/
Tvye64u4iXwiJp9TUXizJK6w5jtFVCUtpapF2Xaynsb+4PJbKKbWGz95H/ja
IbninZjJvsyrSNKm21cHsFo+J6coDclOnwcyfy6ew740Tzwa5yFJRlX7zeYJ
qx3yXt8WlWKOz1qJ9Gkq48uS5FLyHsWHVXy4Kq5+jzH/tcfnW1PIJJJaueru
e+gVn6wnrM9ONbC9nCRZPcj81etRSTk2Gyq5/sm+1GlnzRcdJ4NPWLHAd0m9
y0WnTW16IpWixVPZm9oE+Pp4qsqq4RVs+IiKh6w+rDmvLJcaU0YU57iwqinZ
acFyJ7bXYBY4qUjtpyudJSzvRF2bP8RupJZaq1FrFmL7UJLPtscz0JKR3Jcl
VYvKWbBilhaTl+xUQ07b+WoCdkhaZsGStPldWAnJmz1+KMntxiFPQPEJKp2W
mIZDUmvj1o4mGailK7pQrjShSn6PSlJ336ZNrqi70KWTwmPR6vUpFuw8tuJO
O1Etq9q9a2DIMobAw/S40qU/MnhuLDarQGMOotpcfGsoRe0pW70Nny9+7Vg9
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
WKolVdLbeBoR7Mzrd21MBNeHxWyr5Vdh1uPwaRCKdsrgpSifslVzqkgCkqaF
Xu2iSqoiTZq43d1t6i5UcyYnupWUV+/FZpLqW00RUCsVmjslOcXCqzKJtaXf
aWzkO/4BYicb1e4Jzuv2xkRPSWCvq/No2ydG2hPgDKiSibXSTrBPCaKf3krJ
pUpTfxSvm8iiIimmUy2TePWkKo6S1D63dkeNo41MVuQqyYmWaaYy3+/tAc+Q
eDu2M0YVM0TvaU16dG6+v08/hGmr5FyDGnxauVpPkrlYUiWTJQWdBcYU1yaC
68kCy5gOtQqzmog1cR+2FOVTtrqmdGFS63hKo8b2FObirvE4yQsr8yT3auq6
xcjbouDnJj403YVuLR7auf/iIEFMkh0HeRVtNJmi8a0v5lgSYbz9ncxZN5dK
FpOdp7P2s79Kap2m4qw4NZWMczRpEt2dbJogBVDMyXXznIwlM0lncm7u0Ci2
T7SdqKScn3IF5Pc1r0p2wbOatMRUrrQEiYxEOQTyB+qWeN76kuW7U3EA6tZq
xcPaxm1bYMIqyfQpg9DHZZ2w/CrMSXu72Olo2FKUj/5IPg/l1UJbJZOvKqI2
T4hP3FqsvZU50UmrOsQbP0X/bbFdrZrETklMY/eAKdnJnXo7vOhpdPKav5Y5
NTOtGG0xQ5Knr4fV8LTsZCymkknJrKXfUf80+69Z7PToa1dXsIaQFS/nAeTt
jw99ZqGN3lpd3Q/JNNP95gVsAZX0dpQW9U5O1Py96stnARLJjpEU81830lhM
pyFJphRtl+OEZztvrHkEczHvRDTLr8K8kw3DyefFHbAUFadszVWyaGEVI9Sk
ZEWPRG52qQntV8krHzlCo7YqbYpftkn+yTJPsLwl7nuPNZXlvztS8th27j9A
qNpMDsmWVApdp9xAKOZPknVF23YuWzLu9x4miXGqxTvEwiopj2v+Zb+tkp7z
OjHRHb+QP9a8AZDbknGlEpfvZEbZnirp5M0M18qap72xs5jJxZKpXJLlq2DS
yiR+d8kW1bD2CJT5bS9ce+zbVFWyveYRzMW8g3CXX4U57xiTT6w3VCmq+Rzi
61ys8xvev6RZnpCcuJNRfNlj3ZKYTnm1k/R88GBeOdcSr1E5eWpryYs/80ON
JcPi1fOPofOq5EyfbZ8KPIkzN2d0lrrEJLdWS7BCqiz5WbXuN91dO6TYIEy+
S8bsan+r7fldUu262nfk/O6K9xvvK3cU6xnlvby6+1K3c9+ha6eyepESr8Lf
05wvdtop0pi5bktV8uv/69vfeO87jQDtNY9gXuZqdSy/CrOa017mi11eh1LJ
Rg8liV2x905XqZ3kuSq6d6zWtaO12ETypsvw8U41sT2vOs32qM7Mh9XkXjI1
wpWG5Nuo1v8qTvFkIb1aU50TjdCdii3Z3T9E7+Na9Mfqa1TPSrhrKoJ37fCa
dmGVVN2ePyY/KzdPGir57H5hKVeNhkr6p7cYiS6nW9Pny5kSL/TizOzjqu2k
gSRxLz7Z2v2qUOlaRYu7tiaRGiQeXoqZD1rxxPc352uddopYPVB0P65HJc2S
9fk2LRkqBnFOznm/Hv7kf/z5Rj28/EykkHNyctJz8sMlV2Hu7mpjvSneeyf3
mSymkj/x2Z/96ne/7j/bU7ZK8nYqyxgVx7X5ELPc7IrD1mr+n6Ry8JwpjoPT
tfJJLPPeQckpO3fO7XwwQq0vcWzVq6aNR/2mcl1+dj/Kb+eD44/isMfiiTEP
470U89zRInEebeLC7T9eUj7GfFBMPCv51FVLsJ8SXYiJ1ZZcPclh8aw5XrKR
J3G85M79umzFc6P1J3+I52SxVBR7pvmnzKSAieJYp+6+9eV5kjv2uw9meK0j
Wa23T6SWUd29WymfVGQ9KmkanafWMTt33snQGippd/qhD33IhPIlDMrnPvc5
y9hPfepTM5/OkqswC9k7Phym2KuwXeaLHLz9t63M+89BVgoDGD8y2+Owfch5
WeqsuH6P6yC0VfJjH/vYPqwAs9DffffdmU9nzLOdR5WU7tv/TTdAAGAsvHVH
rDSmp5KwcVa3vqQ18xpOiT5dmqNKmuKb7m+66QEA4yJxuqKSMDirU8mnTfp0
Lko8rgAAbVBJGJz1eFwXA5UEgLlAJWFwUEkAmAxbqpKf+Own/9Znzyzx/I3w
78c+c4pKAsA0+PJ2quTVt/67VXf8jfZv0wWkyvEv/bP9X/jRjecPf/zxty1/
f+rZ8Y9/5ummqy6ANfGN976zcVubP/74266/9lRvAAAAAAAAALApvvY/vvaJ
T/7dv/FPf/cr8Pv/5/2/+A//0h/8q3/I/tv2BtMGAACwWSSIUSVNNO0vbmwX
3/ret97+3NubTgUArAl75a2mSuoxqwT+zCf+rO38ym99pREMoA//6O2f9mJj
xqOXKzMzbXvrzEnTfVQS4IFg1dQf/9E/YW+9bfhOq9Os7or1QDHYFmF3tOkk
PGiiSn7+1z/vyijFtD0x8M++e247Y3vMiqL2WAm01poitFacCqrtNM1Vo85C
WpwyURMbNolEweyo/WmnJ1XBVP51lv7bK2AnegA70X76db09CQCTwSoKe8cT
l5cqhKiGxWBbhNW62L+bJarkp7/4aStgfsi2bY//tG2JkcxM+y8FlK6Zllk8
rnd2yP5cCqV6UjGdoqOSsGIkdi27hIRbflQLZmG0R6crhRJ0JdXCuIZa6dIG
KgkwPVRReD8KtdJlM+bN6SSYY5WMDtmJqii8YW//tcdisKNeL9lOnSLlVdUU
K7daJEmrvruvcr2etJ+qwSyAjBQPoJpZhoMFwGO2Tmq2pD3ExJa0IpEY/iZD
vsc9tLIlPQaJl++UVuoUbdciUaqkhvZfxcP/rJBETfc3wlVSJ1o8W+pjAYA2
8kpZdSGHql72WOeogZ0Hi5FYjaHmtNxcFszl0kKqre51jo5KCqV3rmJ2ivxX
xUhUtSatejc37ERXYdVa3d3HI23EylCONdtAJddJ/l1SspJ/l8z781jp8j3S
xMVUshhJrpLJ1dsqqdjyLxQAMA1iZWLViKw2KWN3X5tZLZEH8xhUy0Xr0uQs
BpDAqapRMJmN3X39424uhdd2IxLtcXswtvz1nch7huiTUxeqaImvbUcXH6yB
ZCRIo4+rnrIekD1Ne+4qk9pjT9ydqyohsV3nOy2MHKc66o7ZPBJvNSmYt9y6
u9LiZUw6HlXSXgQLJmOz+6CUA8BkiHWXve/qnBP7tcoblgfzGNya8z0W3pTI
f0ryFlDJWiSeMNVgMVh3bybUVFJI6KnT1kbs7qI99pga4yU9vB+NHW8kXh5h
bCP5hv0lXw16RuIduRXMPRhWYOT/l4YqhVJJ9TWyozhdAaaHN6HVP0etYhcX
F69iMMf2xNpM9pp00E6xba+R/LunjvpO7y+k+NuRxFa9fxVSSmyPVFvfuaJK
qsazPwVOVBgmRvR+AAAsQ/Itrwvt/Ng8zoM5FiY2s7t7XfMYvKNg0uCPfST0
sTKaG7VIkla9J0zB8gtZgmWE2oZFYi1/RYvTdcJYAcZXAACTIXpcAZYkGfAI
ALDtyL7bdCoAAABGRzLgEQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAALaI/wdXNbMT
     "], {{0, 309}, {610, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag[
    "Byte", ColorSpace -> "RGB", ImageSize -> Automatic, Interleaving -> True,
      Magnification -> Automatic],
    Selectable->False],
   BaseStyle->"ImageGraphics",
   ImageSize->Automatic,
   ImageSizeRaw->{610, 309},
   PlotRange->{{0, 610}, {0, 309}}]]],
 "\n",
 StyleBox["Note: Unicode has 95,221 characers as of 10/06/10. ",
  FontSize->14,
  FontWeight->"Plain"],
 StyleBox["\n\nTo test the theory I have written a companion python program, \
called ",
  FontWeight->"Plain"],
 StyleBox["prime-square-sum.py",
  FontWeight->"Plain",
  FontVariations->{"Underline"->True}],
 StyleBox[" available on github at (",
  FontWeight->"Plain"],
 StyleBox["https://github.com/djdarcy/Prime-Square-Sum",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["). The application has currently summed almost 50 million prime \
numbers. ",
  FontWeight->"Plain"]
}], "Text",
 CellChangeTimes->{{3.481656185151375*^9, 3.48165623607325*^9}, {
   3.481656281713875*^9, 3.481656394526375*^9}, {3.481656468057625*^9, 
   3.481656468526375*^9}, {3.4816615969795*^9, 3.48166159713575*^9}, {
   3.4953954955769997`*^9, 3.495395527284*^9}, {3.4954023948050003`*^9, 
   3.495402591725*^9}, {3.495402702317*^9, 3.495402708697*^9}, {
   3.561917507663*^9, 3.561917512178*^9}, {3.5619176308199997`*^9, 
   3.5619178357720003`*^9}, {3.561917868233*^9, 3.561917949171*^9}, {
   3.561917991288*^9, 3.5619180398459997`*^9}, {3.561918080608*^9, 
   3.561918081343*^9}, {3.5619181748190002`*^9, 3.5619181754300003`*^9}, {
   3.561918519455*^9, 3.561918577144*^9}, {3.561919161301*^9, 
   3.561919165329*^9}, {3.561919216168*^9, 3.561919236572*^9}, {
   3.561933953736*^9, 3.5619339662790003`*^9}, {3.561934008961*^9, 
   3.5619340092720003`*^9}, {3.561934121775*^9, 3.561934137042*^9}, 
   3.561934177883*^9, {3.5619342180109997`*^9, 3.5619342950369997`*^9}, {
   3.5619343346730003`*^9, 3.561934417532*^9}, 3.5619350401429996`*^9, {
   3.561940914071*^9, 3.561940915451*^9}, {3.5619419190439997`*^9, 
   3.56194198849*^9}, {3.561942027698*^9, 3.561942035476*^9}, {
   3.5622632382530003`*^9, 3.562263254507*^9}, {3.5635902271368*^9, 
   3.563590236918*^9}, {3.5635903864918003`*^9, 3.5635903892072*^9}, {
   3.5635904295664*^9, 3.5635904307208*^9}, 3.5635904945776*^9, {
   3.5635905772324*^9, 3.5635905867328*^9}, {3.5709385857886925`*^9, 
   3.570938609898692*^9}, {3.5709386506426926`*^9, 3.5709386894066925`*^9}, {
   3.5709387383436923`*^9, 3.5709387383436923`*^9}, {3.570938771082692*^9, 
   3.5709388611136923`*^9}, {3.570938903636692*^9, 3.5709389134886923`*^9}, {
   3.570938979898692*^9, 3.5709390734136925`*^9}, {3.570953892141*^9, 
   3.5709539078780003`*^9}, {3.570953953941*^9, 3.570954070409*^9}, {
   3.570956188686*^9, 3.570956190012*^9}, {3.5810485239817824`*^9, 
   3.5810485369545245`*^9}, {3.5810487866728077`*^9, 
   3.5810488028267317`*^9}, {3.581050448540861*^9, 3.5810504497759314`*^9}, 
   3.5810801464414835`*^9, {3.588173756591592*^9, 3.58817375690561*^9}, {
   3.58817697667877*^9, 3.588177000299122*^9}, 3.5881788330649495`*^9, {
   3.588179437524523*^9, 3.5881794438668857`*^9}, {3.6541287479741583`*^9, 
   3.654128748417715*^9}, {3.6541289833200436`*^9, 3.654129977879837*^9}, {
   3.654130010525982*^9, 3.654130059891751*^9}, {3.654130484199131*^9, 
   3.654130487803089*^9}, {3.6541305855084953`*^9, 3.6541307340323563`*^9}, {
   3.654130766602492*^9, 3.654130786317995*^9}, {3.654130820791873*^9, 
   3.6541308532915*^9}, {3.6541309112713623`*^9, 3.6541310278616676`*^9}, {
   3.6541310878347836`*^9, 3.6541312032679415`*^9}, {3.654131242271894*^9, 
   3.6541312427994614`*^9}, {3.6541312820159407`*^9, 
   3.6541312981179857`*^9}, {3.65413133248985*^9, 3.654131359784316*^9}, {
   3.6541314215801635`*^9, 3.654131470833418*^9}, {3.6541315129797697`*^9, 
   3.6541315269575443`*^9}, {3.6541316361439095`*^9, 3.654131657158078*^9}, {
   3.6541316992404213`*^9, 3.654131702875883*^9}, {3.654131832241811*^9, 
   3.6541318436417584`*^9}, {3.654133379319765*^9, 3.6541334732596936`*^9}, {
   3.654136770398377*^9, 3.6541367744818954`*^9}, {3.6541368235911317`*^9, 
   3.654136925883621*^9}, {3.6541475449545717`*^9, 3.6541475565120397`*^9}, {
   3.6541476403546863`*^9, 3.6541477104155827`*^9}, {3.6541477464546595`*^9, 
   3.6541478044880285`*^9}, {3.657138340013932*^9, 3.657138363202258*^9}, {
   3.657138402406501*^9, 3.6571384432288356`*^9}, {3.6571384783018417`*^9, 
   3.657138501114146*^9}, {3.6571386791293287`*^9, 3.6571386801103845`*^9}, {
   3.6571390491694937`*^9, 3.6571390497385263`*^9}, {3.657168633631251*^9, 
   3.6571686364421077`*^9}, {3.6571944090953407`*^9, 
   3.6571944438272505`*^9}, {3.6571945870114326`*^9, 3.657194588759155*^9}, {
   3.657420961985185*^9, 3.6574209679624443`*^9}, {3.6574253304639115`*^9, 
   3.6574253526462283`*^9}}],

Cell[CellGroupData[{

Cell[TextData[StyleBox["",
 FontSlant->"Italic"]], "Subsubsection",
 CellChangeTimes->{{3.6575208108493805`*^9, 3.6575208853183374`*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{"discussion", " ", 
    RowBox[{"at", ":", " ", "http", ":"}]}], "//", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"mathematica", ".", "stackexchange", ".", "com"}], "/", 
       "questions"}], "/", "100498"}], "/", "nesting"}], "-", "baseform", "-",
     "several", "-", "functions", "-", "deep", "-", "causes", "-", 
    "dependent", "-", "functions", "-", "to", "-", "not", "-", "fully"}]}], 
  " ", "*)"}]], "Input",
 CellChangeTimes->{{3.6575211245412145`*^9, 3.657521141311844*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"baseForm", "[", 
   RowBox[{"num_", ",", "n_"}], "]"}], ":=", 
  RowBox[{"BaseForm", "[", 
   RowBox[{
    RowBox[{"num", "//.", 
     RowBox[{
      RowBox[{"BaseForm", "[", 
       RowBox[{"a_", ",", "_"}], "]"}], "\[RuleDelayed]", "a"}]}], ",", "n"}],
    "]"}]}]], "Input",
 CellChangeTimes->{{3.6575207909553547`*^9, 3.657520790956355*^9}, {
   3.657520867260044*^9, 3.6575208760521603`*^9}, 3.657521118699973*^9, {
   3.6575212504667053`*^9, 3.657521257420088*^9}, 3.6575225975692654`*^9}],

Cell[BoxData[
 RowBox[{"Clear", "@", "baseForm"}]], "Input",
 CellChangeTimes->{{3.6575525103357043`*^9, 3.6575525248920527`*^9}}],

Cell[BoxData[
 RowBox[{"baseForm", "/:", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"c", ":", 
     RowBox[{"Except", "[", 
      RowBox[{"SetDelayed", "|", "baseForm"}], "]"}]}], ")"}], "[", 
   RowBox[{"d___", ",", 
    RowBox[{"baseForm", "[", 
     RowBox[{"a_", ",", "b_"}], "]"}], ",", "e___"}], "]"}], ":=", 
  RowBox[{"baseForm", "[", 
   RowBox[{
    RowBox[{"c", "[", 
     RowBox[{"d", ",", "a", ",", "e"}], "]"}], ",", "b"}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"baseForm", "/:", 
  RowBox[{"MakeBoxes", "[", 
   RowBox[{
    RowBox[{"baseForm", "[", 
     RowBox[{"a_", ",", "b_"}], "]"}], ",", "fmt_"}], "]"}], ":=", 
  RowBox[{"ToBoxes", "@", 
   RowBox[{"BaseForm", "[", 
    RowBox[{"a", ",", "b"}], "]"}]}]}]], "Input"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Creating an Algorithm ...", "Subtitle",
 CellChangeTimes->{{3.561918124946*^9, 3.5619181286099997`*^9}}],

Cell["\<\
The first goal is to create an algorithm to sum the rows of an arbitrary \
n-sized triangular number. \
\>", "Text",
 CellChangeTimes->{{3.654132270633479*^9, 3.6541323015894103`*^9}, {
  3.6541478365941057`*^9, 3.6541478374837184`*^9}, {3.657158741497609*^9, 
  3.65715874268576*^9}, {3.657487140954347*^9, 3.657487151002623*^9}, {
  3.657520169597452*^9, 3.6575201808868856`*^9}, {3.6575207189607124`*^9, 
  3.657520766792286*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"tri", "[", "n_", "]"}], ":=", 
  FractionBox[
   RowBox[{
    SuperscriptBox["n", "2"], "+", "n"}], "2"]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.490211159375*^9, 3.490211220907*^9}, {3.490211285296*^9,
    3.490211297611*^9}, {3.654131886833243*^9, 3.654131892116914*^9}, 
   3.6574202274644127`*^9, {3.657486966116145*^9, 3.657486983903904*^9}, {
   3.6575208054536953`*^9, 3.6575208055337057`*^9}, {3.657581116707252*^9, 
   3.65758113724236*^9}, {3.6575812579946938`*^9, 3.657581267794438*^9}, {
   3.6575841961127872`*^9, 3.6575842024500914`*^9}}],

Cell[TextData[{
 "      ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]]],
 " specifies the size of the base of the triangle\n      ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]]],
 " optionally allows a us to specify if we want to view the result in \
something other than base-10 \n\n",
 Cell[BoxData[
  FractionBox[
   RowBox[{
    SuperscriptBox["n", "2"], "+", "n"}], "2"]],
  InitializationCell->True,
  CellChangeTimes->{{3.490211159375*^9, 3.490211220907*^9}, {
    3.490211285296*^9, 3.490211297611*^9}, {3.654131886833243*^9, 
    3.654131892116914*^9}, 3.6574202274644127`*^9, {3.657486966116145*^9, 
    3.657486983903904*^9}}],
 " is the standard form for a triangular number."
}], "Text",
 CellChangeTimes->{{3.56192674594*^9, 3.56192677231*^9}, {3.561928390248*^9, 
   3.561928390917*^9}, {3.657158756931569*^9, 3.657158757063586*^9}, 
   3.657487009193616*^9, {3.6574871376269245`*^9, 3.657487236282452*^9}, {
   3.6574961302963486`*^9, 3.6574961503538957`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"tri", "[", "5", "]"}]], "Input",
 CellChangeTimes->{{3.49021685492*^9, 3.490216857384*^9}, 
   3.6574202349153595`*^9, {3.6574869926455145`*^9, 3.6574869954833746`*^9}}],

Cell[BoxData["15"], "Output",
 CellChangeTimes->{
  3.49021685785*^9, 3.490540749337*^9, 3.490540865021*^9, 3.490540978551*^9, 
   3.561928177576*^9, 3.578710494725487*^9, 3.588173266681571*^9, 
   3.5881743943940725`*^9, 3.588174518749185*^9, 3.5881757447463083`*^9, 
   3.5881766724663706`*^9, 3.5881806381101923`*^9, 3.589075723520624*^9, 
   3.5890783172549777`*^9, 3.589409732263935*^9, 3.589410538245034*^9, 
   3.6541319025347366`*^9, 3.654135366656124*^9, 3.654140095875659*^9, 
   3.657140603327386*^9, 3.657163961951523*^9, 3.657164168383236*^9, 
   3.6574207796615334`*^9, 3.657421427466794*^9, 3.6574226258064637`*^9, 
   3.6574227723490725`*^9, 3.6574235422328353`*^9, 3.6574243553715906`*^9, {
   3.657486989730644*^9, 3.6574869959024277`*^9}, 3.6574942737345953`*^9, 
   3.657496590216251*^9, 3.6574969550100737`*^9, 3.657497004815398*^9, 
   3.657497229375414*^9, 3.657521019972436*^9, 3.6575532386956944`*^9, 
   3.6575533004785395`*^9, 3.65758127041127*^9, 3.6575851311245184`*^9, 
   3.6575904652823706`*^9, 3.657592912291601*^9}]
}, Open  ]],

Cell["\<\
Example: 
     e
    c d 
   9 a b
 5 6 7 8
0 1 2 3 4 \
\>", "Text",
 CellChangeTimes->{{3.561926777771*^9, 3.561926847051*^9}, {3.561926917344*^9,
   3.561926931995*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"tri", "[", "4", "]"}]], "Input",
 CellChangeTimes->{{3.4902111825290003`*^9, 3.490211183894*^9}, 
   3.6574202362565293`*^9}],

Cell[BoxData["10"], "Output",
 CellChangeTimes->{{3.4902111841470003`*^9, 3.490211208924*^9}, {
   3.490211259972*^9, 3.490211298775*^9}, 3.490540749399*^9, 
   3.490540865043*^9, 3.4905409785959997`*^9, 3.561928177605*^9, 
   3.5787104947484884`*^9, 3.5881732667075725`*^9, 3.588174394424074*^9, 
   3.588174518771186*^9, 3.588175744768309*^9, 3.5881766724843717`*^9, 
   3.588180638135194*^9, 3.589075723531625*^9, 3.5890783172709785`*^9, 
   3.5894097322749357`*^9, 3.5894105382600355`*^9, 3.6541319025492387`*^9, 
   3.6541353666726265`*^9, 3.6541400958921614`*^9, 3.657140603342387*^9, 
   3.6571639619820266`*^9, 3.6571641683962383`*^9, 3.6574207796755347`*^9, 
   3.6574214274827957`*^9, 3.657422625824966*^9, 3.657422772365074*^9, 
   3.6574235422508373`*^9, 3.6574243553935933`*^9, 3.657494273748597*^9, 
   3.657496590234753*^9, 3.657496955032077*^9, 3.657497004836901*^9, 
   3.6574972293894157`*^9, 3.6575210199854374`*^9, 3.657553238708696*^9, 
   3.6575533004955416`*^9, 3.6575812704242716`*^9, 3.65758513113802*^9, 
   3.657590465300373*^9, 3.6575929123046026`*^9}]
}, Open  ]],

Cell["\<\
Example:
     9          row #1
    7 8        row #2
  4 5 6       row #3
 0 1 2 3     row #4\
\>", "Text",
 CellChangeTimes->{{3.5619268671689997`*^9, 3.561926902149*^9}, {
  3.561926949759*^9, 3.561926965666*^9}, {3.6571578324836793`*^9, 
  3.65715785225569*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"tri", "[", "3", "]"}]], "Input",
 CellChangeTimes->{{3.4902115413900003`*^9, 3.490211559282*^9}, 
   3.6574202375651956`*^9}],

Cell[BoxData["6"], "Output",
 CellChangeTimes->{{3.490211544277*^9, 3.4902115597*^9}, 3.49054074942*^9, 
   3.490540865066*^9, 3.490540978624*^9, 3.561928177638*^9, 
   3.57871049477149*^9, 3.5881732667305737`*^9, 3.5881743944520755`*^9, 
   3.588174518788187*^9, 3.5881757447913103`*^9, 3.5881766724973726`*^9, 
   3.5881806381601954`*^9, 3.5890757235426254`*^9, 3.5890783172889795`*^9, 
   3.5894097322869363`*^9, 3.5894105382760363`*^9, 3.6541319025617404`*^9, 
   3.654135366689129*^9, 3.6541400959086633`*^9, 3.657140603356388*^9, 
   3.6571639620125303`*^9, 3.657164168408739*^9, 3.6574207796875362`*^9, 
   3.6574214274982977`*^9, 3.6574226258434687`*^9, 3.657422772380576*^9, 
   3.6574235422673397`*^9, 3.657424355414096*^9, 3.6574942737620983`*^9, 
   3.6574965902537556`*^9, 3.6574969550555797`*^9, 3.6574970048574038`*^9, 
   3.6574972294034176`*^9, 3.6575210199989395`*^9, 3.6575532387226973`*^9, 
   3.657553300512044*^9, 3.657581270436273*^9, 3.657585131152022*^9, 
   3.657590465317875*^9, 3.6575929123186045`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"tri", "[", "2", "]"}]], "Input",
 CellChangeTimes->{{3.490211581092*^9, 3.490211614477*^9}, 
   3.657420238449308*^9}],

Cell[BoxData["3"], "Output",
 CellChangeTimes->{{3.4902115829519997`*^9, 3.490211614808*^9}, 
   3.4905407494440002`*^9, 3.4905408650880003`*^9, 3.490540978649*^9, 
   3.561928177658*^9, 3.5787104947934914`*^9, 3.588173266753575*^9, 
   3.5881743944800773`*^9, 3.588174518804188*^9, 3.5881757448083115`*^9, 
   3.588176672510373*^9, 3.5881806381751957`*^9, 3.5890757235546265`*^9, 
   3.5890783173059807`*^9, 3.589409732297937*^9, 3.589410538291037*^9, 
   3.654131902575742*^9, 3.654135366706131*^9, 3.654140095925165*^9, 
   3.657140603371389*^9, 3.6571639620425344`*^9, 3.6571641684217415`*^9, 
   3.657420779701038*^9, 3.6574214275143003`*^9, 3.657422625861971*^9, 
   3.6574227723965783`*^9, 3.6574235422833414`*^9, 3.6574243554340982`*^9, 
   3.6574942737751007`*^9, 3.657496590272258*^9, 3.6574969550790825`*^9, 
   3.6574970048784065`*^9, 3.657497229418419*^9, 3.6575210200129414`*^9, 
   3.6575532387372*^9, 3.6575533005280457`*^9, 3.6575812704482746`*^9, 
   3.6575851311660233`*^9, 3.6575904653858833`*^9, 3.6575929123331065`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"tri", "[", "1", "]"}]], "Input",
 CellChangeTimes->{{3.490216265215*^9, 3.490216267067*^9}, 
   3.657420239211405*^9}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGDQAOJvGjma/IyvHG//XDdzLZB226a8AkT/WRm6DUR/umS6
71rnK8ctCresb6585bjtZsSup7tfOeo5Bbg/A9J/7W6FgejJEVIfQLTXdoGU
50BaQuxY8EsgPU+yKHHe3leOd0NXLZ0PpBfc6qxw3PfK8f4hz7sg+sy5S+Jb
LF87bpO+fmIrkFZR+ie+A0hvyM3RL7R/7RgS5jS9BkgHPuXdCKItLpb9/Qmk
uT4U+P0C0vs0bJ6A6DvGvd9AtOWUk2G/gbTBhLw9INrKxvKBrMNrR6mwk4zy
QLrKJ1kfRH87PscURNfdWhsIorffaXivBaSvc95YZQWkP+RM3ASia7adi/IA
0kcOpdp6AemVTro3fIB0kzQ3lx+QBgCu7qgJ
  "]]
}, Open  ]],

Cell[TextData[{
 "The width and height of any triangular number are both equal to ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", " "}], TraditionalForm]]],
 "in ",
 Cell[BoxData[
  FormBox[
   RowBox[{"tri", "(", "n", ")"}], TraditionalForm]]],
 ".\n\nNote: subtracting between any two adjacent triangular numbers ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{
     RowBox[{"tri", "(", "3", ")"}], ",", 
     RowBox[{"tri", "(", "4", ")"}]}], "}"}], TraditionalForm]]],
 " gives the ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]]],
 "-value for the larger triangular number"
}], "Text",
 CellChangeTimes->{{3.490218173995*^9, 3.490218183085*^9}, {
  3.6541321372900467`*^9, 3.6541321434058237`*^9}, {3.654132191845975*^9, 
  3.65413224133976*^9}, {3.6541323756698174`*^9, 3.6541325803243055`*^9}, {
  3.6541329908074303`*^9, 3.6541330011917486`*^9}, {3.654133079789729*^9, 
  3.6541331091414566`*^9}, {3.654133151449829*^9, 3.6541332796786118`*^9}, {
  3.6541335021343603`*^9, 3.654133693590672*^9}, {3.654133730861405*^9, 
  3.654133758109865*^9}, {3.654134391470792*^9, 3.654134417980658*^9}, {
  3.6541344570526195`*^9, 3.6541344851046815`*^9}, {3.6574209710168324`*^9, 
  3.6574209710168324`*^9}, {3.6574804244164553`*^9, 3.657480425841136*^9}, {
  3.657487275932987*^9, 3.657487295942528*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"tri", "[", "4", "]"}], "-", 
  RowBox[{"tri", "[", "3", "]"}]}]], "Input",
 CellChangeTimes->{{3.657420240429559*^9, 3.6574202410836425`*^9}, {
  3.657521229368026*^9, 3.657521231245264*^9}, {3.65759103401309*^9, 
  3.6575910365584135`*^9}}],

Cell[BoxData["4"], "Output",
 CellChangeTimes->{
  3.4902164446949997`*^9, 3.4905407494890003`*^9, 3.490540865138*^9, 
   3.490540978699*^9, 3.5619281777060003`*^9, 3.578710494838494*^9, 
   3.5881732668005776`*^9, 3.5881743945360804`*^9, 3.58817451883619*^9, 
   3.588175744837313*^9, 3.5881766725353746`*^9, 3.588180638205198*^9, 
   3.5890757235776277`*^9, 3.5890783173399825`*^9, 3.5894097323189383`*^9, 
   3.589410538320039*^9, 3.654131902601245*^9, 3.654135366738135*^9, 
   3.65414009595817*^9, 3.6571406034043903`*^9, 3.6571639621035423`*^9, 
   3.6571641684472446`*^9, 3.657420779725541*^9, 3.657421427544304*^9, 
   3.657422625897975*^9, 3.6574227724280825`*^9, 3.6574235423158455`*^9, 
   3.657424355475604*^9, 3.6574942738031034`*^9, 3.6574965903102627`*^9, 
   3.6574969551270885`*^9, 3.657497004922412*^9, 3.657497229447423*^9, 
   3.6575210200399446`*^9, 3.657521105777332*^9, {3.6575212154817624`*^9, 
   3.6575212314517903`*^9}, 3.657553238766203*^9, 3.6575533005610504`*^9, 
   3.6575812704707775`*^9, 3.6575851311930275`*^9, 3.65759046543289*^9, 
   3.6575910371034822`*^9, 3.6575929123611097`*^9}]
}, Open  ]],

Cell[TextData[{
 "Worded another way, the smaller preceding triangular number (ie. ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"tri", "(", "3", ")"}], "=", "6"}], TraditionalForm]]],
 ") is added to the sum of the ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]]],
 " of the next (ie. ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"n", "=", "4"}], ";", 
    RowBox[{"tri", "(", "4", ")"}]}], TraditionalForm]]],
 ") to arrive at the larger ",
 Cell[BoxData[
  FormBox[
   RowBox[{"tri", "(", "n", ")"}], TraditionalForm]]],
 " value (ex. ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"tri", "(", "3", ")"}], "+", "4"}], "=", 
    RowBox[{
     RowBox[{"tri", "(", "4", ")"}], "=", "10"}]}], TraditionalForm]]],
 "). Proof:"
}], "Text",
 CellChangeTimes->{{3.6541337117939835`*^9, 3.654133722483841*^9}, {
  3.6541337757085996`*^9, 3.6541337943179626`*^9}, {3.6541338461100397`*^9, 
  3.6541338943056593`*^9}, {3.654134188894068*^9, 3.6541342148918686`*^9}, {
  3.6541369818442273`*^9, 3.654137037881843*^9}, {3.6541371733945513`*^9, 
  3.6541371811455355`*^9}, {3.654147853024192*^9, 3.6541479220579576`*^9}, {
  3.6541479571939197`*^9, 3.6541479824481263`*^9}, {3.6541480327500143`*^9, 
  3.6541480485585213`*^9}, {3.654148096884158*^9, 3.6541481233125143`*^9}, {
  3.6541487340820723`*^9, 3.6541487466481676`*^9}, {3.6571861211842594`*^9, 
  3.657186145866671*^9}, {3.657192288313035*^9, 3.657192289479183*^9}, {
  3.657420972236487*^9, 3.657420977786192*^9}, {3.6574804222851844`*^9, 
  3.657480442560259*^9}, {3.657480476736599*^9, 3.657480477750228*^9}, {
  3.6574943907184505`*^9, 3.657494403590085*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"tri", "[", "x", "]"}], "+", 
     RowBox[{"(", 
      RowBox[{"x", "+", "1"}], ")"}]}], "\[Equal]", 
    RowBox[{"tri", "[", 
     RowBox[{"x", "+", "1"}], "]"}]}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.6541340322246733`*^9, 3.65413415828168*^9}, {
  3.6574202425033226`*^9, 3.657420243687973*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.6541341359238415`*^9, 3.6541341585042086`*^9}, 
   3.654135366754637*^9, 3.6541400959741716`*^9, 3.6571406034313917`*^9, 
   3.657163962134046*^9, 3.657164168460746*^9, 3.657420779748044*^9, 
   3.657421427559806*^9, 3.6574226259154778`*^9, 3.657422772444084*^9, 
   3.657423542332348*^9, 3.657424355501107*^9, 3.6574942738181057`*^9, 
   3.657496590330265*^9, 3.6574969551510916`*^9, 3.6574970049459147`*^9, 
   3.657497229465925*^9, 3.657521020068448*^9, 3.6575532387807055`*^9, 
   3.657553300589554*^9, 3.6575812704827795`*^9, 3.657585131207529*^9, 
   3.657590465452392*^9, 3.657592912374612*^9}]
}, Open  ]],

Cell[TextData[{
 "This behavior may factor into the special relationship between ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", "=", "4"}], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", "=", "36"}], TraditionalForm]]],
 " in some way. "
}], "Text",
 CellChangeTimes->{{3.6541337117939835`*^9, 3.654133722483841*^9}, {
  3.6541337757085996`*^9, 3.6541337943179626`*^9}, {3.6541338461100397`*^9, 
  3.6541338943056593`*^9}, {3.654134188894068*^9, 3.6541342148918686`*^9}, {
  3.6541369818442273`*^9, 3.654137037881843*^9}, {3.6541371733945513`*^9, 
  3.6541371811455355`*^9}, {3.654147853024192*^9, 3.6541479220579576`*^9}, {
  3.6541479571939197`*^9, 3.6541479824481263`*^9}, {3.6541480327500143`*^9, 
  3.6541480485585213`*^9}, {3.654148096884158*^9, 3.654148130803965*^9}}],

Cell[TextData[{
 "To calculate the sum of the rows of a triangular number (ex. ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"tri", "(", "3", ")"}], " ", "=", "6"}], ";", " ", 
    RowBox[{
     RowBox[{"012", " ", "+", " ", "34", " ", "+", " ", "5"}], " ", "=", " ", 
     "51"}]}], TraditionalForm]]],
 ") we\[CloseCurlyQuote]ll need to know how many rows to count. The ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]]],
 " in ",
 Cell[BoxData[
  FormBox[
   RowBox[{"tri", "(", "n", ")"}], TraditionalForm]]],
 " is equal to the total number of rows. \n\nSince ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]]],
 " could be a bit more descriptive. We\[CloseCurlyQuote]ll encapsulate the ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]]],
 " in a function called max increment (",
 Cell[BoxData[
  FormBox[
   RowBox[{"mi", "(", ")"}], TraditionalForm]]],
 " for short) to indicate the maximum upper bound of the summation (",
 Cell[BoxData[
  FormBox[
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"i", "=", "0"}], 
     RowBox[{"mi", "(", ")"}]], "..."}], TraditionalForm]]],
 ").  This will make it easier later to see why and how we are using ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]]],
 " and  to explicitly show the total number of times the summation will have \
to increment. \n\nThis convention will be used commonly throughout the \
notebook even though the function itself is very simple (",
 StyleBox["mi()",
  FontSlant->"Italic"],
 " is a glorified subtraction: ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", "-", "1"}], TraditionalForm]]],
 "). The algorithm starts at 0 so we need to subtract 1. \n\nWe define \
function ",
 Cell[BoxData[
  FormBox[
   StyleBox[
    RowBox[{"mi", "(", ")"}],
    FontSlant->"Italic"], TraditionalForm]]],
 " to take the ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]]],
 " of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"tri", "(", "n", ")"}], TraditionalForm]]],
 " and second parameter to offset the value to remove 1. "
}], "Text",
 CellChangeTimes->{{3.588176612385934*^9, 3.5881766416306067`*^9}, {
   3.588179488679449*^9, 3.5881795082575684`*^9}, {3.588179908707473*^9, 
   3.5881799221632423`*^9}, {3.654132581659975*^9, 3.6541328237997227`*^9}, {
   3.6541328663221226`*^9, 3.654132980072067*^9}, {3.654134231052421*^9, 
   3.654134244683652*^9}, {3.654134284884257*^9, 3.654134355533728*^9}, 
   3.6541343894560356`*^9, {3.6541344447200537`*^9, 3.6541344506423054`*^9}, 
   3.6541344905928783`*^9, {3.6541345206566963`*^9, 3.654134625337989*^9}, {
   3.6541347330651684`*^9, 3.654134743810533*^9}, {3.654134903209774*^9, 
   3.6541349889001555`*^9}, {3.6541350463379493`*^9, 
   3.6541350966518383`*^9}, {3.6541351297220373`*^9, 3.654135210197757*^9}, {
   3.6541353905726614`*^9, 3.6541353911947403`*^9}, {3.6541370542604227`*^9, 
   3.6541370544479465`*^9}, {3.654137091910204*^9, 3.654137155085726*^9}, {
   3.6541371957858944`*^9, 3.654137271131962*^9}, {3.654148346954913*^9, 
   3.6541484195501313`*^9}, {3.6541484546150837`*^9, 
   3.6541484621860456`*^9}, {3.654148492739425*^9, 3.6541486200620933`*^9}, {
   3.654148681118346*^9, 3.6541486981030035`*^9}, {3.654148768312419*^9, 
   3.6541489421974993`*^9}, {3.654148975140682*^9, 3.654149021288042*^9}, {
   3.654149183978202*^9, 3.6541492309081607`*^9}, {3.6541492752747946`*^9, 
   3.65414938572832*^9}, {3.654149427404113*^9, 3.6541494459879723`*^9}, {
   3.6571386221150675`*^9, 3.657138622351081*^9}, {3.6571388601046796`*^9, 
   3.657138878282719*^9}, {3.657140839648903*^9, 3.657140839960921*^9}, {
   3.657157662760127*^9, 3.657157696716439*^9}, {3.657158823568031*^9, 
   3.657158824458144*^9}, {3.6571687491549206`*^9, 3.657168753017911*^9}, {
   3.6571853071597*^9, 3.6571855001527386`*^9}, {3.657185541567107*^9, 
   3.65718567484873*^9}, {3.6571857589765425`*^9, 3.6571859097931685`*^9}, {
   3.6571859710546722`*^9, 3.6571860519202976`*^9}, {3.657186168822984*^9, 
   3.657186303821706*^9}, {3.65718644849098*^9, 3.6571865921541977`*^9}, {
   3.657186644987219*^9, 3.657186689724778*^9}, {3.657186740204665*^9, 
   3.657186750481253*^9}, {3.6571867837931585`*^9, 3.6571868437245865`*^9}, {
   3.657188427847193*^9, 3.657188431728415*^9}, {3.6571921895674963`*^9, 
   3.657192191631258*^9}, {3.6571922528475313`*^9, 3.6571922562554646`*^9}, {
   3.657192587293501*^9, 3.6571925878510714`*^9}, {3.657193804676089*^9, 
   3.657193820361581*^9}, {3.657419616136284*^9, 3.6574196221185436`*^9}, {
   3.657420978754315*^9, 3.657420980728565*^9}, {3.657425397222889*^9, 
   3.6574254604539185`*^9}, {3.6574266382764826`*^9, 
   3.6574266584225407`*^9}, {3.6574873537928743`*^9, 
   3.6574874267506385`*^9}, {3.6574944282327137`*^9, 3.657494477334449*^9}, {
   3.6574945152742667`*^9, 3.6574946460843773`*^9}, {3.6574962088488235`*^9, 
   3.6574962094103947`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"mi", "[", 
   RowBox[{"n_", ",", "x_"}], "]"}], ":=", 
  RowBox[{"n", "+", "x"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.588176088770985*^9, 3.5881761204447966`*^9}, {
   3.588179878793762*^9, 3.588179879039776*^9}, {3.589075343807906*^9, 
   3.589075366908227*^9}, 3.6541352173231616`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"mi", "[", 
    RowBox[{"n", ",", 
     RowBox[{"-", "1"}]}], "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"n", ",", " ", "1", ",", " ", "4"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.490216793189*^9, 3.490216844167*^9}, {3.490218017789*^9,
    3.490218024818*^9}, {3.588176649611063*^9, 3.58817665182719*^9}, 
   3.588176706565321*^9, {3.589075370696444*^9, 3.5890753710934668`*^9}, 
   3.6541352239690056`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "1", ",", "2", ",", "3"}], "}"}]], "Output",
 CellChangeTimes->{
  3.5881767068843393`*^9, 3.5881798814619145`*^9, 3.588180638223199*^9, {
   3.5890753717315035`*^9, 3.5890753766657853`*^9}, 3.5890757236066294`*^9, 
   3.5890783173769846`*^9, 3.5894097324109435`*^9, 3.589410538351041*^9, 
   3.6541319026292486`*^9, 3.65413536677514*^9, 3.6541400959946737`*^9, 
   3.6571406034523935`*^9, 3.6571639621680503`*^9, 3.657164168477748*^9, 
   3.6574207797645464`*^9, 3.657421427578308*^9, 3.6574226259379807`*^9, 
   3.657422772462587*^9, 3.65742354235235*^9, 3.6574243555296106`*^9, 
   3.657494273834608*^9, 3.657496590355769*^9, 3.6574969551785955`*^9, 
   3.657497004969418*^9, 3.6574972294889283`*^9, 3.65752102008545*^9, 
   3.6575532387997074`*^9, 3.657553300613557*^9, 3.657581270496781*^9, 
   3.657585131225031*^9, 3.657590465477395*^9, 3.6575929123891134`*^9}]
}, Open  ]],

Cell["\<\
The first summed-row triangular number correspondence we are interested in is \
from ...\
\>", "Text",
 CellChangeTimes->{{3.490218187517*^9, 3.490218193803*^9}, {3.561927162369*^9,
   3.5619271667790003`*^9}, {3.588179514074901*^9, 3.5881795142529116`*^9}, {
  3.654134650481682*^9, 3.654134666791753*^9}, {3.6541354228317575`*^9, 
  3.6541354660117407`*^9}, {3.6541372847421904`*^9, 3.6541372849617186`*^9}, {
  3.6541491261413574`*^9, 3.654149132787701*^9}, {3.654149466066022*^9, 
  3.654149494890682*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"tri", "[", "36", "]"}]], "Input",
 CellChangeTimes->{{3.490211306435*^9, 3.490211307124*^9}, 
   3.6574202450251427`*^9}],

Cell[BoxData["666"], "Output",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGDQAOIvfxfs5WF85bhDbuPMtUBagkVtBYg+ohCxDUJb7LvW
+cpxlusd65srXzkaiEfverr7lWPXryD3Z0Da6sTtMBB9a4f0BxC9+KhgynMg
rTL9ePBLIH3xdHHivL2vHDtmr1k6H0hPaOitcNwH1LfM+y6Izpp4RXyL5WtH
xdCbJ7YC6b5oBokdQNqDNV+/0B7Ij3KbXgOkFTbwbwTRU+5W/P0JpH1+FPn9
AtKZ0+2egOhGn/5vIHrJ2dNhv4G0zObCPSB6m7L1A1mH145ZXGcY5YF0XXGa
Pohu2zjfFESvM9kQCKK36TW/1wLSUkK3VlkB6YygKZtA9Cf3C1EeQFpjWbqt
F5BOuad/wwdIK9zj4fID0gA72KPm
  "]]
}, Open  ]],

Cell[TextData[{
 "This is a 666 element triangle. In base-666 we need 666 unique numerals to \
represent the values for each location in the triangle. The bottom row will \
have 36 unique characters in it. So the bottom row might look like this:\n\n\
0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ \n\nHow to sum this then with the row \
above it? \n\nThinking about how triangular number ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"tri", "(", "4", ")"}], "=", "10"}], TraditionalForm]]],
 " is structured in base-10. "
}], "Text",
 CellChangeTimes->{{3.5881799958634577`*^9, 3.588180200733176*^9}, {
   3.588180526297797*^9, 3.5881805264598064`*^9}, {3.5881808862543855`*^9, 
   3.588180886627407*^9}, {3.5884633682174587`*^9, 3.5884633685594783`*^9}, {
   3.654135485056159*^9, 3.6541355569157844`*^9}, {3.6541491531062813`*^9, 
   3.654149154653978*^9}, {3.6571863937878513`*^9, 3.657186401957319*^9}, {
   3.6574209816916876`*^9, 3.6574209816916876`*^9}, {3.6574805618129025`*^9, 
   3.6574805634961157`*^9}, 3.6574962488564034`*^9}],

Cell["\<\
     9
    7 8  
  4 5 6
 0 1 2 3 \
\>", "Text",
 CellChangeTimes->{{3.5619268671689997`*^9, 3.561926902149*^9}, {
  3.561926949759*^9, 3.561926965666*^9}, {3.6541358264320087`*^9, 
  3.654135826823558*^9}}],

Cell[TextData[{
 "The trick to get the individual row values (ie. 0123, ",
 Cell[BoxData[
  FormBox["456", TraditionalForm]]],
 ", ",
 Cell[BoxData[
  FormBox["78", TraditionalForm]]],
 ") it seems is to start at 0 and count to 3, then for the next row start at \
4 and count to 6, then 7, and finally stop at 9. Or simply 0+",
 StyleBox["4",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]],
 " = ",
 StyleBox["4",
  FontColor->RGBColor[1, 0.5, 0]],
 "; ",
 StyleBox["4",
  FontColor->RGBColor[1, 0.5, 0]],
 "+",
 StyleBox["3",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]],
 " = ",
 StyleBox["7",
  FontColor->RGBColor[1, 0.5, 0]],
 "; ",
 StyleBox["7",
  FontColor->RGBColor[1, 0.5, 0]],
 "+",
 StyleBox["2",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]],
 " = ",
 StyleBox["9",
  FontColor->RGBColor[1, 0.5, 0]],
 "; last ",
 StyleBox["9",
  FontColor->RGBColor[1, 0.5, 0]],
 "+",
 StyleBox["1",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]],
 " = 10 (done). Since we know the number-base (",
 Cell[BoxData[
  FormBox[
   RowBox[{"b", "=", "10"}], TraditionalForm]]],
 ") we know the 4 in advance because we can solve for ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]]],
 " in the triangular equation (",
 Cell[BoxData[
  FormBox[
   RowBox[{"tri", "[", "n", "]"}], TraditionalForm]]],
 ") using the quadratic equation  ",
 Cell[BoxData[
  RowBox[{
   FractionBox["1", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     SqrtBox[
      RowBox[{"1", "+", 
       RowBox[{"8", "*", "b"}]}]]}], ")"}]}]],
  CellChangeTimes->{{3.588172617802457*^9, 3.588172632784314*^9}, {
   3.588172666214226*^9, 3.5881726970499897`*^9}}],
 ". "
}], "Text",
 CellChangeTimes->{{3.49021803715*^9, 3.4902181082790003`*^9}, 
   3.49021819938*^9, {3.4902192119370003`*^9, 3.4902192307130003`*^9}, {
   3.490396372766*^9, 3.490396373784*^9}, {3.561927382498*^9, 
   3.5619273838380003`*^9}, {3.568138855483*^9, 3.568138870383*^9}, {
   3.58817389572155*^9, 3.5881739269073334`*^9}, {3.58817396356143*^9, 
   3.5881739743890495`*^9}, {3.5881741390834694`*^9, 3.588174141940633*^9}, {
   3.588174825883752*^9, 3.5881749231653166`*^9}, {3.588174966829814*^9, 
   3.5881749710150533`*^9}, {3.5881752723152866`*^9, 
   3.5881752732453394`*^9}, {3.588175315753771*^9, 3.5881753214920993`*^9}, {
   3.588179539387349*^9, 3.5881795396853657`*^9}, {3.5881802072315474`*^9, 
   3.58818024695782*^9}, {3.589413842096004*^9, 3.589413842571031*^9}, {
   3.6541355857019396`*^9, 3.65413560169197*^9}, {3.6541357705244093`*^9, 
   3.6541358160061846`*^9}, {3.654135848012249*^9, 3.6541359664567895`*^9}, {
   3.654136037164268*^9, 3.6541360440736456`*^9}, {3.6541361027796*^9, 
   3.6541361027801003`*^9}, {3.654137310229927*^9, 3.6541373107479925`*^9}, {
   3.6574196820041485`*^9, 3.657419682865758*^9}, {3.6574202461852903`*^9, 
   3.6574202461852903`*^9}, {3.6574805812423697`*^9, 
   3.6574805854709063`*^9}, {3.6574946850968313`*^9, 
   3.6574946901924787`*^9}, {3.657496261040451*^9, 3.6574962833802876`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"qtri", "[", "b_", "]"}], ":=", 
  FormBox[
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      SqrtBox[
       RowBox[{"1", "+", 
        RowBox[{"8", " ", "b"}]}]]}], ")"}]}],
   TraditionalForm]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.5881747387207665`*^9, 3.588174776842947*^9}, 
   3.657420252714119*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"qtri", "[", "10", "]"}]], "Input",
 CellChangeTimes->{{3.5881748183713226`*^9, 3.5881748197384005`*^9}, {
   3.6238194033735447`*^9, 3.6238194083618298`*^9}, 3.657420254605359*^9}],

Cell[BoxData["4"], "Output",
 CellChangeTimes->{
  3.5881748199924154`*^9, 3.588175744883316*^9, 3.588176672571377*^9, 
   3.588180638254201*^9, 3.5890757236336308`*^9, 3.5890783174139867`*^9, 
   3.589409732437945*^9, 3.5894105383810425`*^9, {3.623819404726622*^9, 
   3.6238194088438573`*^9}, 3.654131902659753*^9, 3.654135366811144*^9, 
   3.6541400960311785`*^9, 3.6571406034923954`*^9, 3.6571639622315583`*^9, 
   3.657164168506252*^9, 3.65742077979605*^9, 3.657421427610812*^9, 
   3.6574226259774857`*^9, 3.657422772496591*^9, 3.6574235423893547`*^9, 
   3.657424355580117*^9, 3.6574942738646116`*^9, 3.6574965904037747`*^9, 
   3.657496955229602*^9, 3.657497005017424*^9, 3.657497229540435*^9, 
   3.657521020116454*^9, 3.657553238834712*^9, 3.657553300668064*^9, 
   3.657581270522784*^9, 3.6575851312565355`*^9, 3.6575904655174007`*^9, 
   3.657592912417117*^9}]
}, Open  ]],

Cell["With base 666 we would start at 36.", "Text",
 CellChangeTimes->{{3.5881748351592827`*^9, 3.588174837281404*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"qtri", "[", "666", "]"}]], "Input",
 CellChangeTimes->{{3.5881748407126*^9, 3.588174843094736*^9}, 
   3.657420255689497*^9}],

Cell[BoxData["36"], "Output",
 CellChangeTimes->{3.5881748433417506`*^9, 3.588175744898317*^9, 
  3.588176672583377*^9, 3.5881806382702017`*^9, 3.5890757236476316`*^9, 
  3.589078317431988*^9, 3.5894097324489455`*^9, 3.5894105383950434`*^9, 
  3.6541319026722546`*^9, 3.654135366827146*^9, 3.654140096047681*^9, 
  3.657140603508396*^9, 3.6571639622615623`*^9, 3.657164168518753*^9, 
  3.6574207798080516`*^9, 3.6574214276253138`*^9, 3.6574226259949875`*^9, 
  3.6574227725125933`*^9, 3.657423542405357*^9, 3.65742435560462*^9, 
  3.6574942738781137`*^9, 3.6574965904247775`*^9, 3.6574969552531047`*^9, 
  3.6574970050374265`*^9, 3.6574972295699387`*^9, 3.657521020130456*^9, 
  3.657553238850214*^9, 3.6575533006860657`*^9, 3.657581270533786*^9, 
  3.6575851312700367`*^9, 3.6575904655364027`*^9, 3.657592912429619*^9}]
}, Open  ]],

Cell["\<\
As for how all this works in terms of integer representation...\
\>", "Text",
 CellChangeTimes->{{3.4902181185550003`*^9, 3.490218133677*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"0", "*", 
    SuperscriptBox["10", "3"]}],
   FontColor->GrayLevel[0.5]], "+", 
  RowBox[{"1", "*", 
   SuperscriptBox["10", "2"]}], "+", 
  RowBox[{"2", "*", 
   SuperscriptBox["10", "1"]}], "+", 
  RowBox[{"3", "*", 
   SuperscriptBox["10", "0"]}]}]], "Input",
 CellChangeTimes->{{3.490210971091*^9, 3.4902109839849997`*^9}, {
  3.490219150259*^9, 3.490219157332*^9}, {3.588173996451311*^9, 
  3.5881740024336534`*^9}}],

Cell[BoxData["123"], "Output",
 CellChangeTimes->{{3.490210976064*^9, 3.490210984233*^9}, 
   3.4902191577209997`*^9, 3.490540749561*^9, 3.4905408652209997`*^9, 
   3.4905409787790003`*^9, 3.561928177783*^9, 3.5787104949054976`*^9, 
   3.5881732668695817`*^9, 3.5881740307922754`*^9, 3.588174394621085*^9, 
   3.5881745188841925`*^9, 3.5881757449133177`*^9, 3.588176672595378*^9, 
   3.5881806382852025`*^9, 3.5890757236616325`*^9, 3.589078317448989*^9, 
   3.589409732460946*^9, 3.5894105384090443`*^9, 3.654131902685256*^9, 
   3.654135366843648*^9, 3.654140096064683*^9, 3.6571406035253973`*^9, 
   3.6571639622925663`*^9, 3.657164168531255*^9, 3.6574207798205533`*^9, 
   3.657421427640316*^9, 3.65742262601299*^9, 3.657422772528595*^9, 
   3.6574235424223595`*^9, 3.657424355627623*^9, 3.657494273891615*^9, 
   3.6574965904447803`*^9, 3.6574969552771077`*^9, 3.6574970050584292`*^9, 
   3.657497229624446*^9, 3.657521020144458*^9, 3.657553238865216*^9, 
   3.6575533007050686`*^9, 3.657581270545287*^9, 3.6575851312840385`*^9, 
   3.657590465554405*^9, 3.6575929124431205`*^9}]
}, Open  ]],

Cell["Some test runs ...", "Text",
 CellChangeTimes->{{3.490218353399*^9, 3.490218355545*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  UnderoverscriptBox["\[Sum]", 
   RowBox[{"x", "=", "0"}], 
   RowBox[{"tri", "[", "2", "]"}]], 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"tri", "[", "2", "]"}], "-", "x"}], ")"}], "*", 
   SuperscriptBox["10", "x"]}]}]], "Input"],

Cell[BoxData["123"], "Output",
 CellChangeTimes->{3.65758513129854*^9, 3.657590465571907*^9, 
  3.657592912456122*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  UnderoverscriptBox["\[Sum]", 
   RowBox[{"x", "=", 
    RowBox[{"tri", "[", "0", "]"}]}], 
   RowBox[{"tri", "[", "2", "]"}]], 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"tri", "[", "0", "]"}], "+", "x"}], ")"}], "*", 
   SuperscriptBox["10", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"tri", "[", "2", "]"}], ")"}], "-", "x"}], ")"}]]}]}]], "Input",\

 CellChangeTimes->{{3.490211975582*^9, 3.490211999939*^9}, {3.490216019109*^9,
   3.49021604005*^9}, {3.490216357547*^9, 3.490216395384*^9}, {
  3.6574202661358232`*^9, 3.657420271329983*^9}}],

Cell[BoxData["123"], "Output",
 CellChangeTimes->{{3.490211983007*^9, 3.490212000288*^9}, {3.490216019567*^9,
    3.490216040368*^9}, 3.490216106223*^9, {3.490216357862*^9, 
   3.490216395704*^9}, 3.490540749617*^9, 3.490540865269*^9, 
   3.490540978826*^9, 3.561928177834*^9, 3.5787104949484997`*^9, 
   3.588173266915584*^9, 3.588174394678088*^9, 3.5881745189161944`*^9, 
   3.5881757449413195`*^9, 3.5881766726203794`*^9, 3.5881806383152037`*^9, 
   3.589075723690634*^9, 3.5890783174819903`*^9, 3.5894097324849477`*^9, 
   3.5894105384360456`*^9, 3.654131902711759*^9, 3.6541353668766527`*^9, 
   3.654140096097187*^9, 3.6571406035573993`*^9, 3.657163962355074*^9, 
   3.657164168556758*^9, 3.6574207798455563`*^9, 3.6574214276703196`*^9, 
   3.657422626048994*^9, 3.6574227725615993`*^9, 3.657423542462364*^9, 
   3.657424355675629*^9, 3.657494273919119*^9, 3.657496590486285*^9, 
   3.657496955325614*^9, 3.6574970050994344`*^9, 3.657497229677452*^9, 
   3.65752102031698*^9, 3.657553238991232*^9, 3.6575533008750896`*^9, 
   3.6575812706583014`*^9, 3.6575851313220434`*^9, 3.657590465608412*^9, 
   3.6575929124696236`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  UnderoverscriptBox["\[Sum]", 
   RowBox[{"x", "=", 
    RowBox[{"tri", "[", "0", "]"}]}], 
   RowBox[{"mi", "[", 
    RowBox[{"4", ",", 
     RowBox[{"-", "1"}]}], "]"}]], 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"tri", "[", "0", "]"}], "+", "x"}], ")"}], "*", 
   SuperscriptBox["10", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"tri", "[", "4", "]"}], "-", 
        RowBox[{"tri", "[", "3", "]"}], "-", "1"}], ")"}], "-", "x"}], 
     ")"}]]}]}]], "Input",
 CellChangeTimes->{{3.490216414531*^9, 3.490216526185*^9}, {
   3.4902166271870003`*^9, 3.490216643347*^9}, {3.4902166896870003`*^9, 
   3.49021669973*^9}, 3.490216743626*^9, {3.490216921014*^9, 
   3.490216972422*^9}, {3.490217008677*^9, 3.4902170509309998`*^9}, {
   3.490217121663*^9, 3.4902171261809998`*^9}, {3.588176805048954*^9, 
   3.588176827136217*^9}, {3.588179903146155*^9, 3.588179903268162*^9}, {
   3.58907563007928*^9, 3.589075630540306*^9}, 3.654135231857507*^9, {
   3.657420272743663*^9, 3.657420276246107*^9}}],

Cell[BoxData["123"], "Output",
 CellChangeTimes->{
  3.490216460885*^9, {3.490216493493*^9, 3.490216527016*^9}, {
   3.4902169267209997`*^9, 3.49021697276*^9}, {3.490217019389*^9, 
   3.4902170515299997`*^9}, 3.4902171265699997`*^9, 3.490218401608*^9, 
   3.490540749639*^9, 3.490540865291*^9, 3.490540978852*^9, 3.561928177856*^9,
    3.5787104949695015`*^9, 3.5881732669385853`*^9, 3.58817439470609*^9, 
   3.5881745189321957`*^9, 3.58817574495532*^9, 3.58817667263238*^9, {
   3.588176815488551*^9, 3.588176827414233*^9}, 3.588180638330205*^9, 
   3.589075634929557*^9, 3.5890757237046347`*^9, 3.5890783174989915`*^9, 
   3.5894097324979486`*^9, 3.5894105384500465`*^9, 3.654131902724261*^9, 
   3.654135366893154*^9, 3.654140096113189*^9, 3.6571406035744004`*^9, 
   3.657163962387578*^9, 3.65716416857026*^9, 3.6574207798575583`*^9, 
   3.657421427685322*^9, 3.657422626067497*^9, 3.6574227725811014`*^9, 
   3.6574235424823666`*^9, 3.6574243557001324`*^9, 3.65749427393262*^9, 
   3.657496590506788*^9, 3.6574969553521175`*^9, 3.6574970051189365`*^9, 
   3.6574972297009554`*^9, 3.657521020360485*^9, 3.657553239086244*^9, 
   3.6575533010131073`*^9, 3.6575812707143087`*^9, 3.6575851313305445`*^9, 
   3.6575904656279144`*^9, 3.6575929124821253`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  UnderoverscriptBox["\[Sum]", 
   RowBox[{"x", "=", 
    RowBox[{"tri", "[", "1", "]"}]}], 
   RowBox[{"mi", "[", 
    RowBox[{"4", ",", 
     RowBox[{"-", "1"}]}], "]"}]], 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"tri", "[", "2", "]"}], "+", "x"}], ")"}], "*", 
   SuperscriptBox["10", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"tri", "[", "2", "]"}], "-", "x"}], ")"}]]}]}]], "Input",
 CellChangeTimes->{{3.490211447558*^9, 3.490211455224*^9}, {3.490211540102*^9,
    3.4902116304849997`*^9}, {3.490211704193*^9, 3.490211748572*^9}, {
   3.490211798676*^9, 3.49021186475*^9}, {3.4902119390030003`*^9, 
   3.490211962193*^9}, {3.588176843192136*^9, 3.588176845215251*^9}, 
   3.588179936443059*^9, {3.589075638968788*^9, 3.589075639452816*^9}, 
   3.6541352379092755`*^9, {3.6574202776317835`*^9, 3.6574202796480393`*^9}}],

Cell[BoxData["456"], "Output",
 CellChangeTimes->{
  3.490211455665*^9, {3.49021160344*^9, 3.490211630797*^9}, {
   3.490211706564*^9, 3.49021175119*^9}, {3.4902118058199997`*^9, 
   3.490211865059*^9}, {3.490211947026*^9, 3.490211962474*^9}, 
   3.4905407496689997`*^9, 3.490540865315*^9, 3.490540978874*^9, 
   3.56192817788*^9, 3.5787104949905024`*^9, 3.588173266962587*^9, 
   3.5881743947350917`*^9, 3.5881745189481964`*^9, 3.588175744969321*^9, 
   3.5881766726443806`*^9, 3.588176845559271*^9, 3.5881806383452063`*^9, {
   3.5890756397948356`*^9, 3.5890756461742*^9}, 3.5890757237176356`*^9, 
   3.5890783175149927`*^9, 3.589409732510949*^9, 3.589410538464047*^9, 
   3.6541319027377625`*^9, 3.6541353669096565`*^9, 3.6541400961291914`*^9, 
   3.657140603591401*^9, 3.657163962419582*^9, 3.657164168582762*^9, 
   3.6574207798695593`*^9, 3.657421427700824*^9, 3.6574226260854993`*^9, 
   3.6574227726001043`*^9, 3.657423542502369*^9, 3.6574243557241354`*^9, 
   3.657494273946122*^9, 3.657496590529791*^9, 3.657496955378621*^9, 
   3.6574970051394396`*^9, 3.657497229725458*^9, 3.65752102039699*^9, 
   3.657553239159253*^9, 3.6575533010771155`*^9, 3.6575812707713156`*^9, 
   3.657585131338546*^9, 3.657590465645917*^9, 3.657592912495627*^9}]
}, Open  ]],

Cell[TextData[{
 "The next hurdle is figuring out which number to start counting from and \
when to stop. Once we know the second row from the bottom of a 10 element \
triangle starts at number 4 it becomes very easy to count forward to get 4,5, \
and 6. The second row only has three elements in it because ",
 Cell[BoxData[
  FormBox[
   RowBox[{"tri", "(", "4", ")"}], TraditionalForm]]],
 " implies the base of the triangle is 4 numbers wide. Thus the second to \
bottom row has to be 3 numbers wide.\n\nThe easiest way to generate the ",
 StyleBox["4",
  FontWeight->"Bold"],
 " (3rd row 1st number), ",
 StyleBox["7",
  FontWeight->"Bold"],
 " (2nd row 1st number), ",
 StyleBox["9",
  FontWeight->"Bold"],
 " (1st row & only number) sequence is to figure out the length or \
cardinality of the set of numbers of each of the preceding rows and then sum \
them up to calculate the first number of the desired row. \n\nFor example, if \
we wanted the starting number for the 2nd row (",
 Cell[BoxData[
  FormBox[
   RowBox[{"r", "=", "2"}], TraditionalForm]]],
 ") in a 10 element triangular number (or to think of it another way the \
total number of digits we have to iterate over to get to the first number of \
the 2nd row) represented by tri[n] where n=4 , then counting from the bottom \
of the triangle to the top we have: (4th row) ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0", ",", "1", ",", "2", ",", "3"}], "}"}], "=", "4"}], 
   TraditionalForm]]],
 " elements; (3rd row) ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"{", 
     RowBox[{"4", ",", "5", ",", "6"}], "}"}], " ", "=", " ", 
    RowBox[{"3", " ", "elements"}]}], TraditionalForm]]],
 "; gives ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"4", "+", "3"}], "=", "7"}], TraditionalForm]]],
 ". \n\nLets imagine one triangle is full of As and the bigger triangle is \
full of As and Bs.\n\n   B                    A            row #1\n  BB       \
          AA          row #2\n ABB              BBB         row #3\nAABB    \
or    BBBB       row #4\n\nSince all triangular numbers where ",
 Cell[BoxData[
  FormBox[
   RowBox[{"tri", "(", "n", ")"}], TraditionalForm]]],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", ">", "1"}], TraditionalForm]]],
 " can be broken into smaller triangular numbers, then one way to do this \
would be to subtract the top of the triangle (represented by the As) which \
includes the numbers we haven\[CloseCurlyQuote]t counted to yet ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"tri", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"n", "-", "x"}], ")"}], "-", "1"}], "]"}], ")"}], 
   TraditionalForm]]],
 " from the larger triangle ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"tri", "[", 
     RowBox[{"n", "-", "x"}], "]"}], ")"}], TraditionalForm]]],
 " (represented by the Bs + As) to figure out which number the next row \
starts at:"
}], "Text",
 CellChangeTimes->{{3.490220724659*^9, 3.490220737127*^9}, {
   3.5881753572111425`*^9, 3.5881753590152454`*^9}, {3.588175940908528*^9, 
   3.5881759416365695`*^9}, {3.5894094935792828`*^9, 
   3.5894097196132116`*^9}, {3.58941036857533*^9, 3.5894103890395*^9}, {
   3.589410428927782*^9, 3.5894104308818936`*^9}, {3.5894139307380743`*^9, 
   3.589413937019433*^9}, {3.654136184371961*^9, 3.6541362533577213`*^9}, {
   3.654136327832178*^9, 3.6541363510796304`*^9}, {3.6541373836382484`*^9, 
   3.6541374131459956`*^9}, {3.6541383499559555`*^9, 
   3.6541385882622166`*^9}, {3.65413866034787*^9, 3.654138687681841*^9}, {
   3.6541391716257944`*^9, 3.654139201984149*^9}, {3.654139241586178*^9, 
   3.654139321603839*^9}, {3.6541393620979815`*^9, 3.654139490017725*^9}, {
   3.654139596829788*^9, 3.654139645309944*^9}, {3.654139814843972*^9, 
   3.6541398188539815`*^9}, {3.6541398605642786`*^9, 
   3.6541398777184563`*^9}, {3.6541399303241367`*^9, 3.654139985706169*^9}, {
   3.6541401710937104`*^9, 3.6541402270678186`*^9}, {3.654149573096613*^9, 
   3.6541497015899296`*^9}, {3.6571422375788603`*^9, 3.657142291376937*^9}, {
   3.6571460302587337`*^9, 3.657146224446841*^9}, {3.6571464425713167`*^9, 
   3.6571465464392576`*^9}, {3.657146585129471*^9, 3.6571467408373766`*^9}, {
   3.657146816439701*^9, 3.6571468331186547`*^9}, {3.657146864314439*^9, 
   3.6571468699917636`*^9}, {3.6571489523778696`*^9, 
   3.6571489641975455`*^9}, {3.6571508243197556`*^9, 
   3.6571508530799074`*^9}, {3.6571521049263716`*^9, 3.657152109273924*^9}, {
   3.657154313648344*^9, 3.6571543881698065`*^9}, {3.657154420948469*^9, 
   3.6571545080255265`*^9}, {3.657155537183713*^9, 3.6571555839196477`*^9}, {
   3.657156042437872*^9, 3.6571561111355953`*^9}, {3.6571567818257627`*^9, 
   3.6571568616293964`*^9}, {3.6571589048028464`*^9, 3.65715902563369*^9}, {
   3.6571610943058777`*^9, 3.6571610944508963`*^9}, {3.65716882136709*^9, 
   3.6571688919840574`*^9}, {3.6571689227829685`*^9, 
   3.6571691590899754`*^9}, {3.657169197517855*^9, 3.6571692033240924`*^9}, {
   3.657184373962324*^9, 3.6571843748243732`*^9}, {3.6571844356948547`*^9, 
   3.6571844520347896`*^9}, {3.6571844878128357`*^9, 
   3.6571844879768453`*^9}, {3.6571869387490215`*^9, 3.6571869703428288`*^9}, 
   3.657192499120304*^9, {3.657192647746177*^9, 3.6571926937290163`*^9}, {
   3.657192734305169*^9, 3.657192773325124*^9}, {3.657192813465221*^9, 
   3.6571928155709887`*^9}, {3.657228571870006*^9, 3.657228578877407*^9}, {
   3.657228618357665*^9, 3.657228669589596*^9}, {3.6574197495622272`*^9, 
   3.6574197510049105`*^9}, {3.6574202808206882`*^9, 3.657420283321506*^9}, {
   3.657420982618305*^9, 3.657420982618305*^9}, {3.6574210208826647`*^9, 
   3.6574211860621395`*^9}, {3.6574255176671834`*^9, 
   3.6574255373361807`*^9}, {3.657425587418541*^9, 3.657425609018284*^9}, {
   3.6574875281695175`*^9, 3.6574875283045344`*^9}, {3.6574947205118284`*^9, 
   3.6574947318082633`*^9}, {3.6574947724684267`*^9, 
   3.6574948738127956`*^9}, {3.657496380488619*^9, 3.657496382606388*^9}, {
   3.6574964379089108`*^9, 3.657496479704218*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"tri", "[", "4", "]"}], "-", 
    RowBox[{"tri", "[", "x", "]"}]}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", "1", ",", "4"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6571562740947886`*^9, 3.657156310840455*^9}, {
  3.65742028437714*^9, 3.6574202851057324`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"9", ",", "7", ",", "4", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{3.65715627449434*^9, 3.657156311146494*^9, 
  3.6571639624515862`*^9, 3.657164168596263*^9, 3.6574207798830614`*^9, 
  3.6574214277158256`*^9, 3.6574226261040015`*^9, 3.657422772617606*^9, 
  3.6574235425218716`*^9, 3.6574243557476387`*^9, 3.657494273960124*^9, 
  3.6574965905512934`*^9, 3.657496955404624*^9, 3.6574970051614428`*^9, 
  3.6574972297554617`*^9, 3.657521020411492*^9, 3.657553239181756*^9, 
  3.6575533010981183`*^9, 3.6575812707838173`*^9, 3.6575851313465466`*^9, 
  3.6575904656644187`*^9, 3.6575929125081286`*^9}]
}, Open  ]],

Cell["\<\
If we wanted the bottom of the triangle to be row #1 so we start with 0 and \
end with 9. We just reverse the order.\
\>", "Text",
 CellChangeTimes->{{3.657156328235664*^9, 3.657156351609632*^9}, {
   3.657157078103385*^9, 3.657157111913678*^9}, {3.657161171401668*^9, 
   3.657161190957651*^9}, {3.657169247379687*^9, 3.6571692734179935`*^9}, 
   3.657184497026363*^9, {3.65741979927804*^9, 3.65741982321408*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"tri", "[", "4", "]"}], "-", 
    RowBox[{"tri", "[", 
     RowBox[{"4", "-", "x", "+", "1"}], "]"}]}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", "1", ",", "4"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.657156377122872*^9, 3.657156426109092*^9}, {
  3.6571565575707855`*^9, 3.6571565761386433`*^9}, {3.6571571469551277`*^9, 
  3.6571571517827415`*^9}, {3.6574202860993586`*^9, 3.657420286827451*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "4", ",", "7", ",", "9"}], "}"}]], "Output",
 CellChangeTimes->{{3.6571563779644785`*^9, 3.6571564263606243`*^9}, {
   3.657156558770938*^9, 3.657156576708716*^9}, {3.657157147492196*^9, 
   3.657157152019271*^9}, 3.65716396248359*^9, 3.657164168609265*^9, 
   3.657420779895563*^9, 3.6574214277313275`*^9, 3.657422626121504*^9, 
   3.6574227726356087`*^9, 3.6574235425423746`*^9, 3.657424355771141*^9, 
   3.657494273974126*^9, 3.657496590572296*^9, 3.6574969554311275`*^9, 
   3.657497005181945*^9, 3.6574972297829657`*^9, 3.6575210204254937`*^9, 
   3.6575532392052593`*^9, 3.6575533011171207`*^9, 3.6575812707953186`*^9, 
   3.6575851313610487`*^9, 3.657590465681921*^9, 3.65759291252063*^9}]
}, Open  ]],

Cell["\<\
To get an arbitrary row length and sum them manually we would do: \
\>", "Text",
 CellChangeTimes->{{3.657156328235664*^9, 3.657156351609632*^9}, {
  3.657156629439912*^9, 3.6571566464855766`*^9}, {3.6571579804419675`*^9, 
  3.65715799274753*^9}, {3.6571581104814806`*^9, 3.657158144789837*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  UnderoverscriptBox["\[Sum]", 
   RowBox[{"x", "=", "0"}], 
   RowBox[{"n", "-", "z"}]], 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"tri", "[", 
     RowBox[{"n", "-", "x"}], "]"}], "-", 
    RowBox[{"tri", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"n", "-", "x"}], ")"}], "-", "1"}], "]"}]}], ")"}]}]], "Input",\

 CellChangeTimes->{{3.490220125285*^9, 3.490220362085*^9}, {
  3.4902204097869997`*^9, 3.4902204190179996`*^9}, {3.490220505586*^9, 
  3.490220523308*^9}, {3.589410476077479*^9, 3.5894104768425226`*^9}, {
  3.657420287785573*^9, 3.65742028855317*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox["1", "2"], " ", 
   RowBox[{"(", 
    RowBox[{"n", "+", 
     SuperscriptBox["n", "2"]}], ")"}]}], "+", 
  RowBox[{
   FractionBox["1", "2"], " ", 
   RowBox[{"(", 
    RowBox[{"1", "-", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "z"}], ")"}], "2"], "-", "z"}], 
    ")"}]}]}]], "Output",
 CellChangeTimes->{3.589075464212793*^9, 3.589075723731636*^9, 
  3.5890783175319934`*^9, 3.589409732600954*^9, 3.5894100537413225`*^9, 
  3.589410477728573*^9, 3.589410538478048*^9, 3.6541319027577653`*^9, 
  3.654135366926159*^9, 3.654140096145193*^9, 3.6571406037204084`*^9, 
  3.6571639625175943`*^9, 3.657164168622267*^9, 3.6574207800375805`*^9, 
  3.6574214277523303`*^9, 3.6574226261395063`*^9, 3.657422772654611*^9, 
  3.657423542562377*^9, 3.6574243557941446`*^9, 3.657494273993128*^9, 
  3.657496590593299*^9, 3.657496955457631*^9, 3.657497005201947*^9, 
  3.6574972298119693`*^9, 3.657521020445496*^9, 3.657553239233262*^9, 
  3.657553301400157*^9, 3.6575812708068204`*^9, 3.6575851313760505`*^9, 
  3.6575904656994233`*^9, 3.6575929125336323`*^9}]
}, Open  ]],

Cell[TextData[{
 "As established earlier this can be simplified because the total number of \
elements in the immediate preceding smaller triangle (or ",
 Cell[BoxData[
  FormBox[
   RowBox[{"tri", "(", 
    RowBox[{"n", "-", "1"}], ")"}], TraditionalForm]]],
 ") is equal to ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"tri", "(", "n", ")"}], "-", "n"}], TraditionalForm]]],
 ". So we can just cancel out the n\[CloseCurlyQuote]s (or more correctly the \
",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", "-", "x"}], TraditionalForm]]],
 "\[CloseCurlyQuote]s) of the two triangles.\n\nTo make \
what\[CloseCurlyQuote]s happening easier to see, just think of a ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["base", "infinity"], TraditionalForm]]],
 " number line going on indefinitely. If we write out the counting numbers \
and put a pipe (|) before each triangular number we can see the pattern more \
clearly:\n\n|0|12|345|6789|ABCDE|FGHIJK|...\n   |\n  \:2514 Starts at 1 \
\[LongDash] ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"tri", "[", "1", "]"}], "=", "1"}], ",", 
    RowBox[{
     RowBox[{"tri", "[", "2", "]"}], "=", "3"}], ",", 
    RowBox[{
     RowBox[{"tri", "[", "3", "]"}], "=", "6"}], ",", 
    RowBox[{
     RowBox[{"tri", "[", "4", "]"}], "=", 
     RowBox[{"10", " ", "or", " ", 
      SubscriptBox[
       StyleBox["A",
        FontSlant->"Plain"], "\[Infinity]"]}]}], ",", 
    RowBox[{
     RowBox[{"tri", "[", "5", "]"}], "=", 
     RowBox[{"15", " ", "or", " ", 
      SubscriptBox[
       StyleBox["F",
        FontSlant->"Plain"], "\[Infinity]"]}]}]}], TraditionalForm]]],
 ",...\n \nThe whole number line is a triangular number with an infinite \
sized base. \n\nWorking with triangular number ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"tri", "(", "4", ")"}], "=", "10"}], TraditionalForm]]],
 " causes us to have four breaks.\n\n0123|456|78|9|\n\nAnother way to do this \
rather than subtracting {tri(1), tri(2), tri(3), tri(4)} from ",
 Cell[BoxData[
  FormBox[
   RowBox[{"tri", "(", "n", ")"}], TraditionalForm]]],
 " is to use the summation form ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"tri", "(", "n", ")"}], "=", 
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"x", "=", "1"}], "n"], "x"}]}], TraditionalForm]]],
 ". So instead of subtracting the top of the triangle from the larger \
triangle (",
 Cell[BoxData[
  FormBox["n", TraditionalForm]]],
 ") we just count and sum all the triangular numbers up to the row (",
 Cell[BoxData[
  FormBox["z", TraditionalForm]]],
 ") that we are currently at. "
}], "Text",
 CellChangeTimes->{{3.490220747332*^9, 3.490220750856*^9}, {
   3.6541403257258463`*^9, 3.6541403771718793`*^9}, {3.6541405176177135`*^9, 
   3.654140553673792*^9}, {3.6541406455219555`*^9, 3.654140741187603*^9}, {
   3.6541408491398115`*^9, 3.654140865169847*^9}, {3.6541409209939356`*^9, 
   3.6541410211701565`*^9}, {3.654141076891732*^9, 3.6541410790500064`*^9}, {
   3.6541411253338833`*^9, 3.65414120759783*^9}, {3.654142979755865*^9, 
   3.654143018869832*^9}, {3.6541430684076223`*^9, 3.65414319360002*^9}, {
   3.6541432319458895`*^9, 3.6541433121055684`*^9}, {3.6541433470255027`*^9, 
   3.6541433549100037`*^9}, {3.654144944909408*^9, 3.6541451739319906`*^9}, {
   3.6541452199563346`*^9, 3.6541452676718936`*^9}, {3.6541455331101*^9, 
   3.6541455371096077`*^9}, {3.654149725498966*^9, 3.6541497576980543`*^9}, {
   3.654149811942443*^9, 3.654149813238107*^9}, {3.657143272893546*^9, 
   3.6571432785468698`*^9}, {3.6571467631496525`*^9, 
   3.6571467670828776`*^9}, {3.657154597945945*^9, 3.657154634903638*^9}, {
   3.657154669750063*^9, 3.657154669907583*^9}, {3.6571548616819353`*^9, 
   3.657154883573715*^9}, {3.657155102101965*^9, 3.657155117845964*^9}, {
   3.6571552695377264`*^9, 3.657155280214082*^9}, {3.6571553103084035`*^9, 
   3.657155319140025*^9}, {3.657155711411837*^9, 3.657155726303728*^9}, {
   3.657155777338209*^9, 3.657155813863847*^9}, {3.6571583031099415`*^9, 
   3.6571584556438103`*^9}, {3.657158489512111*^9, 3.657158491189824*^9}, {
   3.6571591411698613`*^9, 3.6571591568158484`*^9}, {3.6571591971319675`*^9, 
   3.657159320324111*^9}, {3.657159352361679*^9, 3.657159415273168*^9}, {
   3.6571642349601903`*^9, 3.6571642357197866`*^9}, {3.6571692985001783`*^9, 
   3.6571693248820286`*^9}, {3.657187022698823*^9, 3.6571870537405987`*^9}, {
   3.6571871296149387`*^9, 3.657187153746319*^9}, 3.6571873013917637`*^9, {
   3.657187367364537*^9, 3.6571875470868163`*^9}, {3.6571876401251383`*^9, 
   3.65718776080104*^9}, {3.657187795905048*^9, 3.657187797146119*^9}, {
   3.6571878880993214`*^9, 3.657187890190441*^9}, {3.6571879263425083`*^9, 
   3.6571879599064283`*^9}, {3.657187995364456*^9, 3.6571879999267173`*^9}, {
   3.657188049204536*^9, 3.657188074117961*^9}, {3.6571881130641885`*^9, 
   3.6571881236607943`*^9}, {3.657188167242287*^9, 3.657188167242287*^9}, {
   3.6571881973530097`*^9, 3.6571882234185004`*^9}, {3.657188577926777*^9, 
   3.657188634867034*^9}, {3.657188854464594*^9, 3.6571889312209845`*^9}, {
   3.657191123203085*^9, 3.657191202889204*^9}, {3.657191257031079*^9, 
   3.6571912584392576`*^9}, {3.657191295956522*^9, 3.6571912999850335`*^9}, {
   3.6571913407612114`*^9, 3.657191341129258*^9}, {3.65719137910408*^9, 
   3.6571913940769815`*^9}, {3.65719156188179*^9, 3.6571916431891146`*^9}, {
   3.6571928729902797`*^9, 3.657192874242939*^9}, {3.6571929167373347`*^9, 
   3.65719291716739*^9}, {3.657194065685733*^9, 3.6571940841570787`*^9}, {
   3.6574198462850094`*^9, 3.65741989936825*^9}, {3.6574202894477835`*^9, 
   3.6574202921951327`*^9}, {3.6574209134675245`*^9, 
   3.6574209524354725`*^9}, {3.6574212112903433`*^9, 
   3.6574212155848885`*^9}, {3.657482919748322*^9, 3.6574829239403543`*^9}, {
   3.657483049172757*^9, 3.65748305014038*^9}, {3.657483218374243*^9, 
   3.6574832278624477`*^9}, {3.657486847738613*^9, 3.6574868631180663`*^9}, {
   3.657486901250408*^9, 3.657486902394554*^9}, {3.6574870929727545`*^9, 
   3.657487094138402*^9}, {3.6574876325237684`*^9, 3.6574876325237684`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Factor", "[", 
  RowBox[{
   UnderoverscriptBox["\[Sum]", 
    RowBox[{"x", "=", "0"}], 
    RowBox[{"n", "-", "z"}]], 
   RowBox[{"(", 
    RowBox[{"n", "-", "x"}], ")"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6571879129337416`*^9, 3.6571879136097803`*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  RowBox[{"(", 
   RowBox[{"1", "+", "n", "-", "z"}], ")"}], " ", 
  RowBox[{"(", 
   RowBox[{"n", "+", "z"}], ")"}]}]], "Output",
 CellChangeTimes->{3.657187917141982*^9, 3.6574207800630836`*^9, 
  3.6574214277698326`*^9, 3.6574226261580086`*^9, 3.6574227726731133`*^9, 
  3.6574235425823793`*^9, 3.6574243558166475`*^9, 3.657494274013631*^9, 
  3.6574965906133013`*^9, 3.6574969554831343`*^9, 3.65749700522295*^9, 
  3.657497229843973*^9, 3.6575210204649982`*^9, 3.6575532392572656`*^9, 
  3.6575533014921684`*^9, 3.657581270819322*^9, 3.6575851313910522`*^9, 
  3.6575904657174253`*^9, 3.6575929125466337`*^9}]
}, Open  ]],

Cell[TextData[{
 "Since we start counting at 0 rather than 1 we need to add 1 to ",
 Cell[BoxData[
  FormBox["z", TraditionalForm]]],
 ". This allows us to specify the correct row without having to manually \
offset by adding one to the z parameter. If we don\[CloseCurlyQuote]t add  ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"z", "+", "1"}], ")"}], TraditionalForm]]],
 " to ",
 Cell[BoxData[
  FormBox[
   RowBox[{"leftedge", "(", ")"}], TraditionalForm]]],
 " then we would need to do ",
 Cell[BoxData[
  FormBox[
   RowBox[{"leftedge", "(", 
    RowBox[{"n", ",", 
     RowBox[{"z", "+", "1"}]}], ")"}], TraditionalForm]]],
 " on each call.\n\n",
 Cell[BoxData[
  FormBox["n", TraditionalForm]]],
 " = quadratic equation of the total number of elements in the triangle (ex. \
tri(4) = 10, so n = 4)\n",
 Cell[BoxData[
  FormBox["z", TraditionalForm]]],
 " = specific arbitrary row number\n",
 Cell[BoxData[
  FormBox["f", TraditionalForm]]],
 " = optional base form"
}], "Text",
 CellChangeTimes->{{3.654146661137841*^9, 3.6541466931959124`*^9}, {
  3.6541470756299753`*^9, 3.654147144564229*^9}, {3.6541498293426523`*^9, 
  3.6541498474459515`*^9}, {3.6571845569227886`*^9, 3.6571845918727875`*^9}, {
  3.657187812426993*^9, 3.6571878151771507`*^9}, {3.657188689777175*^9, 
  3.6571887084652433`*^9}, {3.657228738085513*^9, 3.6572287386135435`*^9}, {
  3.6574213730143795`*^9, 3.657421375791732*^9}, {3.6574257030002174`*^9, 
  3.657425704629925*^9}, {3.657494899526561*^9, 3.657494949562414*^9}, {
  3.657495077442153*^9, 3.657495133836314*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"leftedge", "[", 
   RowBox[{"n_", ",", "z_"}], "]"}], ":=", 
  RowBox[{
   FractionBox["1", "2"], " ", 
   RowBox[{"(", 
    RowBox[{"1", "+", "n", "-", 
     RowBox[{"(", 
      RowBox[{"z", "+", "1"}], ")"}]}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{"n", "+", 
     RowBox[{"(", 
      RowBox[{"z", "+", "1"}], ")"}]}], ")"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.490220816399*^9, 3.490220843585*^9}, 
   3.5894099857684345`*^9, 3.589410078210722*^9, {3.589410204042919*^9, 
   3.589410222344966*^9}, {3.589410284096498*^9, 3.5894102923189683`*^9}, {
   3.6541466401596775`*^9, 3.654146649171322*^9}, {3.6541467455015545`*^9, 
   3.654146776301465*^9}, 3.657421337414859*^9, {3.6574883248881874`*^9, 
   3.657488336687686*^9}, {3.657494957144377*^9, 3.6574949618299723`*^9}, {
   3.657495141876335*^9, 3.657495145875843*^9}, {3.657496853350665*^9, 
   3.6574968609896345`*^9}, {3.657496978330535*^9, 3.6574969860880203`*^9}, 
   3.6575209100474772`*^9, {3.6575860648510866`*^9, 3.657586073118636*^9}}],

Cell[TextData[{
 "Starting from ",
 Cell[BoxData[
  FormBox[
   StyleBox[
    RowBox[{"z", "=", "1"}],
    FontWeight->"Plain",
    FontSlant->"Plain"], TraditionalForm]],
  FontWeight->"Bold"],
 " specifies the row at the top of the triangle. ",
 "A good description for this function would be \
\[OpenCurlyDoubleQuote]outputs numbers on the left edge of the triangle.\
\[CloseCurlyDoubleQuote]"
}], "Text",
 CellChangeTimes->{{3.6541455797000165`*^9, 3.654145689449953*^9}, {
   3.6541463454762573`*^9, 3.6541463571017337`*^9}, 3.6541466540539417`*^9, {
   3.654147163033074*^9, 3.6541471790236044`*^9}, {3.654149856469597*^9, 
   3.6541498644221067`*^9}, {3.6571878415226574`*^9, 3.657187844802845*^9}, {
   3.6574867792524166`*^9, 3.65748679424082*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"leftedge", "[", 
    RowBox[{"4", ",", "x"}], "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", "1", ",", " ", "4"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.4902208296029997`*^9, 3.4902208785039997`*^9}, 
   3.490221040314*^9, {3.5894100241796317`*^9, 3.589410026052739*^9}, {
   3.5894100842970705`*^9, 3.5894100876092596`*^9}, {3.5894102168886538`*^9, 
   3.589410225753161*^9}, {3.654146807217391*^9, 3.6541468084590487`*^9}, 
   3.6571630002374*^9, 3.6574213411638346`*^9, {3.657496993127414*^9, 
   3.6574970007413807`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"9", ",", "7", ",", "4", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{{3.490220830809*^9, 3.490220879091*^9}, 3.490221040939*^9, 
   3.490540749949*^9, 3.4905408654110003`*^9, 3.490540978961*^9, 
   3.5619281782539997`*^9, 3.5787104950635066`*^9, 3.5881732670905943`*^9, 
   3.5881743948240967`*^9, 3.5881745190001993`*^9, 3.588175745014323*^9, 
   3.5881766726823826`*^9, 3.5881806383932085`*^9, 3.589075723760638*^9, 
   3.589078317569996*^9, 3.589409732636956*^9, 3.5894099893516397`*^9, 
   3.5894100264707627`*^9, {3.589410081973937*^9, 3.58941008796228*^9}, {
   3.5894102069480853`*^9, 3.589410226108181*^9}, {3.5894102858605986`*^9, 
   3.5894102941940756`*^9}, 3.5894103559926105`*^9, 3.5894104838179216`*^9, 
   3.5894105385110493`*^9, 3.65413190279377*^9, 3.654135366962663*^9, 
   3.654140096177697*^9, {3.6541468126365795`*^9, 3.6541468143412957`*^9}, 
   3.6571406037654114`*^9, 3.657163001314537*^9, 3.657163962586603*^9, 
   3.6571641686552706`*^9, 3.6574207800890875`*^9, 3.6574214277923355`*^9, 
   3.657422626179511*^9, 3.6574227726946163`*^9, 3.6574235426068826`*^9, 
   3.65742435584315*^9, 3.6574883393480234`*^9, 3.657494274030133*^9, 
   3.6574950752868795`*^9, 3.6574965906383047`*^9, 3.6574969555116377`*^9, {
   3.6574969892169175`*^9, 3.6574970052489533`*^9}, 3.657497229883478*^9, 
   3.657521020484001*^9, 3.6575532392882695`*^9, 3.6575533015456753`*^9, 
   3.6575812708338237`*^9, 3.6575851314090548`*^9, 3.6575904657379284`*^9, 
   3.6575929125616355`*^9}]
}, Open  ]],

Cell[TextData[{
 "This is correct. The base of the ",
 Cell[BoxData[
  FormBox[
   RowBox[{"tri", "(", "4", ")"}], TraditionalForm]]],
 " triangular number starts at 0 to form {0,1,2,3}. The second row starts at \
4 to form {4,5,6} and so on. "
}], "Text",
 CellChangeTimes->{{3.654149899122013*^9, 3.654149976389825*^9}, {
   3.657163046559783*^9, 3.6571630664358068`*^9}, {3.657187862684868*^9, 
   3.6571878675101433`*^9}, {3.6574199963940706`*^9, 3.657420043772087*^9}, {
   3.657420953771142*^9, 3.657420953771142*^9}, {3.657425741588618*^9, 
   3.657425766466277*^9}, 3.65748677762521*^9}],

Cell["\<\
As a minor aside, we can get the right edge by doing:\
\>", "Text",
 CellChangeTimes->{{3.588179685463704*^9, 3.5881798393115034`*^9}, {
  3.588180588289343*^9, 3.588180590055444*^9}, {3.5882576570544243`*^9, 
  3.588257660095598*^9}, {3.6541352543213596`*^9, 3.6541352543213596`*^9}, {
  3.6541460401839905`*^9, 3.654146048944103*^9}, {3.6541461865260735`*^9, 
  3.654146186782106*^9}, {3.654146277986187*^9, 3.654146308778097*^9}, {
  3.654146830007785*^9, 3.654146839900041*^9}, {3.6541468699158525`*^9, 
  3.654146894649994*^9}, {3.6541500400324063`*^9, 3.654150061779668*^9}, {
  3.657420296049122*^9, 3.657420296049122*^9}, {3.6574213459639444`*^9, 
  3.657421345964444*^9}, {3.657421378020015*^9, 3.657421378020015*^9}, {
  3.6574856559792795`*^9, 3.6574856898665824`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"rightedge", "[", 
   RowBox[{"n_", ",", "z_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", "n", "-", 
      RowBox[{"(", 
       RowBox[{"z", "+", "1"}], ")"}]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"n", "+", 
      RowBox[{"(", 
       RowBox[{"z", "+", "1"}], ")"}]}], ")"}]}], "+", 
   RowBox[{"(", 
    RowBox[{"z", "-", "1"}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.657485694849715*^9, 3.6574857024541807`*^9}, {
   3.657485735982438*^9, 3.6574857390463276`*^9}, {3.657485822564433*^9, 
   3.65748582553831*^9}, {3.6574860502198415`*^9, 3.6574860540258245`*^9}, {
   3.6574883561101522`*^9, 3.657488362423954*^9}, 3.65752091518563*^9, {
   3.657589287483309*^9, 3.657589297155037*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"rightedge", "[", 
    RowBox[{"4", ",", "x"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "1", ",", "4"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6574877016360445`*^9, 3.657487717513561*^9}, {
  3.6574883696473713`*^9, 3.657488384585268*^9}, {3.657488417037389*^9, 
  3.657488418153031*^9}, {3.657488474349167*^9, 3.6574884947432566`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"9", ",", "8", ",", "6", ",", "3"}], "}"}]], "Output",
 CellChangeTimes->{{3.657487711662818*^9, 3.657487717679582*^9}, {
   3.6574883748470316`*^9, 3.657488385051327*^9}, 3.6574884184330664`*^9, {
   3.6574884848965063`*^9, 3.657488495290326*^9}, 3.6574942740601363`*^9, 
   3.6574965906623077`*^9, 3.657496955539141*^9, 3.657497005275457*^9, 
   3.657497229929984*^9, 3.657521020501503*^9, 3.6575532393182735`*^9, 
   3.6575533015706787`*^9, 3.6575812708483257`*^9, 3.657585131427057*^9, 
   3.657590465759431*^9, 3.6575929125766373`*^9}]
}, Open  ]],

Cell[TextData[{
 "The only difference from the leftedge (simplified: ",
 Cell[BoxData[
  RowBox[{
   FractionBox["1", "2"], " ", 
   RowBox[{"(", 
    RowBox[{"n", "+", 
     SuperscriptBox["n", "2"], "-", "z", "-", 
     SuperscriptBox["z", "2"]}], ")"}]}]], "Input",
  CellChangeTimes->{{3.657488079338007*^9, 3.657488084016101*^9}}],
 ") is that we add the \[OpenCurlyDoubleQuote]",
 Cell[BoxData[
  FormBox[
   RowBox[{"+", " ", 
    RowBox[{"(", 
     RowBox[{"z", "-", "1"}], ")"}]}], TraditionalForm]]],
 "\[CloseCurlyDoubleQuote] term to the end of the expression. "
}], "Text",
 CellChangeTimes->{{3.6574881491403704`*^9, 3.6574881546600714`*^9}, {
  3.657488209578045*^9, 3.6574882944583235`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{
    FractionBox["1", "2"], 
    RowBox[{"(", 
     RowBox[{"n", "-", "z"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", "n", "+", "z"}], ")"}]}], "+", 
   RowBox[{"(", 
    RowBox[{"z", "-", "1"}], ")"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.65748602146369*^9, 3.6574860265803394`*^9}, {
  3.6574881205782433`*^9, 3.6574881330203238`*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "2"}], "+", "n", "+", 
    SuperscriptBox["n", "2"], "+", "z", "-", 
    SuperscriptBox["z", "2"]}], ")"}]}]], "Output",
 CellChangeTimes->{3.6574858313970547`*^9, 3.657486028757616*^9, 
  3.6574942740791388`*^9, 3.6574965906858106`*^9, 3.6574969555671444`*^9, 
  3.6574970052994595`*^9, 3.657497229965989*^9, 3.6575210205295067`*^9, 
  3.6575532393442764`*^9, 3.6575533016041822`*^9, 3.6575812708658276`*^9, 
  3.6575851314545603`*^9, 3.6575904657804337`*^9, 3.65759291259464*^9}]
}, Open  ]],

Cell[TextData[{
 "The ",
 Cell[BoxData[
  FormBox[
   RowBox[{"-", "2"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " is the only term that\[CloseCurlyQuote]s different. This is basically the \
same as how we algorithmically produce:"
}], "Text",
 CellChangeTimes->{{3.6574885484340744`*^9, 3.6574885502458043`*^9}, {
  3.6574885948499684`*^9, 3.6574886343479843`*^9}, {3.657488674754115*^9, 
  3.6574887173700266`*^9}, {3.657489052352064*^9, 3.657489079970071*^9}}],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsfQdAFEm39WRmyDnnjCRByRhACSrmnOOa1pzDuqur7prWnAUDJiQqqChg
xJwTihkRBcl5CDPw3+6aaXoGRL/3/m/Tq96zvU2H6qrq2Tp1qu69ZTFuZr+J
LAaDMZcPu35jFwbMmTN2cX8O/BG4eN4P49hwMJPJYAyGe4hjFoOJgYGBgYGB
gYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGB
gYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGB
gYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGB
gYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGB
gYGB8aeB8xe9l8lgUBmg8JfXBgU2kwX4v5wBDAwMjP8j+FuxDwYGBgYGBgYG
BgYGBsZ/FbBR+z8feLgPAwMDA+OvApqVa9qkk3R/DoABaW+m5+OvrxlUORT+
7FeTFUJtf5MKwcDAwPjngq65JOoPNbAMhqaGmrqaCkfa4LeizppfapEgWp9h
5DCot7Ngr8Bm6WiomhoaGOobaKkpc+GiNGMtPi53voUMMxkt5ER68mul45D3
oBqATV1VTVNdAzLDkb6R3VJ+mtPTd1ZRK+VCDMhjMeG7GBro6enoKinwmgiR
KC/nT/vZYGBgYPxrABtHesCS0ge0sQN79+3drZuhtjaXDUz4VRJkk4zAYrDp
CdJv4FCvYH27lYbUlPkCPV3t9m1dRwwZPHfmrGmTJw3o09fN2UldXV2By4Mb
WqRCiXqValjYc0mKg4w18QiiLfiXOM9Ee1YzhqIIVPogkQKbzQYG7BkSMqjv
QAsjIx6HCxfpxNpSnbScuPSAhbJK52tuSzfDHlJTFCjoamq5OzkN6Tdg5pQp
E8aMDvT3NzMwUFVW4XBY9JxzaN8CAwMDA+P7QQ5Fsk2MjGdPn3bhQmrKufM/
TpqspaHZCgkiSPiFvIdIhPyT9G6QHBC3MZt4Sg4Ur2mqqgzs2+fIwUNXLl1+
cv/xq5cvXmY8f3j/wfkzp39dvsLPw0NFwEOZYXxdSaGkGAR3MCiegnIhNqGK
2WLx5U8yUVIsqITxo0clJ51Ov3R56fz5UEVyGWiuqb9WWFmwEcmSd8pnieRx
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
rEPNzExab/BZyKlNRbVnWPfU5LOEg2FV9ZvMF5+zP4jF9fDnvVvXJ44ZgyKi
yEXspEgwNDAQSbaC3M+gd2wsLBnS6NNwMLBvnxcZz2tAJdbURh05rKOl3dxZ
nkUbmEWhSq3NLVavWJ715i2osMePHwd4+1Bql/GtRRLl6uSbc4J0oFc42NnP
mzV7++Yt+3bt3rtzV4uAS+G7dy2eO5cwzeXLh9NhkkO+bs5OC+fO27ZpY89u
wZrKytJIACyohEnjxwG5g+SG/sPcmTPMjU2+ZnyLgYGBgfFNcIgBy6Y5wery
svjo40gJclhfXaWObHUZ7ZydjxwIz8/7AkQG9Lfm11+3bVz/4sWLGmGVUFgL
irKjr5+ioiLVzjfJN5K4/LzaP7h/l3hpZdXVi6ldOnWULB3IZILu+3nJ4sL8
AkJXfsrd8scGanUnavGmpjSZkuFNOLaxtly7etXHbEJgAod28fVjMxiUj+F3
WlFKSNDNlSRBsbC6UkKCpOr8mtsj6hU42Tt4tXP39fSQmMR4tAexRt/DJV/P
ds4ObbTV1ajUpBO1pFkOhzN0YL+rFy/l5XxMjI/rGRIiTZ/l5+ERdeRoYV6u
SCS6djW9c8cAFFK1+cQrBgYGBsbXIBeBk1SCoS8znolr66rLS2Kjjje3DpWb
jAMYGujNmjo1O+tjo7ihvLgoISa2nYtj2zZOWzaszftM0GLWu/ebN26ys7KU
C1tNHTja2R4M3/f5M+HYnpubu3Hd2pAugfa2dm1dXCdPGH8xJVVc3wBCLP3K
1QljRiuT4Um/Bo7UzcFY3+CHCeNijh+7c+v24QP73RydOd/NfXJ1Akrw5o1r
9bV1NZUVl1LTIFeUbS09QfqfTW74zQpLHjetfNFClphkhZM8O3zosBvX02uF
0JuoPrAv3N/T097eFrj1l6WLPr5/JxaLc7I+bN7wh4GBAePr4UwxMDAwML4J
JEaCugY+fvQAGKeooDBy/z5TU9NWlCBSPWHde5w7m1xeVlIvagCeGtSvr5aa
OpvN7Ozreyk1BS0D9OjBw25BXRVaWs2WiH+iptqnV++0c+drKqtqqoUFuTm3
bl5PSohPOZf66uWLyoqy2prq7Oyc35Yvtzc3lVvsvvnoHxqQ5HO4OhrqpsYm
NlbWJkamAj6PxWT8RzKQQ9YJ3Ozq6nrl8sW6mtqKkuKzJ0+6ODm3XCfkhmxW
6aKMOpYDi4o0TpNvFHUiYeju4rxp/QYQwqD4CnLz7ty4fjo+/urlK58+ZAMt
VpaWnTgeBcJZSaAoZ1eDgYGBgfFNyE1sQUPawcf3QlqKqKY25+OHNatW6uvq
yQ36NVeCP/zww6ec7MaGxjeZL5cuXGCgp0+uis7SVlebMGoUCDEQLECp0ydN
QYadzTmIzeYa6Ov279fnWOShTx+yGhvFkFp9rQgEIOlqUXXvxo2f5s0B9lHk
KbC/RWQccpFBiQOEdAaQQeOdbzIFvYzwj7OdHYjiqqoqIKM9u3YDq7a4OC8S
oU1nWvIKaQKTiDjHZUpmJ782w6iipNzBz3/b1s1vX2YiF4na2lp0kPXm7Y7t
W0MCAjTJNRbJ+9m0PQYGBgbGfwAUQ8bCxHjG1B9jo07s3Lw9NCRISUW5detQ
eCQ4MCB8777TJ+OWLV7i5uyCFCXpeMgx0dObM2PmmVOJ0UeO9OvVU4uMG0Mf
IeRIF3+A/6jy+YEdO/z68y/7du2Oj45JO5d87vSZI5GHN27444eJY80MjKhn
v2mrI1lTiVzAnVw+iRCPaMbwe+xhENC6SwwU33vEiMOHIiP2hRM6l5yUlKkH
khPl5ihZtMUNW3zvN3OCCqvMF3i4us6bM3d/eERifMLFlNTE+LiIPbt/WrSw
vYsLn8Nm4HlADAwMjP8R5Nph0iuBBerDzsbWysRMgctrLprklCCbDEBqrKft
7uRioKPN4XDoHEesTKSiYmNm5mhjo6qs0lxAcWQ84zg8Hk9JSUlVRQm42MvF
1cXeXltLQxk2voAylfmuojFb4Mrvpz86UCkEAoGtpYWdlbVAQVF66atDxIj7
mkLifIukvnaVI5095LI5iorKWmrqNsYm3u7toT7VVFQVlZW4bB419Pq/KSMG
BgYGBgISZhyJm/i3W2+JVwIZLZMlGYKUvUqaj/LIybXWHdmYjKaNSJDL47GY
LJpU/I/0TiuTht9bFVSYbmmdSETu/z/Z9T2chcxBGdLaU1BQ4MhW1He6e2Bg
YGBgtA7KbfzPX5GHcqUnHN4pR3imZFkHGT+Iv6Ry0PYXfRcZaclsOvNX5QcD
AwMDA+PPB14uEAMDA+O/B2xgj4GBgYHxL0MrBoqt3Izw5w8//u/n8jDo4Ej3
uD4xMDD+r6FF1vu2ZT5T/gDjbwJ6aLVWgKcLMTAwMDAwMDAwMDAw/k3A8hwD
AwPjP4JcvMpWwJDd/rIJQRaLno2/Q+39LXJC86RsnQplwr79bWoSAwMD408A
3aUOtYAqAr6GmjpXuqxtc9MXqqFU5Cloaqjp6ehqqamSKwA2xd5s5UUt/imH
7+FTKhscNlNdlciGjpa2qrIKihVDD/75nYmzWwoTKskns1k90BZ9YBIh1iT1
wuew1dSIzGhqakL9yHmpf7UsRGrsb4Qa+DqRyYXlQRt8QTUVdT0tTU11DbQ+
Y3Nq40gekdQYh8FQVlSCzOtq69CfIjPGbj0PGBgYGP9ooMZToMDv5Offv3sP
U0MDLkd+6R8W2QxyWGwlgaKxlrafe7uh/ftPGj9hcN++Hq6u+pracJ5c2lZi
kkG2sWwqfZY04ihLep5y5ZbsSa6R+OAzv8WDLBaPxwP6c7K17d+z95QfJo4b
NTIsNMTe2kpFoMjhcFhfMXGUW6wB3sghg7DRyohezabn/2uAB5nkgrZQdQbq
Gu1d2g7s22fiuLEjBg3x8/Aw0tEBWiEWr5ddR6kpM8yv9AdYHNnbyOpiIJ93
YmGMlpJio4gBPI4CdAYcrKx6hYZOHDNm2KCB3u7tddXV+TwFNlueaiXLDcM3
VVKyNDULCQj4YeyYSePH9evbu31bV+gOQSWj1THo92NgYGD8o8Gh7RGAtqAZ
7Nun15HDh9JSzy+eO9fS3AIJCqleQFqHZWlhNumHiZHh+9POJd+9eePpw0e3
r99IOXP+yMEDi+cvcHN05NAWyGsObjM6YEoZ83saWEriqSsr9QgJ3r51W+LJ
U7eupT979Pjx/QfXrl4/EXVs0YKFri5OynwFhjSAdiuVQK1PBO+WXiLCnbGb
WJvdbG1BCYOTzxKVYqpvOHr4iPCdO1POJt+6dv3pwwd3b966mJIcdeTwL8t+
9vPy5JIJ0gOlSg5oJMhsaekoaaW1LGw5zSoH6K9Lp46rVyxPjI9Lv3L18f17
t2/fvnD+XGTE3gljRlubm6HeDkXKsBdwee3busEjsTEnLl+89OTBQ/imt27c
Ppt4at2atUFdumqqqrBonYe//NeLgYGB8f8LVNBPgUAQ2LEDMEhlSUVdtTDl
XKpnew+GVI5xpBrQwcZ6waxZd2/fEYvF5Eo99ZXFxfW1dY3klvn8xepffnF1
cGCzuYxmDb6EdMi2nkPSq0SG0PPDZHElj7ApGmU0I00NdVUQXImxJ6sqKhsb
GuuqK/I/5xZ9yWtoEDWKGzJfZGxet8G9rRsaqJR7Vqb4pIhjI14gxwO55PoR
aISQJQ1wLZOCNFfEkhYsQpCCgJoyfvylCxdrhTVQCaK6+oqiEnQM28cP2Tv/
2NihvZcCX7KKH431ZCKOcskMkDVDVA65bwJPcokqEZteHJSymopqUNfAyIOH
8z9/EjdAxTSWlZTWlFcSaymJxLdv3lowZ7a9vT2fw2VKWR4YsIO3//bNWz59
+gQPNDQ0FOflQWXW1lTDQ4V5X4DHe/forsgVMPA6vBgYGP8uSIJUs1ggH4AB
I3btysv9JGoQ1wurb1y77u/rx5AGx0YTbVqa6ovnLXr86IEQmsjKqlfPM5IT
Ew4fikw5dz7rzVuhUFhXU/v65auflywG7SDbZrLlFxZkSoJLN/nmS9dPZzQb
CJVTrIo8Bb92bkkJ8UA0sOXk5CQnnd6yZcvuXTse3L5fWlpaXyv6mPN+0cxZ
6sqS5SSox6lAo/Q9pKrIZZkZ6rV3dOro7Q17ZSUFDuVnR1YRlQ0yBVKykSsA
CgQKP4yfcOvGTagQKP6Ht+/Szp0/eigyOSnxzfNMOAk9hA8fPmz8Y70ZuZ57
i2oXqVGSflteUVc608dC1cNsNn1JpMxmd/DxPrBvb3FRQX29uLSw6MGd24cO
HIyJjnr+6FFVVVV9fe3jx08Xz5+np6uNpvq4bI6VqdH61avLSysa6uoLCgpu
p6fv27Vzy6bN8E2hUwE1XFlecTA8wt7URK4mMTAwMP7pQDJEV0V1xJDBCTGx
uZ8+QzMOSqq+uu7erZsd/PzpjR60gc4O9mdOnayrE9VUC588uD9j6hQHO3t7
axtXR/vlS5a8e/MWHheJRInxcS5Ozl9bX15irMgk9rR1kSTTgnCSWOJW2uxT
j9BTMNQ3+HHq5IzHj0C55Ofnb1q7NtDf39rcws7ObsrY0VdSL0BrD3IMmMjf
01uBy299BA8NDJoYGU+fNOV80pmnj58kxER7uLqx0LpEsvKHLbsgOwgqK0MT
4B3UAXiT+QLqwbWNi621jaOd7YzJkMknhCQUN16/fM3fzwfoW85ChkOrFpZU
G0oCgROQ3YibpLOZTJkiMMh1NBbNm/s5+yOUHZjr0L59gT6+UCcONrbjR496
fPd+rbAOMpmafNbN3hHVsJJAsVf3bsDX8NHhs8YdP9G/dy87G1tzc/O+PXoc
OXigtKQI9ODN9GuD+vTTUFfGY6EYGBj/DiBdAWzSPTho5bJlV9PSSotLoLlr
EImhCYUm/e7NG538fEnlwkH3a6goD+zd++H9B3Ab0OXvK3+1tbSQWA8y2QF+
fkCjKJG7N28N6NVLXU2l+TAmMfOowLO0MOvSqaOTvYMyX0C16mhrY2sDl9q2
aQPtc4u6A07aWFlv27T5w/ushoYGUKPdgrpSixZZm5pv3bABWnvg4tTkc4P7
90PptLxQILlcO2IQe2urjWvWfM75BPl/lfkyyL8DX8J3DC5DnqxZUgcEFQE/
qHOHS6kp8BSUfe/27e4ujpQdppuj46GI8IIv+XD19YvnE0aN0tfWki8U6d+h
q6nRob0HFCQsNCgsNITcB/UI6UodkwchYT26+Xt7GevrKbBZDJoYRFrV1NAA
6Bg6BvXCmqdPHk2dOIlaRMnGwnLT+g1QY5AT6KtMHDfWSJPIiZqK6qxpPz68
ew9qEnhz3qyZRHWRH0NDXRVuy8n6AI88e5Ixf/YMU0Oj5iIdAwMD4x8HRDoq
SspDBw5ITjpdUlICQqDoSx4QSnFhEaEWhDVAgkgJUiSoo6Y2dMCQOzduCquq
L15IBYoE6SFZMIjFcnNtu3XjpiKywb9/+xZISy1NdTnJg+ahgDqnTZ5yJPLw
ml9/7ejrxyf9COASj8dztLP/ecni2Kjjvy1fbmNm9jUSBJ215Y+Nnz5kw7ue
P8sI6OBPWfIb6eisW7UK8g+t+umkUyBzFPkCigQ5sjVA36zNzVavWP729Rt4
8Mnjh508vVhSIxy67JIZ1GUyVVWUoBeRcjYZ6gS6B317hsHr2Gw2MVLKZAJZ
r/xleda794hYp0+ZbGRgKCeu0VvcnJ0g23EnokBon008BXsEdHw2MeHsSeLP
5LOn/1i7JqBDR2VFJXo6cCzg8zr4eCclxMO7qioq42PjQkNDORweUpCa6hoD
+vQFsoOrBfl5+/fu8Wjvjkhw9vQZ9+/fh/MVZeUzf5xGuUWoKgpGDx36kaxk
UMc/Tpmqr6uHXSQwMDD+BWCTM32Wxsa7tm2Fpq+6sir/c+7+8Ig5M6aDiAMd
IaoGErwlJUGJZwSPxXS2s9uzY2fymbML5sw10tNn0GbWgBOPH44sKSqGNhOU
EbCbQIEvx2LI/iS4a1BCdPyX3LzC/IK9O3c4WFmBroFEbG2soIV/mfGsplr4
8MG9Tr5ejGaDfuh10BpPGj/h4d07QFig3X5estTRoY2SkhI09cB68XExtbW1
IGa3btkE+o5L+BO05KPHJCoB2nwFBQUul9vGxgG0LSKs50+eghJUUuArENeA
nHkErzWrRmQpZGFksnb1b6nnU1Yt/4WUxqi6iLK6OrtADYNqhjQfP3zUq3sP
NSXl5swOZ7p27pRy9kxxXh7IsRYBvAZfCvZXLqQNHzhQQ02dng4kASn36R52
4XwKorN9u3b7enogkQu5AfUd6O9/61o6UqxJiScDOwcQs6t8QY+Q4JOxMXXQ
9akWgm6F76iurq6orOTVzn3LHxtAxorF4vPJ5+Bx1J34y3+9GBgYGP9LIAMM
dTWVhXPnpF+9HHP8GMgBV0cnr3btoRUFIQg8ePc6mhNkUdQDMkpFwHd3cfbz
8bW0MONxFIjUmGjWjDF+3Jjnz59DQ9ogEkcdO25saNSCTwF5xtWxzZb16xFd
vsl8ufLnpcCnIEl+GD/h2ZOn9fXi6upqoFF4EUXB9D2hGTlcJ1vb7Zu35H3O
raysfJHx/MjhQyuW/QQ0dO70GeJkecXVy1eGDuwH7bbE/YHMBl3HKXI4dhYW
wZ07h3bqHODnN3zYkAMR+9FwKOjBWVOnBnXqBNwUGNCps6+vhYmxZEaOMqdh
SgxHBVyes0Mbf39/OxtbJUUJ7zPINe77hPW4f/sO9DGArK9cuOhkb0dN7cl+
Dkb34JA7N65D1TVSW0Oj3IZOPLp3f9yokZoaanJKUEmgGOjf8cypxMZGMXBl
4slTYaEhhFcg6YKhrqo2sG+/+6AEGxqhcq5dTQ/r0Y0YUOWwDHS050yZmvH0
GVR7ds7Hs4lJv61e+dPSxcciD7159RoU7qvnGcsWL9LT0f3Lf7cYGBgY/1+A
hvlAq7i7uA4bNDAooLOBlhacsbG2hD5/fW0dQYKySpBFC0XCkDrWIWUHzBgS
EBB97DhhVC9ueP3iOXCroiIxE0d3spYkwmSqKgp69+h+4+oVaGCBcJ/cezBi
xIjRI0edOZ1I+Ds0Nt67dXvSxAm62joMmhUKm2bVySAtIUMDA6OOHxUSj4gh
qS+fPn/+9BFyDmTx7tXrxfPnWZqaMKSDmXKRwUAeGmprjx0+/PjRqBNRx04c
PpqUEAtirby0DDIABH0hOfnE0SMxR49HHTkcsWd3n7CekvfS1mVg0gZLqfFY
5JMBDOvv6bl3+3ZIEBjw4/usNb+v1tLRbtGwBB4Cflw8d27E9h2R4eES7I8A
Xdb0J4nDEQd+XrKwo4cnql70OOW9Akx9YF84fIJaYc3rjIyF8xdoamqS+WK1
sbUBWZeT/REyA1efPn7Sv+8A6ju62NuvW7sarkLZ4esX5uV+zv5QSVSFGKoC
1LqPR3uocHIW8hsR2DAwMDD+/iC9tglS4LGYoKqAEdAclr2tXdq581ISJOcE
aeHC2CiIi5SGiCaUzdJQVwUxFR8VXVSYLxKJCr7k79i0ycPNncPhSFpppsyo
HXrWxMh4ybx5jx8+IUbnSorSzp69ce06KJSGWvGXj5/W/bbaSFeLJRuki9OU
B8IIRFNVDd6yY8OW4sIiwi+vrBxeXZz/BeRMXbXw8f17s6ZOs7Yy43K5LClb
NZWCyYQi21lZgpasqqqora2vq64CBVpXVyeuFzXWi5B1EBB0LWFPCaTwZf7c
eciChcXiyHk10nkNsa2Kioqfh8fBXXsLPuVCQpC3qMjIzv5+fD6f0Sz8GqoQ
BTZLS1HJQE3dWFPLREODgKY67I01Ncg9nCeOjbQ0tJVUOWwUpo0qFBt9DwUu
D2o1N/cTZB7kJ6jCwf372dnY21mZz5w4KfPJE2FVDRRNXFvz7tXLYQMGkH0J
Ll9RABU1d+rMV5kvofhVVVVFBcWFBV8g21ADn7M/bly31s+9nUAgICPStBz3
BgMDA+MfBFAN0pk+JOYI6xdoUm1trFJSUuhKkCn1E0TgsdhUTFGgA21NrVFD
hlw4f7YwvwAESGlhEagn0JUCgQLyoZMLOyZVc0AkHCsLy51bNwF1imtEIJeQ
BqyuqgDZBQzC4fAYsq5wTeKLydRUVeke2uNw5P4PH7Nrq6rzP39KO5e8b9fO
AxH7gf5KS0uhAX/x4sWyhUvNzUwIim8WIxpO2ltb7d66HQorFosJD3vgvoYG
KEVjPWEiK0ZUKIIjQhguWjifkkKsZrlCgdeQHtRQUe3ZrfvJ+ITc3Fxkcpmc
lDigT29gRugzsFqKuAJPKfMFNsYmbdu0aevk6OboCHuAq2Mb6piAo72bo7Ot
hYkGX4Cqt6lWyZ4G5LBTh45HDh6C4sOrC/OLQPGdP5N4JfXSm8wXUIqaaiEa
6854/Ghg3z7wXr4C18ut3drVvz17nlFdVlVSUnL/9i1QoHu27bqSegE+K+T/
08ecA/v2erdvR5gwtUTiGBgYGP8sMGkjaWRUNEkUaDsbW5oSvEaQIClt2Cxp
ADGGxJMNmBFYbNrUH69cSKuuFDY2NH54n7V/757uwUGkzUbL7STl4k2OlHK7
dQlKiIkWCquICa+GBmFV9e2bt4b066fMV5DILtnHOVKHOGtLq+2bN+VkE/N3
+Xlf1q9e3TMkpH07Nz8Pr3GjRibGxtfXA5M13rqWPm7UaBXSFkVuUBcOdNXV
Rw8aDM17ZPj+8L374k5EP7x7r7y4BDgR1OXp06cPhu8DRITv3bp5S4+QrtKR
z686P0L2TAz0x40YdTrxTFlJKcpb1PGjQDd6OrotGudQ1qEubRxWLF166EBk
1LHjCDHHj0WTB9SeQNSJVb+s9Pf0VCVFpfw3ZbGg8sNCQyIPHnr/9h01qwhU
nvHw8cHwiMxnGcDs0N+4cfVK727dKBeJpw8Jj8s6UX30kWND+/f38/Js796u
X6+eUMlE96axMevd+19/XmZmYkrNEWNgYGD8oyERVojjpL5yQIIptOFQFDGm
edAw0HFw5/zZMx7duwstJIiLV5kvt23a6O/txSedwVn02JjNWn7kCw+yxd3F
ee/27dWVBAmCBAM9mJp8LjAwkCm7pAKdv1gkZfh6+92+fq1WWANZvZ2e3s7V
hcGUTMzxOezpkyZ9yc0T1deCrtmzeyfIVaZsKVA6fBbLRE+vvYuLu5sraK7e
PbqDlszOJjwCXr98NWHUKEjWra0LZNLV0cmAnM5rXpamOUomy9TYZOKYMVcv
XoKygJCEXgEo09CuXRSVlZoTOh1wFW67mX6Vij6HegUtHj+4c3vciBEaGhot
zs3BpshT8HR3W7Hs51Nx0RfOn0s7dyY26vjMH6d16SDxZwSCPn/mbJeArvBe
Iz39wwf2g3KEV0OnYvTQoVQ/Bw4C/Do8uHOX8Butrrx2+RIky5AGz8HAwMD4
J0NeztBIMJWuBKUkyKbsUoAB7a2tFsyZnfnsKdBfTbXw+bOMxXPnOtjb8vl8
aayTljzTEZgMRHCqyipzZ87KePSMCDJTVw8vbRARPvjzZ8/R19ah5tpkRkSl
Jig9goKQLwNIrciDh0EYknOabBTorF/f3o8ePCTsVBsa4qNP6OrqMpqRIDKQ
5bI5hIsElwcHjnb2a1atJgQU4RtOuEgo8rjA6YSLhHQNiK9Oh3HYwICTxo+7
c+s2vBfYOev927WrVwGNKisq0QOEtgjIXlBAYNq55NL8QpBpLQK2iooK6DCk
X7o8fPAgdVU1+nAxVeeQWyWBooa6qra2NshSayNjCyMjAz19LTVVn3btrly6
DKUrKig8eijS19uHQcYWgI4HdEEqyysuX7wUGhyCOA79Hpwd7JNOJSJjIfjK
6BGsBDEwMP59kFOCoppamrO8pNEjLeo5ttY2yxYuznhKkBcInlvX0ieNHWtp
asKieZ8j5SW/eBBaJok0rQFqAO1z5tTJGmFVdXX1h7fvCnLzkOHi9SuXRw4d
wuVym6snlDQ0+N26dEFO3Hm5nw5FhFtZWKK5S1SK/r17AUELhUIoyImjR5CV
afNI3VR2EbEiZ/msN28JZ/lHjwO8fahwKwzpCCodiNdQnQADTp8y9c5tInwo
yMDnT54ScartbCRxbCjb0a9QIWEd2sZxyYKFEXv2Aj0dOXioRcCl44cjf1m6
xNfTo3k4HTQcCrQ1bfKkVb+uDOrUiRgylW5AguNHjnzy+CFUWnbWh4Vz59hY
mMN5c2MjkIqE30Rx6eW01JAugRKLXDLnDnb258+cBv5tEIkfP3zk4+WNSRAD
A+PfBKpBQ40eIkExqQTv3ZAnQdhAYsyaNv3RvbsNjcQU0suXLzdvWO/n4QGC
wtLcwtrcwsrM1EhPH3lVtzgGiE62bdMmfOfOvJyPkM6XTzlbN2yI2LXr7du3
IKNqKitOHD3m0c6Tz+cxZEdEKSXYwcf76cMH4nqRsKL8Ysr5jr4+hGEPuWmq
ayyeP+9L3uf6+vrCvC/bN2/S0tBkSEmZJTe4ymyao7SzsgTtlk1GCXuR8byL
rx9Jw99YOYhB+puPHj4s/dJF0LNQHGIUdN/erp07AatamJlDhUDNGOvrqSgp
M2k9BKpc6KSGmrq7i2snP9+ADv6AwI4d5A4QOnfya+/SVkdbk4pljYiVI3Ub
GdSvL1RITtb76GNHgwMDmKgADIanu9vhA/uJpSXExFoSQHYqJI0a6urEHD8G
vQViTPt5xg9jxwn4kogxICp79whD9VxRVn4uOcnN1R0bxmBgYPxbwSDDkaWe
T6mrFdZVVsvNCRIe8RyWp7MLSAOitReJoeW8dvX6pvXrflq0eOH8BUvnL1yy
YD5IjB8nTQ7u3FlfVw+pueaLnhtqa0+ZMBYor0HUWF1aeuZ0one7tl5ubru3
b0NhNt+8erv+9zWg7xiy04sUYTnZ2x09Epn/JRdIJ/djzqrlK/y9vUxMzW1s
bEBFnk08BTkE3L5+bcrkiWoqqt9TfDMjwxmTp0JmMp+/iI8+4encVrqiU9Pa
iEymvJaE0tmZmh09dBC0M2lQ2vjw4f1tmzYuW7wE6mQxVMtC2M+bMfXHnqFh
JkbGCly+nIUMfeqTy+ZAb6Q5COtT8oDHIiLXcKUWSlQiiEzhhlEjRt66cbOu
uqqipHT31u3tHZ3MTMxd2jiAMn39KhPq5NPHnJ2bN5uaGFF9hhXLf377MrOB
WI5KCEQZFhpiZWVlbmoGRLl7146iIiKA9vvXr9b9ttrK0rz1yU0MDAyMfxbo
kgSR4LnkMyADKysrL6dcRMNfyEUCDnR1dccMG4GG1KDBB5QUFX/Kysl+9/bj
u+z3799nvSPw/u27i+dSpvwwEXiwuR4kjECCQ5LiEyvKSxsaGqDFHjVkiJam
OofHDgoIvHrlUnVlFRDKvTv3oRHmSb0z6Os4wD+aGipDBw6Am8VEgDfh56zs
S6kpUYcPxsXFPXt4r6y0uL5W9Pnz5w1r1jrZ2vI4MlwstwIRyUGEClbkKRjo
a9vb2rm5udnZ2KsI+BK/g2aMQ8+JurJKn7Aely9eEhNxqwk7zNLiMuDlD1nv
crI+ZJHbhw8foHJuXE1fNG9+izzCocZm0SIVFGh/MiXrVzCo5ZaoxRlZ0sch
q57u7XZv3wHfRdzQ+DE760Jq2vHDkWfPJAHNQcUKq6oTEhK6BwepKKmiF/J5
Ch29vSW2MXU1BQVF0Pk5cTz6+NFjN9MvF+Xm1tbWwpc6FRMDmpRapBgDAwPj
3wdihsjc/PChyJrKCuCRo0ePujg5ky29RAmqCVS6d+16KTVNLqhXAwEx/czb
12+gwQfhg1pm6Sr2koDUP4yfkPPxA4imd+/erfzlZ7gNcZyeljposScP7kNa
hQVfpo2fqKOh2aI5CofFNTU0GDNsWFxsdMGnXGRcWiusIVzdGxtrqmsf37/z
+4oV3u09+Apcavn4r5adWK+WJRmppW1UQBi5x5loZVtyZFYgEHT08IyPim6o
qyeqoEFaN+hQ3EDVUX5ewZpVq+1sbFuYy5O68KPldDmMlkEsrSs9ZtEiCTBp
ah1kb5eAwIh94dlv3pAvFguriRk9yAeQ8qGI8H5hYbqaWizpOvVERDV1zdCu
XUCGv8l82VBDLARcW1OJ7FTFYnHW+7cH9+0O695DW12N1awLgYGBgfHvAGqE
tTQ0x44ZFR8VFR8f/8PYMYb6BgyqiWYTc2om2npzZkyPjjqRfOYs4OzpM+fJ
A9jDhs4knUrctHZ9UEBnNVWJg57UzlNiOhMWGhJ99MSVCylrVq30aNeey+ag
mT4yGLXRssVLrly+mHjy1KCB/XVJ74YWvcvhEXVlpbDg4I1/rI86djzl3Plb
19KvX7mceCpuf3jE3JmzrEwIWx1KPrU+kyURVkzJYvdo4QxWs2WDmLIr3aMA
oZqqKuNHjzl25GgyWQlQA0TlnD0NdXLubDJZJ8lnkk7v2baNJCANmdg1stFm
WLRQbM0yyWY1G49lSRmQ/pSqopKfl+evPy87GR19OfXS7es3rlxIg2+6btWq
Du09FHlcFPiFeheDdJlv5+qy7Kclhw4dgvzfTL8KSDl75kjk4VW/rvTz8BBQ
C2rgmGkYGBj/UkhCfikpO9k7uDm3UVfVaE4cwFMqaqq62jr6unoGevqGunp6
OrpwAH8a6enDsT55Rl1dnc/nN/dKQE2uioBvb2rm3b6dubGJAo9DV1uQvoGW
jksbB3fnNsDIKC6KnMMgko2E/z6LJRAoaaipQ34c7ew7+vp4uruZGRlqamqC
IOKStj6s1jWgtOAsGsHJQW7tJJaUd+grDKooK+poaRN1Iq0BVCd0aGtqgWxs
vtAw4l85ox3qknz9t0roHMoFkqegoaEBX8TF1jrQ39/F3l5fWwvOKHB50ntk
YroySTMYkITa2trW5ha+nh7+np72lpZQKOJTkmtdcb+eKwwMDIx/AeirG6C1
jegxSSRBwRgSHwfJcKHEXFNmFJE+nMiScis1Jkk5JvA5kqnG5gG6OWQsTWaz
+UQKdK8N6l2KXAFaalYmA8z/QLw0H/lssZbkHmHKvbLV7WuJf4NZ5G0yW45a
I1eNqCaVoJ+BvmRTBmQe58g+gj4NgEk9QAtS+pf/SjEwMDD+e2BLBgNbUCXN
72kFf1qGpaOXLETRBEOx5LPxJyiX76mTP7NmqDph0aKbtv52eg4p9f21p/DM
IAYGxr8beMjr34H/5RQedgnEwMDAwMDAwMDA+EfjPx2Lk494JnuJ/qe8seKf
Yj349xeqnH/smKHUn+W78s+RvZPw95cLy4OtSTEwMP6x4ND2cviKGT/G3wsM
WY/C/yow32FgYGBgYGBgYGBgYPxN8L8RaFjsY2Bg/AtAOap/s02jO4uhM63P
Dcl4wH1r1bz/vyVi0Wag5Nzc/uLapmXnryURmZx869NQs8YyH/QrRWDTflFf
9Yj8E38PGBgY/+ch48VMd5GDC3yegqKiIhGdTOo/jq5yJPwocaOGG1SUlLXU
VNVUleERlrSFIxJpFu4Snedz2KrKKhpq6qrKagI2Wy7YJpsWC6UJlAM+zRP/
f+aMRrXAPBYTcq6poQY5URIok8HAWf8zz/T/MW1RmVFgE1F3ICdqKqqoGqmw
AxJSoPnvy9IEmyL3lt8irbGmGm7pTurrQA9BWVFJS5WInwNfqvVOgvQSW0mg
CL8ByL+6sgqKPS4N2c2SSx+qXUmBL0Dg8wTSY2XyL9rv5091HcXAwPi/C8mq
tSRnMRko5IqOhrqHm0tgxw6Wxsb0mDAsFK2F6LGzgf7UFRUdrKy6dekycuiQ
gb17u7u56qipQRvIgQZM9ikmuW4dl8vWVFZ2aePQs1vo8IEDe/cIc3Vw0FJU
UiADgSKNJsmMbAMoWfRHtv2X89H+fgUBOVFS4FmZmXfrEjRyxLChAwd06dTR
0tSMx+OxWCxOqyTYtKdWi4Adk0HLCZu8RHUwWoh4Rl0iSIHDRdUY2jVg5ODB
/Xr19HB11VZVhfOgndjNCK55MVshC4mwQvHMWc3C2ckewFcD/rUwNgju3HnE
oEH9evV2c3RUEwjgQ6NIdNQPhqoBSBwqzUBHt5OPz4ghg+Fn0CMk2MneDjgR
vjb9e6HodloqKg7mFl7t3H3bt/fxaO/n4QEHJDx9Pdzbt3Uz1deHgiNt+df/
r4GBgfGvBn09HQ6DLW2viOBXYcHBUUeOnj195oex4zTIlfWaGn9SAmqrq/Xt
0XPtypXRx46mJZ++ff3G1YsXkhJiI3btWjh/gbenF5cpWbiHYigTY0NoJDev
WxcfHXM1Le329WuXUtPiTkRBIj26h+po6ZJpy0e5lATJlA7NUV4YTEl47abo
aq2DIdWb0D4HdOr82+qVxw9HXjh/7u7NW0TY5zPnI/bsnjJpMjTgijzJ0j+t
j5HSK0T6J1uaq5YDhVF5ZpDruROdDW3N/r17kdV4/GJK6s30a1fTLp6Mjdu0
fsOgfn2NDY2aD0u2zg5fIUQ2VVcsWo0h3YdKCtXi5+W9aN7cIwcOnz9zmsjJ
xQuxsbHb/vhjyID+5sZEXHEqIB75o2EBWzk72M+fOy9iX/jpxKSb12/duXHz
YtqF44eP/LRkaUf/DqoqShxpAG1Ql76eHr8s/elE1LHE2NjE+LjE+ARyH3cy
IS4p4eQpQFw8fJQl8+a1sXEQcHl4XBQDA+NPALnEACFe2CRP8DnMAC/vyPDw
ulphY2Nj+O49Tra2XC4XSUUUCFRfV29Qnz6n4mLLi0uIFZFEjeXlpbXCOrQw
UlZW1q6NW/zc2ylweWTDSWhAEyPjqRMmpF+6WC+sqa+tKy0sKCsqRisHFRcW
nYyO7hPWA9pMUBdNsZqlbSDdoQwdSNzKpDSEeJNBW10I3daMxdjqyiphod1O
HD1SXlrW0NBQW1NdWlBSVFTU0CAS1Ykznj5b9fPPbZ2cWc24pjn1ICphkjGi
2cSeEoMSWS1H5XKpQSb1dQ2GDRoMPY2ysjKxqA4qpKSouE5UDxmrKCtPS7kw
ZtgwTU1NpOC+Uxm1OB8nqUBZJUhnbRVlxU5+3rt2bv/4IRst4gQZqK6uJpZF
qhFduXR56sRJFhYWPKb0ZwACkMv2cHNfv/r3D++z0LJYZUWFRV/yaqrhZyP+
9DFn/959wYEBClw+YkwtDc1Rw4Y+evRIulCUmL6klmQZqQb4r/j58+f9e/ZU
U1KkPt8/1HcSAwPj7w8krCRTMGy2qqJS2zZtIvbs/ZKbL64XwZYQEx3QwV+g
wIc74AZiEpDLHdCvf9q586XFJXBDwadPt69fPRUTd/H82Xdv3kLLWVdXl5X1
buvmLRZm5ohY1VRUf5wy7ebNm9WVVdC63rh2/fCBg0cPH3n08H5VWTm8qLy8
/MC+vX4ePnwOUAopT2QXJJJORMoY6lBkR8lDOdajN57EvBuP076ta2zU8aqK
ylohsRRs+oVL+/fuOnoo8vmTpzWVFaLqmvfv38+aOlVNUUEuNcqWhvZeNtFn
YHH0NNWcrGzbOTu3sbBW5HFRhRLjh7QBYbp6ZZE9A9CbI4YPvZCaVlZSWldZ
/eDewyORhw/uP3Dvxg1gk/r6eqGwKiEmNqRLoCJfiSEfClvu28nbL1HHbJKz
GFK+a77eBIPsoni1a79z67aCL/nQP4HuwYunz2JORJ87nfT6VaZQKKypqbt7
+86cGdNBt6IycVhsSwND6DAU5heIiUcqHj+4fSzyEKjpa1evV5SUAhWWFxft
2bXbykAf5ROUYEiXztDb+ZKbB8jPK8jP+4IOvnz5Ar0pKHKDSFwvFt2/d6dv
zzANFWVMghgYGH8CSFVCtJSG2tqD+vU9emj/5+yPjfV1DdAgicXx0TFdA7sQ
JChtkbQ1tTauW1tRVllfV5OT9WHrxvWd/PxdXZygIZ0+ZfLT+4+BX6C3D81m
UEBntJ6Osa7uscjDtbX1JUWlifFxwwcPaWPv0NbFdWDfPidj4+AtQKZw/5Qf
JijyBS22eFSDjzY2jQeR5qIsDpk0Kw45TtTT1QY1+vThA5AdRQWFu7Zt7xES
6mBn37at+4zpU9IvpREL39eIDkXs93ZvDzK2NfElnRczMtSfMmZ89LHjN6/f
OHxgf3tHJy5JWGzpUoPNi4PyCf2NzevWEb2CqsqLKecnTxjv7Ojk7Ozcs1v3
A/vCa6sqIZMvMp4vXbhIU12jxYHB5us4tLwxZQ5lPj2ZAI/DnT19xoe3b6D4
kJ+Yo0d7hnRzc23r6uYyc9IPzx4+rasBxSw8fTLB2dqGQc4DwmcKCw05dTIe
Mimqq09KiB89dCR8UHtbh2EDBsRGHQVmh0vXr1zt27OXhgqh6TgcDvxyPNza
DugRNm7UyEmjRv8wmsDEMWPgOHz3jvLCwsZ6UUlB4cH9h+xsbFEv4i//vwMD
A+PfDTQrpKupFdg5YOnCBSmg70rL0eLgDQ3EPi4mNigAxIgAzUyBfvFv734q
Dlo/MTSYJ44e6eTny5Au/t7G1iZ8967POZ+IQdF373+cNNFYXw8uGRroQTsJ
JzOfPBs9fJiahjpqkwVc3i9LfwKtAQ3p+9dvli39SVmZ6P/LLZ+H0hdwOcZG
Br6eHlYWlsCtlPZBSdlZWMEle2srJQVei3N5cNLa0mbzhvXZ795CTl5lvuzZ
LRTZMbLJx4HNa6prgY7PnU0GdlYSKMrNTtKtZznSV9tb22xauxaK3NAggjSD
/DvwSBmIlnqnZ4AjGXluIsE927dATqDLMXf6dENdHVRMNpMzfuyE4sKihoaG
nOyPWzZt1dfVo3IisQWSTuZqqam6OTt19PUJ7NgBoUunjnIHgIDOHd3dXPW1
tZCtb9PXJ9Mx0tPft2s39FvqhTUvM55BTwbN58Jma2O1Y8vmz9kfiBp7lTlm
2DBdTQ0i88oq03+ccf/WPfiFVFRULJg3X1VFCY3xamtpTJs4ER6B/D978nT+
7FlGBoYMyeJZEiJWEwg0lJS0lZRV+Xw46OTjs2fHduBNUY0Qflq9ugUrKfAx
A2JgYPy3gVolPQ2Ngb17x0efyM/70iASlxcX5WS9L8zLhWNgBDjftXMnUgkS
k24qAn7XzgGJ8QkgDd68ej1+9CgNFWWWdDM1NgEmzczMhDYTElk0b66VmSk8
paGmvmzxostpqds3b7EwMWZI3cGUFZV+XrJUWF0JGuTV84zF8xcoKSkxWhq1
A0BSE8aMjtizd9nCxV7t3IkJRzIdkBiW5hZz58yK3B+xbOFCS1OTr5GgrbXN
9s2b0LTXi6dPOvj7MqR+bQY62r+vWIE07LnTSf3CwugkyJHNCQXYbCzM1/z6
69vXb6DNf/L4YSdPL470ktTiqIWaZ5DL0UIn4cL5c5Dttk6OTEmdEGO2k8aO
LfiSjzoSG9b8rqOl3UKdkNl2dWyzaulPoLLjTkTTAfqd2gNOxsb89usKfz8f
qHAGTUTDMXRv/Ly8QY/D66oqKk8lnAzr3gOqFH0g0G5DBgx8cO8+XIWfx75d
Oz3d3eApNRXVWdN+fHj/AZo9nDZ5Epe074WSwS9kxKBBH9+/g0tPHz+Z+eNU
Az19htxQLRrrJrQeG0r306LFL19kwi8KKHjyuHGU1wx2kcDAwPhvA1onEFBH
Dh769DEHKA8auqSEk5vWb0hOOg3qTCyul5KgIuILHotpZmCwesWv19Ovbduy
FVpvBmW7yGLZWNmuXfMbklqvX74aMWQo0B9SdiBnrC2tTAwMofHncrk8Hg8a
0m5BXRNiouvr6+tqatPOJUN7i8Zd5Qw+EZsEdQmOjY6BfOZ+zNm6cZO1qSk0
vFACMzOzlb8sf/rwAbTGd+/c6ujjKUeClDc3tMbTJk9Bw6Ggv+bPmwOiEnKi
oqQcHBgQfexobW0t5GTnjm1O9nZE4s1EE0vqZwc0ATew2Ww7K8vfV/767g1R
5OdPHnfx9VNgs+ASsYGeZcm4NrCZMiYuWlpakAHoOQATwSOQE2BeXx+v/Xv3
AB+JxY03r9+YPGE8qsPmjAAnQe4lJyXmf/5UWlJUWlzSIkqKiktLSy+cTxna
vz9KisoD0atRVuzdIwyuIjoDSQi/B2RlBBkGWR3QoSN8a7gKScFvI6BTZwZp
StonrMfZkyeh9wLkhcgRTkIRgJc3/Pbbl9w86BVcSk0LCugsw7wyXQgW/AZ6
hYbCpwdFCY+sWbUSap7qmfzl/3dgYGD86wH/uNjbA6ldvXjhTNLppQsXhXbt
MrT/wBNHjwEdEMOhJ6KCOnXi8/kMib8Di89huzm36RYS6u7mSthzoiaLWJyd
FeDndyk1BdpSaDMf3bvv7elFvIXFknpcE5xgbW7Ws1vo9CmTgTvOn0n8lJMN
L3r3BmTjfHNjE2R7Qxm60FeWb+fqsnPrttLSYqTjQGbqa2sBf40aMRIkSR1s
NbVXL1/xdG8nN3hIUQ+fpwCsDe180Zf8ysrKxw8f7d25Y/bs2ZAUFDMnJ6ey
vOLWrVsjRwyBdlvGM04K2KD4IDY7ent38PH18fAc3L/fgX17gZoJ3n/9eurE
SR28vDr4ePt7e4FcNTHQl7gT0FJoqnyyTuBfuC0ooOPUCRN+/fkXUG0gAKEs
uZ8+b1iz1t7agjAWYrSgieDB7sFBd2/eII0qmzbS3FLmT+JzPHg4YdQoTQ01
emYoaQ+fHinBhPjY7l27wldgkgsNq6uqAdndu3MXXgGVk37lWlhoNwYRIYEH
eV40Z86rzJc11bVv376NOR4FP57Z06dBlWY+y6iurHr39vWq5SsMDfTotEu9
F1WFnZV1ZHh4YX4B3J+amhrYOQD6SMjlBAMDA+O/DdQKa6got2/nOnbkiJ5h
3Y319XgcLki/uBPR9bV1JAlGBwag4VAGp1nMKyIRwrmcmFh0dXBYu3wlaEnC
7ORL3t49u0xMTOgjirDp6egCTZyKi4XGs6KktEFEtNHQ9qalpHbt2JEhY+HJ
lsunurJKv7497926WSOsqqmpuXvz1oB+/Qf3H5AQE1tRUQGt9KOH9+fOnIYm
16hn6eKLnIXk9O7W7WRCDLS6DaT2ycl6D9IVGfa/e/du+U9LoWWWzF7JTkuh
suhpaAwfODhiXzi03hG7dsUcP3bv7m1kB1JUUHj6ZAJw4sHwiH17d2/btLFH
SDB6kPOVoC6wqakqDx88CHodzzOegmoDPQ5JQRFv37w1pF8/VN1casF3WSpx
c3b6bfny6GPHT8XFJ8bGno6NRvszcTGnY2KJ4xjiT6hwUGeB/v6KijJ+B2gw
2cbCNHJ/BLy0Vljz/NGjObNma6iookq3t7Za99tqIGW4ClX07NHDfn36MqUT
fO2cnbdv3pT7OQc9m5fzMevN69LCAvizvLRsf8S+jr4+HLIHRIsdxEae+4TM
FCgP7tv3TeZLcWNDRkbGkgXzjaQDp3ggFAMD408ANK1kA8tQYPEEAgVkjQBd
8eDAgPjomNpapASjpXOChJk9chWkLPdQe6jIFzjZ2hIuY2/fQGMIJHXmdGL/
7j1VlVUo1wA0wmZlZg5q7vXLV+XFJWWlxXXVVbViETBIytlk0jVMWeIR35Jn
ATxuZmK68pefX2Q8p0bnLqZdIHzraoWgJrZu2GiuZ0gUitVURqQlJdKSxVIS
KELTvXndxuLi4sZ6EfBveXFRZWkJ4dlRU3//3h3gaEtTI2IsU/K41NeAzD80
6dZWFlv+2FhWVkYYdlZUVFVViUAyi+qIKdS6emFVdWV5VXVVWVVFNTHiOnsW
h8Mj2ZMjlyVJmkyGrqbGyhW/Zjx6VlpIDGnWVFYBD8L+Zvq1CaPGaKmCJuWw
ZWPQ0TldX03dTFfPQk/XUl8PYGWgTx4YwN7CQA+dtDQwNtTQVISssNhNbhrS
NOHjLl/yU0F+HnR7oEQno6N7dA82NTYzMtSfMHzE4/v3gP6gdOLamjevXw4f
OBCNCcDvBBTxtMmTXr7IhKtwT2lJUUVRERRcLKwFgb9+9WrQ3QIFRdKCl2Zf
JJ0u9fby2LNrd3ERQZpnE095uLWFnOBRUAwMjD8TXImxv8QEE9oraIhCugQC
9zUnQWQswSXt/5FSQwzYyccnfO8+UAGN9Y11NbU3rl6ZOGaMlpYWGgilrCCg
MVdVVQ0LDflt+ar9e/ccizx868bNsqLi+npxbm4uNIOjhgxRQnOC7BaCmkJC
PB7Hwc4+fOfO0tLS+loR0B8oDiRSjhw8ENDBn+CulkYOEVmrqKiEdOm6d+eO
V69eCSsqgTevX7l49MChY0eOvsx4XlleARwEbf7cmbNMjA05JF+Q47ySRMhh
QA6Io707d0k9viUbVBRQqnQUErmBiyHBpQsXoAFeDm10V5IlpuRP4OUuHTos
W7woYs9eKMXVy1dATYvrRcWFRZdS06ZPnqaupsIgXQzk6oSYm1PgAQPaWVg4
2Fg7WFk5WFvA3tHSijgmDxwtbdpYE5cs9A3UeAqkCpNxfiTdP5lduwTExpyo
raqGIuR9zr17/WZs1NGkhPgnTx6VFpcBs8OPoV5Y8+Lx0/79+8N7eTweiNBf
li65d+dueVkJCOqMhw9jjkeBorx2NR0egTNv3rzZuXWLu4sz4SZD8/pkSqKi
MsaPHP3ixYvq6hpQ0Ot//01HQxPLQAwMjL8AZKwY0qof/iKsFoODutBJkBoO
ZUmntLhSYaWtqdUnrCc03cgQoqSk5HzyuUnjx5iZWTBoMbHpm7qykqOdrZ+X
Z6eO/sOHDjsUEf455xNoKJBUxw5G2tvbQ2tPEm7zsCcMpMV69wg7c+ok6E2S
ahqgiX5w7/6IIYNVlJRBcMlJCUoJwrOW5hbQ2H4irUMLCwt3bdkytH//Tn6+
QQGB0ydNAjUK1AOXrl68MHzwIGTOwZEZfiScxA21dSeMGnXieFRsdEx01Ink
xLMvnj6rLC5Gxb+QmhYdHRsTfSzm+LGD4RG9e4Xx0Hggm0u17SgKnGQja0dR
oGBnZenn4QWZGdSv/9Ytm96/e1NbXwfiNPnMWV9PL74Ct7nLADwINblg1qyd
WzeF796xb+9uQMQeCfbt3Ql76GzAyQMR+5fMm+ft7q6iIGDIKkrSXIejp6k7
sG+f+OgTaHITTTLCR3mRkQkFeZX5srGBcCG8de16727EnCB0Zn6cNPHBndvw
AUSihsT4OOj2QGeps6//yKFDDobvAwYnhpdfvf5pwQITI2OqZ0IakBJ9CWtT
822bNtYKCRfEG1fTRw4fgRwzyVpqOegcBgYGxn8HbGSNiVgG2iKkBIW1NWJx
vexwKHE/GlpExu3QcibGJxCe3SIxsiwd3L+floamJG6z1A8RCMXGwhI0lLa2
poQLWJJ4zkC4yUmJSNDdvX1n+OAhmpqazSf1EJBIdHN03LN5C7TJyOyjoqT0
3OkkZLXIogdLobn1oWd9vLyvpV+prqqA5v3uzRtACiwymDZkRJmvMPvHH4vz
8urr60sKCnfu2KaFhAnNvBPxKZ/FsjAy8fFo7+vt4+nerl/f3sA1EsOYl6+m
/DDRz8PD28sDbvB0J8JBU/6MLOmsIvpTIBCYm5rZ2Vob6hLzsJI6IUnJs73H
iaNHQKhCmi9fQJoTjPX1GM3GCeEMfKn0SxehGwC0RYxYkptIJD2SbnDx7s1b
o4cP01TXkKtbqnLUBEpAwX+sXXMx5fz927fu3Eg/f+bskgXzQwMDL6UStqOg
vlPOngnq0hVuNtTVAaarKCkW1YlzP32eMGYsuaYSYS4L/YTgzp1BUEM2QAtf
TLvQzs2dIR0QQB0tVWUV6LSAzoXPV10p3LFlq5uzC5fbsv0PBgYGxn8Tkl43
yYPEqJUClx/UtYXhUJkYzkw20BnwXcq589DQ1dfWFXzJ37N7Z2d/P2hmUWho
4k4kc/gC0DI7t245FnlozIjhqB2mXKfb2DtsWLMWmdO8yHi+YM5cFDWaMuxk
ypKvkpLStMmTHt69AyKCCOxWVw/7jx+yZ/44TVtdQ0rQMmWk2vnuXbu+f/sO
FArk9kjkYRvSAIYjHaADQn/8+HFNtVDc2ACaSE+vyUWdkrTIxw04C63+w+Nx
nOzt1q5eRSbbmPnsaUjHTso8HhAcXFVQUEBe/3QSRHs+T8HV0Wnt6t9ijx2b
MXUKFJkp3eAqkOPShYtQmtlZH35fscLBxrpFEgwODLiclkrMrtbUfg1QUXV1
dTfTr4FG02rJ2wL9CVlSU1E10NO3tbRwtbVztLGxNjcz0NH2cnNLv3AJmf1E
HTns7+sHKVibmp4/d5bwqqioSL9ytXtwCDVaDgdObRyTTiWWl5UQJJ7xzM/H
lyENgIAkuZ6u9m+rVr998wpxK8hwRR4Vp45NzxUGBgbGnwYO2Y5JlWAUjQQD
EAlS7mN6OrrDBg1OTT5XUVbe0Nj44e2btStXIgd2Fs16FB1DCz9z+oyn9x+W
lZSejI0BHcchBR00dkCXjg5t1qxa+SU3r1FMOJsDIxjp6bcYLYSBFoDo4J8Q
Ew0yUCis/Zz9AcmlemFNasq5wX37oiWc6E9J4q2Ru25duiBP+fycnP3hEZYW
ZkR5peXq16tHxtNnQIJArDHHj+no6DCaOcuzpFRI8biNhfnqFcuz37xDzvIB
Xt4c2eFfKsYLta4QnNTW1Bo7csSNq+lQgekXLgR06Mhjkc0+WSfmphbz585D
vodZ797/vGQx8JEcCaK3uzg7/vrzsuOHjyTExMZHx8jjRBzsoboSY2PX/Ppr
R18fFAGAKe2isKTrWdhZWUJ+Fs2b6+flrcjjNo1dq6qNHDz4yYO78JVzsj8u
W7wIKJIYWDY2vnD+HGEFWlYCOjEkIIAYxIR+FGl342BnD+oeekcgTqFOQIAz
yBUqqTfC43FxMUR/o16Uk/V+UL/+cioeAwMD488Har1B5oQGBsYgJdjYAGxI
Hw5FN/Tu0T3xVIKwmohvCfwVG3W0e1CgmZGhiYG+iYmZqaEBKAgVAR/xhbmx
yfyZM9++fNXY0AgN+5zpU0319RFJMkliOhUXXVpMqAbQFD1CglWVVejDhgSY
ktkzJ1vbrRv/yMn6AEmBmgvftT0q8ghopZqaOmhyI8PDXZycebymsGkU6aA9
sMDzJ09FDeKq0srU5LP+nt7UvJyamtqcGdPzPucCAxbnF+zcKhkOpVZOlxlc
la51S5CgteW6Vauys7ORku3i68dF1rNfac/RUzrampPGjr1/9x4xO5lfsHLZ
MntLS0lWmAzv9u0ORYQT06yER+QzoCEdMtAclSYVe01bSwNuDg7sAloM8P/Y
+w6AKJKt3YkwDDnnnIMExYAYQUTFnF1zds05rDnnhDnnnAUVMOeIgKCgqIhi
RnKO7+uumaYZUPf+73+r9233nju3nemurjpdnO98VadOBQW2YD7ZAq361KpN
0qaxwZR+41Ti9E7t2oafC33z8tXu7dua1JfnweMJvD29dmzZ/Pl9CiD+0YOH
KFlDSs0qgjCePHy0pJjKKRof+6RP754kSSyPnu8LCgiIekgNh+bmZME5qenl
wZPnUyX5Fnxr1np49w61sCI7G6S+ZWCLilfGoSEnnHDy64SsKAcTPH74CGGC
OPFv3IAKzKAtIz5N9Q3XrVwN0IEbD9sIWNmwNnjSuLFjRgwfM3z0uBEjxowY
OWRAf6CbiRG11kBNqgouef3ypeLCorys7BtXLg/u29fa3MLEyNjVxWnx3Lnv
36UUFZXk5+bt37XdzsqavRcSUys+vc/voJ69EuMTSJ7nKxEXm9St19jHZ/f2
HYCtMmr6LGH+7DmgUdXSCh6VZMzt6OEj376mAtwBnTOmTqnl4W6gp29mZgYU
OHPieHFxaVlhKcwymqBJ76JYrbBXPlqbm40fPebqlUsoMCw0xMezllj+aHae
TwVRVZZ416xF6DYaDsiYPHasi7UNWDBIGe0zJEBdYLigVDXd3L83NkhtQywS
gIArCBwVfEpEYhXWNyLW+ggi5BvAVt/efe7fvYeapH/9smrZUhcbK30DbdDP
0YOHxD+LQ02AyEBDS3MLEtmir62zeOGi1y+TwPVys3N2bt7q16ihqYmRob4B
PI01q1fK0r4lvVq7fLmttQ17QBjeRd8ePRLinuKCzIw0gG+TBg0VRp454YQT
Tv4xoeIZ6JA8wgvIOkGQO2pgsKTk4N499X3qkih3eoGz1L+p3/mzIdRygJLS
0uIykLik588T458BgxKfPn0e/yLhWTzOr126PHnSOEcHajLLxNhw9vS/XjyL
B37lpmfHPYk9e/LEvl07w0NCXr9KxFOKiwuvXrzUq3sPimgIKsJKWasRec2b
+J08eozk945+FAmcNdTVkUgkbQID7927V5SXX1BQcOfOHVhjBn3E7KAaPk9f
V69/7z64hoopzS98nZCAamzasHHPrt13b99J/foZNDA19cu61atqubjKcmuz
QjqZokSyHGiUwtQkKtZmxkC0xg0b1fT00lVXF1QT18pnD6syI42jhw0D4BYV
FOblZiY+ewEM3btzB6r0/Glcfm5BeXnpwwf3Rg0dqqujxasy0UlEVpZs5QNf
JvJz2c982eAtWa5SuSH0NLBA0KBe3V1btsCxwWsFHzxz4uTWjZsOHzoQHxMD
fwMgeOHCBWrDR4qkUy1Afwho3PjIgb15udllpcUfPqRcv3hx+9YdWzZtvngh
NCXpHdl44sKZkBbN/DVVqcSzsnUufJ6VmSkQ/+WLRHhQoN7bt26D3ngskvvL
/yI44YSTf5dQhlFIm26KF1DbhTvZbwreWEYHygevWGFjYkSiGvCfirKkvrf3
oX17i4qKmJVylfN0lcqCNjOzNqxe7VXDjYoDESp71HD/a/Kk2zdvkaRquKCI
StJCHWCCp0+eAjyZU3vPiYSVBzPlO/nyBg4cSO3fSqX9TF66eImlpaVYSAXV
G+vrTRs7Lj42joyR/tlvoIG6lqAKp6BIk1AE4jZy2FDATfrXT9SzS8qpRXD5
Bah/cWEJ0Gf9qmAQEzC1HxMTEkdEYh0pPGQmQvk8fqVxywrQYRYGKglkSckc
7OxHD/8zIiIsLS2D6A3Uj2jzW+qXiLDw0cOG21hbUumsKy+WZ5dJakJEKP8U
yr7hi+lkCLJfBTyF5jB7E2tp6QQFBR05sJ/s/kClrMnOKqeZ/sf3H44ePd6z
SxdjQ9nOgCKaQgKaAYv7du1OfvWynO4L0CQE7cBdeKdH9x/s2rmLsZYuqblQ
PigN12VQnz6vXyTiltcvX40YPJiaBeZWCHLCCSe/QipZRb4smgV0bFC//g/v
3rt340bfHj3E9K88uR3WUVMb2Lt3yMljt25ev3PrNnDtzu2b+Lx14yYl1L+o
88MHD/X5owcJ9STZIG0sLAf27QMAvXvzRlRU5NPYuMiHjy5fighetTzQ348O
XJQtP1RgK2QktmPbNudCQh/fu7dm1eoG9X2ZXSQAhXZWlkvmzXv8KBJ0sneP
7oa6emwkYoQwO11NDRQFznI+9Ny9O3fjomNiIh/fuHL5yKHDM/6a7mxnLeaJ
GOT9sVkmMC2STx2KBGKRPD3OD4b15HdRTzAxMOzeudP2bVtuXr+B+oMjP378
+PrlS6geKmmgr0umF6vyo2orVnUGk6XGCkKqoBMyT6mlpgoSvWrZ0isR4Q/v
P3gW8xQ8NPxC2Ia1a/wb+apKK3K5MKFBahLl+nVqLVu0ED7MzRvXYqMexz2O
vnvzWujpU2tWrfVr0EhFKKwIv5HfCxbpXcvr4N59aOyeHds9nJ2FfAGzFEXM
4SAnnHDyj4ssTzVfZt9glECv6nh6etVw19fU5FfeuxxmSltTy9zc3NrSytba
plrBT+amZprqGtRWCzR6krknLQ1NwGINR8cWjRp3bd++QS1vXGpkYKiqIhXK
EtFUAyLE5Gqoq7rbO/g3buRkY0fya9Fjf7KSLYyMfGvXblSvnpGBsSzZS5UR
NlnrBDx1VTUjIyMrC8vaXjVb+vs3bdjA2d7O1NRUX1ePVJjHitX/gcbYNaRO
+BV0hoGb78CokPBuVFVDTd3U2MTFwd6/vm+3tu0a+/g4WlubmhjRa//J+CaP
rOVkCmSGRkXyt1ZNZeh8A9RT5CO3ChUTsapH+ylCqUTF0NDQzsq6vqdX6+bN
8XZszc2hKKmKMvMW2E+h8gtJlAz1jdAZajg7BTZtCgH3xz9BG1Eau9vw5WjL
p3eZB/bV9/Z2tLXBqxRW9lg4PsgJJ5z8k1JNVmcZ2LEWx7F+4lfeILVSQm2e
bPqJV/GzIpaRr6VKyqAezOatvOqIm8JDmRvFZCaL/MoqAd8rCwUKtrr60pjJ
NCpGRUkiqpTBRV6Tn+ctYQbxmKHOainYj0tglKbM52urqzFNYHRSMRso+B6e
/iSehPmVPcYrkitQoSY8euxUXUUiYlWjgsrxKx7Hr3wBXo1UiVr1z1Ym/RSh
iLUDMl/+PZOPnQuG4YQTTn43+YFdImNuf1+q3kvOGbv6z4+AsetGBmCZb35J
YAaBUeaoqrd/Ui2Cyh3gxzVR0CTjFXBsjhNOOOHke/NWv7xi3xMuNPF/Rb73
ihWGFH55PTnhhBNOOOGEE0444eT/b/lB0ODflGoXqbFFMVDkZ9d/78b/p/Lf
wj5E/z2cVOFF/8+qLZIPibNDmKq9khto5YQTTv6/kZ9avH9ehL+6Jv9F8McJ
J5xwwgknnPx9YZM4jtBxwgknv7P8PuzsHxaOiP3fy7+283DCCSe/p/D/wwVZ
7BV/zJfVuu78yssEmSD/v18r9pqyf0APAta8EqMT9uK1X/6yBJW08k+jCb/S
esHqE5ayhSR7Yd/FrIivVv8KL73q8dN7OYTlhBNOvicVOMVn8n1RS5tFPNk+
sNRWAhUL9MhP1PUVa5/5VPYVVRWpuqqamlRVRaxEX11hguQwIWQSgIgEVKYR
5noBa0E0k2qS2FJ28ANzAWqloaaOihFDWm27/iY2ib7PQdjGnFncTWqOp0NU
6GShLCyuZqW8QuE/qBWDtn/rxfF5TOX5dOY4iZKyhroq2ZyReTXfexyTNudv
dYwf1pkcYvql4IVKpVKy9dIPXBRmHT1VZzV13IXOg7tYgCWsyBhDnygJ+Oyt
LipESYT+w7wF9l3kKUr0+1JDR5OoKlHphXhMqpnfxHvhhBNOfrlUWHt5JhAq
lYeKspOdrU/tOo62NiSDluJdJC+oQCBVUra3tmrWqFH7dm2CAgJqOLtoSdVI
sQpBI3whZVdhtSxNDBvV9+kQ1KZ1i0BPtxraqup/0+SiJnoaGk19fbt0aO9s
ay+lN6T7wS0/MnTyDf5+8ly+LG0aleBFyDczMmzSwLdrx07tWwf51qlvYqBP
fvreExmzzP6SGG0FndMi20j9p1WqVKZAoKkqrVezZveOHb1cXdXkmceYAn8q
7CcyGdW+pxkxy1MiXg0cA1N9/Ub16nVt07ZFM390G4myLAlMFagVytQlEOA9
1q3p0blt287t2zVt0sje2kYsErDfJqMldRWJjbGZp4uLVw03IjXda3i40+eu
rjWcnYx0dGSpA1jJ1oDzykKBmYFBYx+fdkGtGzX0tTQwVqa36eXmFjnhhBMF
YfM1Iu4uzssWLTx14uSkieNh4siWcLKL+bK8yvraOs39mk6bOnn75k0hp05e
Do84F3p2366dK5YsHTRgoIerm4qKisz3pg8tVUlAU7/J4yds3bjp5MnjV8PD
L4SEHty7b+HceR3atDY1NWVG8xTC2kXyMTcddengvn2PHjl08ULYgjlz8Ygf
j7/9gOyI5DvI/1gthGepKkl96tabMmnypnXBZ06cvHr5Chp7/NiR1ctW9end
08HGWkUorBbvqimTr7DfE9Wu/8FqFKIi3KuqrASXAGq/FHZhzYrlvnXrUPlj
6J0gqq0PQ65FdGirwomgcoLQH3gRlKckUfH29Bg1bPD6NWtPHDl6JeJi2Nmz
e7dvXzRzFnDHxMiYHhHgyxOrUreA8dnbWQ0fMnTlyuVH9h++fPHStUuXQ0+f
2bpx3ZhRo+t51wYtFMnZIsr38nQfN3Y0Otj+3bsO7NnNloN79+zbs3f/7j14
KaOHDcNbkIjE5JWpiPjAvsmTJmxcu+HkiWMRYeGnT57asm7dhDGj8b1IJBLI
cp/++j89Tjjh5NcKMfICGSKQYSWBg5XVzEkTPr6jNge/FBbeuE5dqUSVz0oQ
jcv0tDS7d+506six9K9fysvKS4pK87NzyLY+uCsx/tmSBfMBUmBPIIAUAmpp
tQxofnj/ni+fqD34sjKyM9LSiwtLysvLszLT8ZS+Pf/Q1dEiCMsGXJIlG4em
ikqbZgFXr1wqLS4pLix6/jSuU4eOvB/OylXNtyZSaHuV1JpsMkJqoiGl9krY
vm3Lt6+p5eWlhfkFmd/SstLSy0vLCwvyIh8+mjZpIuiPoMoIZGWWKhtJFjEE
isYpBqqY8UM+/2+1iBSopiRp7F3v5NEjJQWFxUUF75OSRwwdQoqquo8SX45E
DOayT2Qly9PBMYqtCtCkz0ilanVrea9eviLx+UtqU6eyktzsnMLcvLLy0vzc
vPDw8H69epvId9QSyjfvcHdxnTl9RuLzF2Ul1C2Z6VnpaanUHlsl5W9fJ21Y
u6ZpPR+pkpjApq62Tr9ePWMeRpXRG2mRDZtYO3DR+2vhy7Ly6Ojo9q1aa6qq
4TZtdbXmDRvt3Lrl26fUsrKSgpxcvCxSsU8fPm7dsqm+dx2pVPrL//Q44YST
30f4ZKNUPk9ZLDHR05s2dkLisxew9jAy927d7Nqxg7amFpOAGhZQVVkS0KDh
lYhw2L2CggLAWfSj+xEREfdu3f765RMQCjD3Njlp/LgxlsamAhrLglq2OnHs
+JcvqYWF+c/jE86cOH708JHIR/eyszKKi4tzc7NDT58KCghUk6ry5LOTPNbe
EDipX6fuyaOH0j9/Li6lNq1L/fK11x89f8AEyb3MvCSftclRxcxjFaKkgGIS
kdDLzXn/7h3Z6RloV0ZG1sO7944ePHDy6LEXz+ML84sKc3MS4xNGDhykpqQk
oJCnokBx5e0FmUAOZT5fX1VqbWrubGtrY2yGR8gGXX/GTBUbKBQ6Ozns2L71
U8o7OAblJeV5Obl/TZ7Ck+98wR5rFbHUwqvYQLCCBrK/oYmkgIxbKlSJNAOP
runuCgT88P4dXl9+bsGb10nnQkJvXr3yPvkN1JKXl3f7+o0Rg//U19OhAY2q
rbmR/uxp01BbalPgvLz4p89OHTt8YN/+yHuPCnIy0d++fvywdvUaS30DUkkN
NfVWzQNCQ05lpmegj2VnZmVlZOZkZJJPlIBWA0xLykrjoqM6tWsL+JOKlBrV
9wHvA7zm5+d++vD5YsT5QwcOXr96Lf1rKqr6PvktNOZVw51XZSNjTjjh5N8p
zG5EUhXlhj51Fs2bH/3oIThdKb1B6oM7t3t176Gjpc1jTRU5OTktW7L08/sU
oGRy0tvVy5d1aN/W16d+6xYt582a+eRxJL6HobsQcrZtmyAYUmWx0sxpU2HH
CvLyH925B+rkU7d+be+aXTp03LVlC4wb3PkXCc/nzpxhLN8slREezddqOLuA
Wn5I+VhaWlpeUgoPH+593959fjAnSKpKQnR47KgJsjcf+CVfHpsqH68TVIFF
Ax3tgb17x0Q+QovABHdu3dalU2dvTy9fnwaAmwd3bkJLRUUF2zdv8nZ3V6aD
gqqvjzyUBQ8yNTTq90ev3Vu3RoSFbw4O9nR0qXZ7ox8IqbCNlfXUiRMIq4Lg
gM6nT5nKDkqpGm8ji1rhVzqp+OSTIUzqhMzqVX06NaopEoz6czjQv6SkDLwv
9NjxPzp3hk4a+PpMHT8+/lkcvKC8nPzTx4+4WNsQ7apIlAL9m50+fozaCLi4
OCL0/IjBg+vX863pWat/vz4hp04C2krLym9cudq2RSt6Z3lq7NTIwLCpb8MB
ffqOGzFiwqhRkPGjR00cPXr8yJH7du2GZ1JSXJj+Le3AgQNuLq5opqO9w4LZ
898lUz3zZUL8rL+mNW/i51nTq22roL07d31IeQ/++fpFYqvmgb/8744TTjj5
HYQQInUViZubW//evXbt2Pku+S21YznMalFxeVn5vTt3e3brrK2lwczW4aRF
88C7N29RNDAvP+TM2bp1vOHnEzMOK7R96zZY46LC/KTXLydNmCgWKklE4hVL
FqPQtNT0+TNn2llZ8uSEonvXbh/ffyDbke/Ytt3S3IIEYVZUUiAw0NMHqYyN
eQIWmf4tIy0tDdXLyMjoT4NgtUyQEECgkpmBkadHDWtTU2Ulefyh3P5bmprU
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
7dml26ljx98nvyktLQYUZmelURtplVCb8n77+DH0VMigPv0M9HVFwoo6Q0HG
+nqDBw14lfgSD0p69XrciBEWJsa8ikgtvHqhWI6YOtqaU8aNe3j7NrWRbllZ
cX5BQU42FVBUUPD2TfKBPbtbNPMHZyevoJKjwjFBTjj51wvx/JWVRK2bN79+
9drrF4mL5s3VI4mz5PaQmtWytoZnHn4uNDYqGgyLlrinMdFPomNiY2Nj6C/x
eTk8bECf3rIZN6HAUN+AWh2wd/fjR5HgfVRW6xeJMZGPTh07isuszExFIjKC
J9uEnVUx2ZJtUC1vd2oN4/PY2OOHDzX2rc9YQraRF8mXBnTr0OHG5evxsU92
bNns39QPiEZIEMpxtXdcu3LFi4Tnd+7cwtNhnwUVSCFkx3ZSu9rp6fbq3u3w
3r23btwEGUx6npgY/+zRw/sXzp1fvnChh7OzMtBDHjL0PULBDkMV0fqUQQ9r
56Pvwpac7whYIUyk1UArJzvbObNnQvl4I23bBAlpeij8PhZXtfZ8lofDfCPL
yFqZS5KpN1KCtqYW+sm2Tesf3Ln9/OkzvND4Z3F3b9/Zs2M7vtdWl9IlyFIA
kXu11FT8GtZfv27ttYhLUVFRLxPiXz1PQF+5dvXytq2bWwb4qSpLxHS8J50u
TdZSFWVJg3p1Tx8/8eblq2OHDqIPUJ6PQKCoJdqvUBYKbCzMR/057Py5kPjY
uORXr0Ez8dYuhV1YtmhhsyZNpVIpTx7lxYWDcsIJJ2zhy+FDX1unoU89vwYN
7C0tBQLFoH1lZWVjfQMnB0d3txqe7h4eNfA/6hPnNd098CXO8YkL9HX1BPLB
SRgumE0bG5uaXh5t/Jv17dmrbYsWMGh2dnY6WtoVSwP4PLFs7K4iXQkzLqei
ouzl6hrU3L+Go6Mmjc78Kms3BPIRPzy9vlfNdkGt3F1cVVVVmdZR2KGk5GBl
1bxJE7Bac1MLPJ15BBsjZDjIE6Hm1rY2Lk7OTRs26NKuHWoOguxgZ29uakZG
QX8aYlGhwGoYR/UDoewxTCaLWtUyUQFnW9uggIBaHu76mpo8fgWqKlwsYgXJ
KDxFQdiQJ6gc5EPWFBACK1si4erRvGEjuByBjRu6OTlaW1qBswvkQ6sinrBi
lT2PD8qMWxycHH1q1erQpnWnNm3Q0xwdqbs06bsUXgSPXmujpaaK61s19fN0
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
vA70dHMnm55Nn+YNkKXoYXX1mdMnO5iYCnMp69q5fbsLp05lZVGL5uLjYlyG
D2cmGQkIttZvdfr4sbyMDFyQl5O7cO484Bp/z5RfGXw2fXzhgD52sK5lpSVw
0eGKjx05auLYsY8f+VNhGNU1wQGvvcZ6whMQtKiCiXTv3O3F86ew22igyLAP
bmNGKdHj1UCBzu07HNy7p6SkFEYvMS525fIVMnLSv7ZX5FeA4KoVK2E2qeCK
D6E2PQCCzELs3zB3BASVlJRgitOT05BCaWnp1o2bkKYQ/yBXNt+ENpsZESFh
BXlZQD/8JSKaqmoa9Ad1/geIlqqmooIMKpDL4XFYhi+zaIdqgqfXh3dvSwq+
AZJ8vb1h2NEaYqLCQwf2e/3iJaoXunH35o32pu0IvgMKockF+YVwP3KyM1eu
WNZKS0eIPnkDuAyISaGDo8C5zp06aWpswtAlMhoAnY8IpzyZiuLiV8+ekvlc
juBxw/SAyKB+jkGvA/FoeIxBrwIc7G3J9LGGivLmtWuT4xLwiMLCwsVz56oq
yAJuevYwRybJEOvdG1edBvQn8VpcmjLjp295+fA0Yj5H9LOzE+GwwcGhkGZd
qIOte/ToYWlhbmFhhc/2tnab12+AS0OtnC0qXrNqdacOHQ1atQbZ1FZXme07
k8zFJyfE7960tVMbEw4N/dpqyuvXrUlOTKI2TqyohKMIV4HUsKDCtEiL/A8L
tN3dzfVrajL824LcPACT4LZp8GynTp0aHfEZ3j4sdmkRdS4SnMlbV67cu3n3
7s1b4Hp3r9++euHspjVrLMzMWHT8wEDHvrevX6NWRdXWvg8J3b19m6/PjGnT
pu3fuy/8Uxj6GngitXjB0ZHsiMXMUDDDcYybeurUKRKrcOzQwe5dOgvxliqy
TNqabl2/Ef0a7AyAe/n8ufmz54zzHD9r5uwr585RYTa1dYmJiasXLTY2NKJj
8IQ6mrbbuHYdiQaJj446tG/vjOk+kyaO37l915fYuJqaurzc7LPHT7Y3NuLw
7BnPE2hr1Ob+7VslRVT8CRxsV2dnAri/CTcoSJcOpru2bUXKlDOf+GXTurW6
Olqqigo+3pPgwMNPKPxGzfR169ypiZ1n8yNy9TW1ly9eEhcVSY3jFRU8vHtn
2dLF4zy9pnlPP3rwQGxEBFnrd+3Chf4Otk020G56KBKhGGyWsryCXU+b6VOn
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
ZpqcPzXI8zuvbJL+H7r3v1T+Hc30j2T+P6EgvycDzc6s/c67/s4C/tFnNbn+
N2//E+31++caWqRFWuTvl5aBnRb5E4PVf+6uPzEc+jeU608Up6XLtEiL/FfI
HyWS/3iGW+SflRbb3iIt0iL/4fL7zdTfDG0/iyj4x2vsP1D+E/yN/w8jAILr
IH7/xS3SIv/P5TeHYn4WKvZHo9f+XOjab0avNfu4f1Xivym//8ZfF5mZefnR
NP2Jyan/nOi+v1Inf09m/uhdf6W8f1Rz/vRT/lAO/7Wt9o+3cou0CJGf6F7T
HSx5OyX/5KSD5hLh/vYWKAKnwgl+0/jpP91Lk3f9r7fkZQ4QZ/P+R16/Tpbc
0uAt/5hPus8yq9EbbbvReIH/bxafnz16ATKdW8EdUZrdXuPXe278uNmm0C9v
afIgarvOP+L5NyAy//T53zw24hdV0ZwyNNOgf1F+ttlak+cK83dQ+XU7Cgmk
+Vfy/OM+DD9rCDZ9drPAnz/dU47NYvSf1wtIMzW76r/J05l7eSlQf3IbykJ2
zhHIEtFh0iWbdEyhxrkSEvjcbIZ//LWFjbbI3yoCPYXN3/xBX1sHIsKhLmAU
VVAzeRtHsFhqCgrtjIzMOnYw1NeRFRdnNo9o0uPoLTioHU7UlZVMjNp0bt/B
2NBIUVbgWHlWM8FmgoYLVyrIyXdu387U2EReWopsjkGEt5UWm5clVUUFPQ0N
LU11HQ1NfNBWV4MoSkuTHUIaZYwcIEfnTUFG2tTIpLNpe11NLWYvEWIK6Ozx
/lSUldFQUdZUVaFEmfdBS406xEdJTpbZ04YgrzB/axT8pyQr1d64bfcuZu3a
GlN7jAhs1fJHm0zQUhH4/pl9EzjQjddoUmKihvp63Tt1QRO00tEm51n8uD3I
78nAjxcz2878OhFG0eQlJU2MDLt36dzR2BiKIcZrDhbZeEiI1cz+aU0y8DPh
CpxP9OPt/M9cRl2lRMRa62p16dDRuE1bFf7RJLx7Gysz00eE2dRO19B8s85d
2hq0pnWy6cYpzJXoGpqqSkRbGP3RUsG7mrqyAtSG1AnxKPg7k3PoLVyo9urQ
rr1RK316N5vm92Yh30tKiCFxXU0NZIwINB8dQUasoZWbxReiSOJcYTylq1ln
VUUlcq6ZwAUcprrQOhpKSu3atunSoT21J5u4dLObxrD536D46moq7Y1NzNq3
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
D8TbdxkxEn47iol3uLK7t24NfP6cBLGjb2akpT+4d9/TzR18hM3fbYMJJCAl
gimYNM4r6FUACXWbNcNHVVmFV0W0q4zswbbDZn7LyoJtz8n4CsS5ef1WcGAQ
rq8qK0+MiYEx1NPSZCLVmU05+OvJOVqa6nNmzISJq4W3QE/Cdm5vYtLWdNO6
9ZnpWWDveIe1g1Fq1m6QJS3gKXN9/UC3K8urSkqKwJIe3r0FckoFJlVWfsvJ
PX3qGIytQPwnV1BJqLk8cXEbi+4zpkzx9famHIylS+7cup2fnVNPDxhu37gR
P02fOg3vE708unToKMAH+UnR5UHNACDQFvAKYOoLcvPgcd24cePF86dIp5IO
atq8fp2xocEPi7UbaDjIyL1bNzNTM+A+obEK6Nh7vFPrCOhvyAeQOP+Hj1yd
neVl5YiZ5SdCzfyadza7fvEyCX8C53J3c2V8Kg019emTJkVGfCaM792bt06D
BpMRD+CgsxM8iofFhSXllRWJCUkv/P1v3bwOXg9XDUk9f/xk7JjRkuJSjWgs
m/gSHHozH661uTkYEGoeanb44CHjNiakXBIiogP69rlx+QK0BSCIbrJu1cqX
T58kJ6ZQypyXk52Z8+5NyPLFiwx0dMiwCRXhwxVatWwpWFVtdQ0YHNJE3VIL
kfLy6fVE2SHBQQvn+OEWUS5HsMMOcRqExNFhUxOT0KC4YPL4ceC/8DPxJcME
2UzEMh2GDfLrPHjIji1b7929HR72EU+prq7G9Q/u3Oxp1hXGgdQzKgrVDkOB
Dxy+R4dfu3YxO7BnN6W6dfXo3UsXLtLX0/nHDWOL/D8UNn8NO/qprqZGO1Nj
fW0tCWrZHaeHmfm7d+8ICJLAGLbAniQNw2L8TdVIn2qjo7t2+XJQEmqUo7Ts
7vXr/fv15QhxWfw5O+h/a1299avXpKenFxcXgwBS3ntNLS4+f/Jkt65dREXF
+UBA2U3XocOCXgeXl32PjYlasmixuioFRgvnLwBoggn63707YugQcf5uJ3o6
uhvXrktO+EKWbACCwfJev3j5Pvgt7GE9/WVS0pd1q1ZTE3zC1FCQl7tHcT5F
r+DVw2h8TU3Mysr4mpSQFB9DmSB6eCc46PXYMW5KcrIcfpQOQ0zwZysdbeS8
+Fs+7OSLZ8/h3zL55/BwnwsDNXLY8GdPqGAGkg1wusqKMsrZziu8dukivAKm
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
Tl29fAVQHD7gKe4dPGAi+UJzSoAg+gGTdGTgCMgY9ERISMiEsWOE+mFMcEjw
6HFjQ0YHBfv19NbX1qrvsm4sjeXvLHVcEFSMVRUV6L7p+ryAU+8l/lWdhTz6
E27Nn8hhfNAGpgYmSqLNRKxGIhdz68xT0WYH0VOkuFxYYZrYpC5tFKsDLIKh
tjaupDi8zsWCOs1hHoqLgeENdLQFIkIknNH1Ns1xmA1Q2upqwmr/acJDrlj/
KMvKGuvryUuyZ6vVaULDJzjI8fi6GqqsRRZaHObnEkxqaw0VZTZZJVfsXby9
4i1C5Q20dLSVVAViX/4u/G6gsf841VV9c8a+FAQSMDdohfiXdYap1g4d4ftv
5dfi/1qviidzoy8lSSkjHR0l0TYfTu1VqprCE40c4xzQVVdHkZEQ60tm+1ud
H9K7KUpL4/5sIusGBbJurWRkLI2NTfT0pHk11O9XUIdtiKm+vqq8vPjMrNMt
vzotC7IBcZL6xVPYu8kwuznMDQ1lxI6JEb+e8zsv0VX15aSBxejG0lj+3vIn
qP73MVsdtMl+T1KP8vjiXrvfvKc44/iH19NH/D68xMV091z9+v/q+n8Cvgrq
LXL9wybzmeUb9nP9v/5mM8WHgy1/qfL/ifJfVRNxsfydnmR/+Dv3bxCf/EkR
CNc0Sa2o57/Bp9f/vk6X/v5z68+vP/kVqiQuzI2lsfz/XupIe33P5L/xQXWs
3m8atQZ/+zvX/8NWi9/2r978LxnB+o/4hz//84r91Tr/pc75G8q/Uv//hsr8
/k/qS9pfvf9f7aJ/RSp+s0X/PWPXWBrL/3fln5s4/23T7V/RAP8N3Oe/pPy3
Dev/mmb+nU9slOfG8r+s/L6Tjb2+wc//35U6TqT/0M3/XT/88ziWxvJv7Or/
nvKfNm1/qQfE9878wyv/+/u2sTQWtvyJv+73JfkvWcbGCdJY/mfLX12zY3/1
9xCuOssHf8OD/i2XNZbG0lho+X3E+L++/NVOaOy0v780avjG0lj+T5V/C+/7
nYvF7/9PQO5/vaW/35z/tBr8S9EXf9Kcf8XF2mhe63fy74d6/s2G8u/BTv8E
HW4EDI3lf0ERj/L6q+GL/9xPGvzhn0/bfyV68z/hjK1Tn98BAH9Vc9a/Z51v
/tKaYP09Kf8l6uu/pxr/dBDmf6IJeAkaesQ/XCCuH1P6O6aNK4oG/yfm15/U
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
BJcsXGRuakE7hDIXECsS8FNWnp6WArujpalep1ECkRE0NTHyHzIYsrF4fuii
0PnoQLyLlwXky1DQOtBAuybW4geU0EKteVvX1pD882dOBwWOMNDRZbOggO1i
uD8RD0b1pw+fQcf0NbXxI0NdnWsXLhAfaV7uowd3e3YVbjhiAls4jvZ2QI+A
E4Bzz54+FmeC9La2pma3b92AfcEFH+Pe+fTsIT4ZqXgAJECW8n7mQBqzUlK2
bNioo6FJvQrycjJeHp1pjjLAp0P79rZr3UZBQaFLZ08YGqCvB3du9+jkDqsE
Y0pHX1tdbcTQoW+iSLozzFkYSjMjQycHRww0oGlmRhqdkjnfvmM+4kNB/s+y
0mKSqay8Ij8n93P8h327ttuYm9vbkDhwPAIc+PTxY4CR0jyhm0VKQtqrc6fT
x09gPlZXVlw8f6F7F085GVloA0/3jlcvnCWpxauq8CxoBo/2HeRl5VBDaBWS
HofXcHpzKmZ4LjWCLBPU1m40go3lLxQxJniSGsHYmNdkn6DotAJ6gZqC0oLZ
s798fF9ZSVasYt+8Xb18CcTYtaWji3OrNi1d27Rybm7bBLqLTlVjfb0p4yZ8
TYRkVn5N+Lxi8WIa+c9hTqedNHbs61fRlKccOXzQsQk5+8yxuUPPHt59+/bt
37cfLXj16tVrxbLlOTk/MD0x1/bu3DGw/wAQBDlZaRjB7Vu3kTjGMhL9GBQY
oKqoQB+hqao2eoQ/3Zz7PSPzwJ7dTSwsSSsIF+v3KJJAd/wQas2zQwf6ExUl
5emTJxBfaEVlRnL6xnVrNdTUWUcoJjJY2NiRI7+lp+Ge2T++nTp60oq5J7tl
j8OkCgGhuHfrJklzUZgPTdiza1fWD+Zk0/T4wYNZWWSBLOHT58F9+wIqS0pw
O7R2w0/Q+U8jH5BcBKqajONLAl168MC+ytKy8vLyS+fOe3t1lZKS4nI5DWaM
keIL2rdudfX8eUJUK6sSPsRPGR08c/LkpySXciFMxq1r1/16+SopCe1gfZ+q
SwsnGNCSkpLyshIoZ78ePdgcVmYm5itXLMnN+VFVWf416cuK5WHKqioNIvM6
FbMwM18etoS6Q6FO3V3dJNhIQtE1vNogn0NoINehaVMIJIlxfR07aVyIkZ4+
7UYM/R/r1tO4X2AbkhtHQbGOPLP3hI7V19MxMzVGNcxNzVCAlFAsxIqlqQkK
zBa0bp1ATTr0EhISQwcPefYoMjvzB/pn2KD+fCoRHG6nDu3pBrrS4rKbN645
t2hJkskwWAgiV8Bs9k9PTgG2oaE7VAJHBAQCSmEewZoAa9kxmyWFIsTly0tL
de/c+fXz54TH5ec9ehDRyaMjy9/Z6jFeAp9Xr6OLiwrKKsrv3Ljq0qolDWdV
VVZbMHdO/Nt3mHr5+fmL580z0NJSkJF2b9eWBNwCnuXmHtqzB9SPXb9r1tT6
6MF91G2S8P69b/fugKzokFZOLXy6d+vj11s0JQfg8/Chw3Zv30IWL6oqYGQ3
bdoEdYG2K8jJg7wDcpD7VFXDfC+aNRsAjzZcXVFx3owZ7969gzwD0O7eutXc
0BjyDHS6feNmkv8T9jS/8Gnkw2mTJqKqLo6Obi6uNDAAiFcR9pCl57XdL3RN
MCU5iZGxN5QJNhj91Vgay68KBElXWyf85CkQnPLiopio5+xmefpXWWm51i0d
rzDJo4D9MLVjYmJgBfbt2r1/5959u3bu3b1nz47t29dvnDpxkmvLFvKKCqCH
bi6trly+SLPQQAGuXrq0n59vzx4+IcFBV69cIkE4FZWA9NMnT1GWlxNbM6l5
0S+7enb5nvUDtvf54ycA2wpMQjCOMDnV8McRD6HzMa2uX74yYfz/a+9M4Kqq
8jj+FuAhi4KiAsoiiCjquNSnaZmctBRBUMQFcssc3FkTHVFR0QRUVLDUFCs1
p2amZlr8pLm0aGmmgrmEmqCsWiYo+xLh/M89714u7z3WBJmZH30/fF747rn/
e87//Jdzz7LQ29vb09NzUVjosc8OlZaWVldXf3702PSAALaTm5Lls25OTpvX
x+bl5JJnyc7M2rZli9/Ycd6jx4QELzh86AjbP7WyksQj78tfWEiLzjz6uK1f
uy7/lwKSJO/mzdeStjo5OMp7Jf1HNtDd1XlH0muFhfeoqDuC/5003m/k86P8
vL0pEsi8fvPBr1Wl5WWHDnzy2MCBrG6NO5CpOXr4SE0NS9/ITJHNHzlyZMAE
/+Ttu7LSM6mcvNzspZGL+KkTUnAincPOnWA/N5e10avu/Hz7ATvz6Hbyju19
nJ2dethTVJ954ybJTMLs27OXrU/XW1LHhScfsTk+PisjvaaGpbHv7NszZ+Ys
ksTPx3ddzBrKK4V3QBWUnU30G2cpnAOlMySrr1e2NtbjfX0ojHln777Vq1f2
dXGRHQnHvbA8yFfzP5qo1GTZ3tv3LsUb5F+++er4X5dEkhr4jfPdvGFj2uUf
yJAWFBRsilvfy9lReBmt+5pbPjCrUIj/oxQn8UsH34pf4tmruu4pEtzG0u8J
/n5fHj5MeRkZ6k8//HjGpMmU1ARMnrhz2+vsQKWamis/pK2KWk5RGd/ZnTLu
4PlB350+RW1KzffVkWNLwsOpT40e5UWNS6ERXzR6OTU1IjyUUkumOUKyQ7fr
ads9eM6ca9euUbGUf334/gfUj+R5jVIaanZ1pmRW2JKuOicr9/XELYGTA0aN
Gj0/6OXjx74qLy6hxjr77Sk/Hy8zNhJrTHlr4oaEe/kF9BQ/592ibkse7YUX
XvAZ7UmaKe2o8PZbu/u5uiqV2jXvCoW0AFYcqTbRBM186dTJ4/R9iosoKFWJ
+SlFTeSyv/6SLfCvKq1MPXN2bXS0/9gx47zHhoUGH//qC7bJZ3V12sXzC+bM
NVEpyQmGh0ZQ1F1TVUnWgJLKSynn9+7eQ9q7Z3fyW7uS9+za/fbOnUmbEubN
muXq4KSQjR5IOkaaL8wOzeXB+eyXZ1Im2GiEBgBH2qiKYqf9e94WdtAo/fr4
CdJkecwpHPk66fSJE2xeHEsEKSGorqwoqyorLy/V/mbz6ivKM66lvbo6um9v
1okok5o/e86JL44WFhZTfywpKcnKvJF28QJlW+zUoLISMs4J8XFDhwxSq8Wl
hXoT3aln+XiPYbtz1zw4c+rbeUF/sba25sZTrVa6ufaJWb0yPT29QlipQUnf
pZQUcuK3c7KZPIWlZ05/tzg4hDJEKafTaDoMe/oZyiiZGL9W3r9fQGH59+fO
5uXcIqmoG144mxIyd34XS0t5TkG/KTfZlBDP5qnWPPg+9fwroSGyJXtKlTgm
aaw28R8/7uBHn/D57cWFRVkZN86e+vrHy1cL89lqu6Kiom+++GLh3Hm2os2k
vDUmegVFzsISiYqcjIwLKanpaT8WFeSXV1TlZWXv37P3qT8+qax7+rDYglpT
Hzgh4NuTp3gJBz75aPifR1hamJG1HDJwAKVU/Ain69evT/D1NdeY8uiidkMD
oRDKmygC/8ff9pO7ZM1aUnLzRvq5M2cvX7xE1piam/Ivql6yZg7d7dhaf0Ov
FyW90mY3KhXZTDMzM4oo2BkWarZPCJefG32dC/m7M4VgacMXLKAEv7joPrXs
T9nZdOurly/Qg5CB/el23kf//MDLy4sXWPtWlKuNbHSR/0U6r9lIdni9hOh8
xUMGZRvl8d/uri7RUUvTf7zO1LioOCsri0ICUhv6XF5YmJOVTQ5o6JCBZiYa
7kwpFvLo4x4Xs5Y8VKngjH669XPquZTzKam3cvNIflL+mxmZW5O2DOrXX2Oi
XWTKH9y5Zw+2xP5HdnpCbnbO+vjYfu59FbIvSNv3kV8jb7X/rT2k9uxNQVFR
xpUrFy+cz87OLSkuLCsrSzl7jpysS09HriJGRioKSA58+G/+ferrJDl56qtp
V+7dy6cWL7h777139j3/52FC+Fd7gLtSijFUbGYmBZ9BM6d/e/yk8OL7HqXG
bMGCir8HYYutqGtQvFpYXMSr68aNzMuXL96/m19VRmFpefrVazGrVnv0c6cv
k8pR//0pN6eqqppNAK5+UP1rJfVccqEVZWxaEUlFKk0/GVfTx4/xVShrhxGk
IMfVyXHJ4kV8wm3KudN8GREyQdAs6IccFp9QUXA3n7zh448NUYhHdQvDU+pB
/T32JicX3itiW77U1PDzXsU35cLLccoffqtJv3KdMjthkwq2LtHOtlug/8T3
3t3PR1pYyibsAFZcXHry+InFEeED+w/oYGqiDc+F28mXJfJeP/y5YRdTz9Md
jx086Pn8CAvZQgwTE6M/ePRbHBZGQSZzamy1L1vJVVFSeCs75+innwZNncbm
7SiN5JmmhamGyvn7/ndu591ib/aFE0ipw965c+fYwc9mTHnR0dZWyrD4TjB0
LyonYuFCivzpMT7+1wdPDGYnwcn7mvbLahW5ac+RoyhNZifHCZvkUOFsKVlF
5Y30jA/efXfKiwEUrPKhM7qE3DlZKsoRzp3+jpwmpahs8UhVBZmpCynn1q+L
fWLoEDMzC3G+rrC1VO0BxNpofXbQrMxMtg7rtBAq2PBDgdn5iRa+np5HDh+i
Crxz63bovHn2NrItX0SEAT52YtSwJ5/eGBd75dLFoiK2Xp5+qD7JFpEZP3zg
wNSAyY72dhq2aEul0HsnKIpUW6b0crBOTiZOYjR4udDo7Bl7dO9GzXf86OeF
+XdJBoJZyNIyMto7kpKGPfsMT9X54ysUuumtwcJ1Dh3m2ygJn9U65xtqC+FD
zcYm/T36stUQp06yeR1MjSvYdjqlrIGWLVlMAZKlqYU4aMDKMdUYD+jrTm16
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
AAAAAAAAAAAAoJX4DxrpEyE=
    "], {{0, 367}, {599, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{599, 367},
  PlotRange->{{0, 599}, {0, 367}}]], "Text",
 CellChangeTimes->{3.657495312527005*^9}],

Cell["The equation to reverse this sequence in any number base is:", "Text",
 CellChangeTimes->{{3.657488695096198*^9, 3.6574887306722155`*^9}, {
  3.6574890885281577`*^9, 3.657489099690075*^9}, {3.657492642124407*^9, 
  3.657492642793992*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"RowReverse", "[", 
   RowBox[{"b_", ",", "n_"}], "]"}], ":=", 
  RowBox[{"baseForm", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"x", "=", "1"}], "n"], 
      RowBox[{"x", "*", 
       SuperscriptBox["b", 
        RowBox[{"(", 
         RowBox[{"n", "-", "x"}], ")"}]], "*", 
       RowBox[{"(", 
        RowBox[{"b", "-", "2"}], ")"}]}]}], "+", "n"}], ",", "b"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.6574887420346584`*^9, 3.6574888541533957`*^9}, {
   3.6574889489694357`*^9, 3.6574889946897416`*^9}, 3.6575209167528286`*^9, {
   3.657589343145377*^9, 3.657589352494564*^9}}],

Cell[TextData[{
 "The ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"b", "-", "2"}], ")"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " is what\[CloseCurlyQuote]s similar here."
}], "Text",
 CellChangeTimes->{{3.6574889034621572`*^9, 3.657488914604072*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"RowReverse", "[", 
    RowBox[{"10", ",", "x"}], "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", "1", ",", " ", "9"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.657488856482191*^9, 3.657489019161849*^9}}],

Cell[BoxData[
 TagBox[
  TagBox[
   RowBox[{"{", 
    RowBox[{
     InterpretationBox["\<\"9\"\>",
      9,
      Editable->False], ",", 
     InterpretationBox["\<\"98\"\>",
      98,
      Editable->False], ",", 
     InterpretationBox["\<\"987\"\>",
      987,
      Editable->False], ",", 
     InterpretationBox["\<\"9876\"\>",
      9876,
      Editable->False], ",", 
     InterpretationBox["\<\"98765\"\>",
      98765,
      Editable->False], ",", 
     InterpretationBox["\<\"987654\"\>",
      987654,
      Editable->False], ",", 
     InterpretationBox["\<\"9876543\"\>",
      9876543,
      Editable->False], ",", 
     InterpretationBox["\<\"98765432\"\>",
      98765432,
      Editable->False], ",", 
     InterpretationBox["\<\"987654321\"\>",
      987654321,
      Editable->False]}], "}"}],
   BaseForm[#, 10]& ],
  BaseForm[#, 10]& ]], "Output",
 CellChangeTimes->{{3.6574889265090837`*^9, 3.657489019414881*^9}, 
   3.657494274117644*^9, 3.6574965907108135`*^9, 3.657496955595148*^9, 
   3.6574970053209624`*^9, 3.657497230021496*^9, 3.657521020546009*^9, 
   3.6575532393757806`*^9, 3.657553301631686*^9, 3.65758127088083*^9, 
   3.657585131474063*^9, 3.6575893603960676`*^9, 3.657590465801936*^9, 
   3.6575929126111417`*^9}]
}, Open  ]],

Cell["\<\
Anyhow, back on topic, now that we have the LeftEdge[] function we can \
attempt to generate each row of a triangular number. 

A triangle with 10 elements would have a base row of {0,1,2,3} ...\
\>", "Text",
 CellChangeTimes->{{3.5885947479079475`*^9, 3.5885947591265893`*^9}, {
  3.654135259348998*^9, 3.654135259348998*^9}, {3.6574929610023994`*^9, 
  3.657492970900156*^9}, {3.657494129240247*^9, 3.6574941379158487`*^9}, {
  3.6574953507483587`*^9, 3.6574953522420483`*^9}, {3.6574954132767982`*^9, 
  3.6574954153700647`*^9}, {3.6574966213342023`*^9, 3.657496624460099*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  UnderoverscriptBox["\[Sum]", 
   RowBox[{"x", "=", "0"}], 
   RowBox[{
    RowBox[{"qtri", "[", "10", "]"}], "-", "1"}]], 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"leftedge", "[", 
      RowBox[{"4", ",", "4"}], "]"}], "+", "x"}], ")"}], "*", 
   SuperscriptBox["10", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"qtri", "[", "10", "]"}], "-", "1"}], ")"}], "-", "x"}], 
     ")"}]]}]}]], "Input",
 CellChangeTimes->{{3.490221008284*^9, 3.490221053568*^9}, {3.490221103882*^9,
    3.4902211320629997`*^9}, {3.490221206939*^9, 3.49022128337*^9}, {
   3.4902214294960003`*^9, 3.490221434348*^9}, {3.5890758299517117`*^9, 
   3.5890758534720573`*^9}, 3.654146821885254*^9, {3.6574202935498047`*^9, 
   3.6574202946394434`*^9}, 3.6574213433386106`*^9}],

Cell[BoxData["123"], "Output",
 CellChangeTimes->{
  3.490221456613*^9, 3.490540749999*^9, 3.490540865461*^9, 
   3.4905409790150003`*^9, 3.561928178323*^9, 3.578710495106509*^9, 
   3.5881732671365967`*^9, 3.5881743948791*^9, 3.5881745190322013`*^9, 
   3.5881757450413246`*^9, 3.5881766727063847`*^9, 3.58818063842321*^9, 
   3.5890757237886395`*^9, {3.5890758374091387`*^9, 3.589075855567177*^9}, 
   3.5890783176039977`*^9, 3.589409732662958*^9, 3.5894105385400515`*^9, 
   3.6541319028202734`*^9, 3.6541353669951677`*^9, 3.654140096210702*^9, 
   3.6541468231829185`*^9, 3.657140603797413*^9, 3.6571639626181073`*^9, 
   3.6571641686782737`*^9, 3.65742078010859*^9, 3.6574214278093376`*^9, 
   3.6574226261980133`*^9, 3.657422772714119*^9, 3.657423542625885*^9, 
   3.6574243558651533`*^9, 3.6574942740436344`*^9, 3.6574965907308164`*^9, 
   3.6574969556171513`*^9, 3.6574970053384647`*^9, 3.6574972300565004`*^9, 
   3.657521020560011*^9, 3.6575532393982835`*^9, 3.657553301650688*^9, 
   3.657581270892831*^9, 3.657585131489565*^9, 3.657590465820939*^9, 
   3.6575929126261435`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  UnderoverscriptBox["\[Sum]", 
   RowBox[{"x", "=", "0"}], 
   RowBox[{
    RowBox[{"qtri", "[", "10", "]"}], "-", "2"}]], 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"leftedge", "[", 
      RowBox[{"4", ",", "3"}], "]"}], "+", "x"}], ")"}], "*", 
   SuperscriptBox["10", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"qtri", "[", "10", "]"}], "-", "2", "-", "x"}], 
     ")"}]]}]}]], "Input",
 CellChangeTimes->{{3.490221478667*^9, 3.4902215058*^9}, {
   3.4902215448789997`*^9, 3.490221598891*^9}, {3.4902217178310003`*^9, 
   3.490221747017*^9}, {3.588179608152282*^9, 3.5881796269903593`*^9}, {
   3.588180334000798*^9, 3.588180342146264*^9}, {3.5890755244572387`*^9, 
   3.5890755356708803`*^9}, {3.589075874779276*^9, 3.5890758906281824`*^9}, 
   3.654146904223709*^9, {3.657420297159263*^9, 3.6574202982659035`*^9}, 
   3.6574213493918796`*^9}],

Cell[BoxData["456"], "Output",
 CellChangeTimes->{{3.490221552928*^9, 3.490221577943*^9}, 3.490221749051*^9, 
   3.49054075004*^9, 3.490540865492*^9, 3.490540979049*^9, 
   3.5619281783529997`*^9, 3.5787104951295104`*^9, 3.588173267163598*^9, 
   3.5881743949091015`*^9, 3.5881745190512023`*^9, 3.588175745058326*^9, 
   3.5881766727203856`*^9, {3.588179609987387*^9, 3.588179627277376*^9}, {
   3.5881803366679506`*^9, 3.5881803425672884`*^9}, 3.588180638441211*^9, 
   3.5890755365429296`*^9, 3.5890757238056407`*^9, 3.5890758915492353`*^9, 
   3.5890783176239986`*^9, 3.589409732679959*^9, 3.589410538558052*^9, 
   3.654131902837775*^9, 3.65413536701517*^9, 3.654140096230204*^9, 
   3.6541469045492506`*^9, 3.657140603815414*^9, 3.6571639626521115`*^9, 
   3.6571641687082777`*^9, 3.657420780132593*^9, 3.6574214278333406`*^9, 
   3.6574226262225165`*^9, 3.657422772736121*^9, 3.657423542648388*^9, 
   3.6574243558901567`*^9, 3.6574942741316457`*^9, 3.6574965907518187`*^9, 
   3.657496955641654*^9, 3.6574970053564672`*^9, 3.657497230085504*^9, 
   3.6575210205740128`*^9, 3.657553239420286*^9, 3.657553301668191*^9, 
   3.657581270904333*^9, 3.657585131504567*^9, 3.657590465841441*^9, 
   3.6575929126411457`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  UnderoverscriptBox["\[Sum]", 
   RowBox[{"x", "=", "0"}], 
   RowBox[{"mi", "[", 
    RowBox[{"2", ",", 
     RowBox[{"-", "1"}]}], "]"}]], 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"leftedge", "[", 
      RowBox[{"4", ",", "2"}], "]"}], "+", "x"}], ")"}], "*", 
   SuperscriptBox["10", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"mi", "[", 
       RowBox[{"2", ",", 
        RowBox[{"-", "1"}]}], "]"}], "-", "x"}], ")"}]]}]}]], "Input",
 CellChangeTimes->{{3.490221771758*^9, 3.490221776416*^9}, {
   3.5881796346647987`*^9, 3.5881796477205453`*^9}, {3.5881803487066393`*^9, 
   3.588180356424081*^9}, {3.589075583424611*^9, 3.5890755875848494`*^9}, {
   3.5890763924768867`*^9, 3.589076449377141*^9}, {3.6541352637190533`*^9, 
   3.654135268775195*^9}, 3.6541469085332565`*^9, 3.6574213504860187`*^9}],

Cell[BoxData["78"], "Output",
 CellChangeTimes->{
  3.490221777466*^9, 3.490540750067*^9, 3.490540865521*^9, 3.490540979073*^9, 
   3.561928178374*^9, 3.5787104951515117`*^9, 3.5881732671876*^9, 
   3.5881743949371033`*^9, 3.5881745190672035`*^9, 3.5881757450723267`*^9, 
   3.588176672733386*^9, {3.5881796427842627`*^9, 3.5881796481475697`*^9}, 
   3.588180357089119*^9, 3.588180638456212*^9, 3.5890755964133544`*^9, 
   3.5890757238196416`*^9, 3.5890764172293024`*^9, 3.5890764507792215`*^9, 
   3.589078317641*^9, 3.58940973269296*^9, 3.589410538572053*^9, 
   3.6541319028522773`*^9, 3.654135367032672*^9, 3.654140096246706*^9, 
   3.6541469088747997`*^9, 3.657140603829415*^9, 3.657163962684616*^9, 
   3.65716416872678*^9, 3.6574207801475945`*^9, 3.6574214278508425`*^9, 
   3.6574226262440195`*^9, 3.657422772756124*^9, 3.65742354266639*^9, 
   3.6574243559111595`*^9, 3.6574942741451473`*^9, 3.657496590774822*^9, 
   3.657496955665657*^9, 3.657497005373969*^9, 3.6574972301135073`*^9, 
   3.657521020588014*^9, 3.657553239442789*^9, 3.657553301686193*^9, 
   3.657581270916334*^9, 3.6575851315190687`*^9, 3.6575904658629436`*^9, 
   3.6575929126561475`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  UnderoverscriptBox["\[Sum]", 
   RowBox[{"x", "=", "0"}], 
   RowBox[{"mi", "[", 
    RowBox[{"1", ",", 
     RowBox[{"-", "1"}]}], "]"}]], 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"leftedge", "[", 
      RowBox[{"4", ",", "1"}], "]"}], "+", "x"}], ")"}], "*", 
   SuperscriptBox["10", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"mi", "[", 
       RowBox[{"1", ",", 
        RowBox[{"-", "1"}]}], "]"}], "-", "x"}], ")"}]]}]}]], "Input",
 CellChangeTimes->{{3.4902217833929996`*^9, 3.4902217876140003`*^9}, {
   3.588179651616768*^9, 3.588179659967246*^9}, {3.5881803611343503`*^9, 
   3.588180366359649*^9}, {3.5890755906680255`*^9, 3.5890755946722546`*^9}, {
   3.6541352755515556`*^9, 3.6541352801731424`*^9}, 3.6541469132953615`*^9, 
   3.657421351374131*^9}],

Cell[BoxData["9"], "Output",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGDQAWLt9q7bgoyvHD0eHpq5Fkj/WWm4AkRPc07eBqITnvrs
u9b5ytGq9an1zZWvHBeeTdv1dPcrx08349yfAek5Kx+FgWijw0ofQLTJLfGU
50D6itCcmy+AdGvkbcOXQFpP5HwwiK7duD5w3t5XjsZrqxJBdATf1qXzgXTO
/GkVjvteOX45EHQXRJdtuS2+xfK145Kuhye2AmnpDA6JHUB6Q6hTzm4g7fS3
Sr/Q/rVj9LOw6TVAOuqm+EYQLW7R+vcnkJ5yttrvF5D+XubxBEQvOTrjG4i+
+ulq2G8g7Xqldg+IXi7s+kDW4bVjSvlNRnkg3cBZpg+iObrXmILoq3JHA0H0
PPvJ77WA9Lf371ZZgegJ2zaB6Ldb7kZ5AGkf+UJbLyDt7WlzwwdIq9eJcvkB
aQBgz7wy
  "]]
}, Open  ]],

Cell[TextData[{
 "Since this works, we should be able to now create a function out of it.\n\n\
To calculate the number of rows from the number base (",
 Cell[BoxData[
  FormBox["b", TraditionalForm]]],
 ") and the number of elements per row we run ",
 Cell[BoxData[
  FormBox[
   RowBox[{"qtri", "[", "b", "]"}], TraditionalForm]]],
 ". However remember the quadratic equation gives two values."
}], "Text",
 CellChangeTimes->{{3.490221917891*^9, 3.4902219260150003`*^9}, {
  3.5881751827771654`*^9, 3.5881752377173076`*^9}, {3.5881806092835436`*^9, 
  3.5881806108856354`*^9}, {3.588463464709978*^9, 3.5884634651010003`*^9}, {
  3.65415024559801*^9, 3.654150273776088*^9}, {3.6574202996605806`*^9, 
  3.657420299661081*^9}, {3.657496631150449*^9, 3.6574966360780745`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubscriptBox["z", "1"], "=", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"n", 
      FractionBox[
       RowBox[{"(", 
        RowBox[{"n", "+", "1"}], ")"}], "2"]}], "\[Equal]", "10"}], ",", 
    "n"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.4902219796280003`*^9, 3.490221998874*^9}, {
  3.4903964345889997`*^9, 3.4903964380150003`*^9}, {3.490540934571*^9, 
  3.49054093515*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"n", "\[Rule]", 
     RowBox[{"-", "5"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", "\[Rule]", "4"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.490221992383*^9, 3.490221999434*^9}, 3.490396439447*^9, 
   3.490540750119*^9, 3.490540865634*^9, 3.490540936295*^9, 3.490540979127*^9,
    3.5619281784309998`*^9, 3.5787104952015142`*^9, 3.5881732672376027`*^9, 
   3.5881743949921064`*^9, 3.588174519099205*^9, 3.588175745099328*^9, 
   3.588176672757387*^9, 3.5881806384862137`*^9, 3.5890757238486433`*^9, 
   3.5890783176750016`*^9, 3.589409732728962*^9, 3.589410538601055*^9, 
   3.6541319028932824`*^9, 3.6541353670651765`*^9, 3.65414009627921*^9, 
   3.657140603866417*^9, 3.6571639627466235`*^9, 3.657164168766285*^9, 
   3.6574207801876*^9, 3.6574214278893476`*^9, 3.6574226262860246`*^9, 
   3.6574227727921286`*^9, 3.6574235427038946`*^9, 3.6574243559536643`*^9, 
   3.657494274171651*^9, 3.657496590817827*^9, 3.6574969557111626`*^9, 
   3.657497005409974*^9, 3.6574972301890173`*^9, 3.6575210206205187`*^9, 
   3.6575532394922953`*^9, 3.6575533017346992`*^9, 3.657581270940337*^9, 
   3.657585131551573*^9, 3.6575904659049497`*^9, 3.657592912686651*^9}]
}, Open  ]],

Cell["\<\
The expression below will always return the positive element:\
\>", "Text",
 CellChangeTimes->{{3.490396493216*^9, 3.490396499802*^9}, {
  3.6572287850471992`*^9, 3.6572287972458973`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    SubscriptBox["z", "1"], "[", 
    RowBox[{"[", "2", "]"}], "]"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}], "[", 
  RowBox[{"[", "2", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.490396440744*^9, 3.490396485859*^9}, {3.490540938567*^9,
   3.4905409388529997`*^9}}],

Cell[BoxData["4"], "Output",
 CellChangeTimes->{{3.490396452443*^9, 3.490396486156*^9}, 
   3.4905407501429996`*^9, 3.490540865657*^9, 3.490540939367*^9, 
   3.490540979153*^9, 3.561928178459*^9, 3.578710495224516*^9, 
   3.5881732672626038`*^9, 3.588174395019108*^9, 3.588174519115206*^9, 
   3.5881757451123285`*^9, 3.588176672769388*^9, 3.588180638502215*^9, 
   3.589075723861644*^9, 3.5890783176920023`*^9, 3.5894097327429624`*^9, 
   3.5894105386140556`*^9, 3.654131902906784*^9, 3.6541353670816784`*^9, 
   3.654140096296212*^9, 3.657140603880418*^9, 3.6571639627781277`*^9, 
   3.6571641687877874`*^9, 3.6574207802046022`*^9, 3.65742142790935*^9, 
   3.657422626306527*^9, 3.6574227728111305`*^9, 3.6574235427238975`*^9, 
   3.6574243559746675`*^9, 3.657494274185152*^9, 3.6574965908383303`*^9, 
   3.6574969557331657`*^9, 3.657497005426976*^9, 3.6574972302140207`*^9, 
   3.65752102063402*^9, 3.6575532395172987`*^9, 3.657553301757702*^9, 
   3.6575812709518385`*^9, 3.657585131566574*^9, 3.657590465925952*^9, 
   3.6575929127016535`*^9}]
}, Open  ]],

Cell[TextData[{
 "We could write this function so it incorporates ",
 Cell[BoxData[
  FormBox[
   RowBox[{"qtri", "(", "b", ")"}], TraditionalForm]]],
 " to solve for b in ",
 Cell[BoxData[
  FormBox[
   RowBox[{"tri", "(", "b", ")"}], TraditionalForm]]],
 ", but for now let\[CloseCurlyQuote]s take the root-triangular number (",
 Cell[BoxData[
  FormBox["r", TraditionalForm]]],
 ") by hand to retrieve an arbitrary row (",
 Cell[BoxData[
  FormBox["z", TraditionalForm]],
  FontSlant->"Italic"],
 "). The last parameter (",
 StyleBox["f",
  FontSlant->"Italic"],
 ") optionally allows a caller to specify the Base",
 StyleBox["F",
  FontSlant->"Italic"],
 "orm."
}], "Text",
 CellChangeTimes->{{3.4902222980950003`*^9, 3.4902223196429996`*^9}, {
  3.561927483658*^9, 3.5619274859849997`*^9}, {3.588176264637044*^9, 
  3.588176265807111*^9}, {3.6541472600883985`*^9, 3.6541473115619345`*^9}, {
  3.654150190187974*^9, 3.6541502429396725`*^9}, {3.654150284469946*^9, 
  3.6541503022562046`*^9}, {3.6574209549967976`*^9, 3.657420956490988*^9}, {
  3.6574240056581826`*^9, 3.657424163280198*^9}, {3.6574941985625496`*^9, 
  3.6574942026180644`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"TriRow", "[", 
   RowBox[{"b_", ",", " ", "r_", ",", " ", "z_"}], "]"}], "=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"x", "=", "0"}], 
     RowBox[{"mi", "[", 
      RowBox[{"z", ",", 
       RowBox[{"-", "1"}]}], "]"}]], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"leftedge", "[", 
        RowBox[{"r", ",", "z"}], "]"}], "+", "x"}], ")"}], "*", 
     SuperscriptBox["b", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"mi", "[", 
         RowBox[{"z", ",", 
          RowBox[{"-", "1"}]}], "]"}], "-", "x"}], ")"}]]}]}], 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.490221930156*^9, 3.490221950965*^9}, {3.490222281559*^9,
    3.4902222879040003`*^9}, {3.490222323414*^9, 3.490222384243*^9}, {
   3.5881743598720975`*^9, 3.58817436777655*^9}, {3.5881744342783537`*^9, 
   3.588174436107458*^9}, {3.5881744937727566`*^9, 3.588174497104947*^9}, 
   3.588176235875399*^9, {3.588176283236108*^9, 3.5881762997360516`*^9}, {
   3.5881764337427163`*^9, 3.5881765218307548`*^9}, {3.588180431101352*^9, 
   3.588180485801481*^9}, {3.5890756039247837`*^9, 3.589075607650997*^9}, {
   3.654135288281672*^9, 3.654135294795499*^9}, {3.65414694069184*^9, 
   3.6541469412534113`*^9}, 3.657421352346255*^9, 3.657421972348485*^9, {
   3.657422236538533*^9, 3.6574222512053957`*^9}, {3.6574239676258535`*^9, 
   3.65742397697404*^9}, {3.6574241719037933`*^9, 3.6574241788456745`*^9}, {
   3.6574242921100574`*^9, 3.657424312126099*^9}, {3.657496911738079*^9, 
   3.6574969432080755`*^9}, {3.657497049878621*^9, 3.657497051395813*^9}, {
   3.6574970998899713`*^9, 3.657497102230768*^9}, {3.6574984039125614`*^9, 
   3.6574984168166995`*^9}, 3.6574984640346956`*^9, 3.6575209244828105`*^9, {
   3.6575861043911076`*^9, 3.6575861135567713`*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"-", "2"}], "+", "r", "+", "z", "-", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"r", "+", "z"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "r"}], "+", 
      RowBox[{"b", " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", "r", "-", "z"}], ")"}]}], "+", "z"}], ")"}]}], "+", 
   
   RowBox[{
    SuperscriptBox["b", "z"], " ", 
    RowBox[{"(", 
     RowBox[{"2", "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "b"}], ")"}], " ", "r"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "b"}], ")"}], " ", 
       SuperscriptBox["r", "2"]}], "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "b"}], ")"}], " ", "z", " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", "z"}], ")"}]}]}], ")"}]}]}], 
  RowBox[{"2", " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "b"}], ")"}], "2"]}]]], "Output",
 CellChangeTimes->{3.6575533021737547`*^9, 3.6575812712483764`*^9, 
  3.6575851319296207`*^9, 3.657586114419881*^9, 3.6575904661724834`*^9, 
  3.6575929129251814`*^9}]
}, Open  ]],

Cell["Now let's test to check everything works.", "Text",
 CellChangeTimes->{{3.588173044927887*^9, 3.5881730514032574`*^9}, 
   3.5881736195827556`*^9, {3.6571693779902725`*^9, 3.657169385735756*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"TriRow", "[", 
    RowBox[{"10", ",", "4", ",", "x"}], "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", "1", ",", "4"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.4902223958459997`*^9, 3.490222427053*^9}, {
   3.490397036139*^9, 3.490397042349*^9}, 3.65742198073205*^9, {
   3.657422239457904*^9, 3.657422254759347*^9}, {3.657424260965603*^9, 
   3.657424273413183*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"9", ",", "78", ",", "456", ",", "123"}], "}"}]], "Output",
 CellChangeTimes->{
  3.5890776964854717`*^9, 3.5890783177280045`*^9, 3.5894097329959764`*^9, 
   3.589410538830068*^9, 3.6541319029337873`*^9, 3.6541353673722153`*^9, 
   3.654140096575748*^9, 3.6541469525948515`*^9, {3.6541473261372857`*^9, 
   3.654147330282312*^9}, 3.6541503137051587`*^9, 3.6571406041904354`*^9, 
   3.6571639631096697`*^9, 3.657164169025818*^9, 3.657420780526143*^9, 
   3.6574214281413794`*^9, 3.6574226265535583`*^9, 3.65742277304366*^9, 
   3.6574235429569273`*^9, {3.6574242541752405`*^9, 3.6574242737522264`*^9}, {
   3.6574243459964*^9, 3.6574243560691795`*^9}, 3.657494274491691*^9, 
   3.6574965910778604`*^9, 3.657496955777671*^9, 3.6574970056530046`*^9, 
   3.6574971066898346`*^9, 3.657497230257526*^9, 3.657498419113491*^9, 
   3.65752102079254*^9, 3.6575533021927576`*^9, 3.657581271261878*^9, 
   3.657585131946123*^9, 3.657590371810501*^9, 3.6575904661899853`*^9, 
   3.6575929129396834`*^9}]
}, Open  ]],

Cell[TextData[{
 "To automatically insert ",
 Cell[BoxData[
  FormBox["r", TraditionalForm]]],
 " we simply solve for ",
 "tri[",
 "n] and extract the positive result of the quadratic equation."
}], "Text",
 CellChangeTimes->{{3.561927492784*^9, 3.561927559012*^9}, {
   3.588172835220893*^9, 3.588172841969279*^9}, {3.588172951734557*^9, 
   3.58817296246317*^9}, {3.5881735017750177`*^9, 3.588173504145153*^9}, {
   3.588173630965407*^9, 3.5881736310294104`*^9}, 3.6574203014228044`*^9}],

Cell[BoxData[
 RowBox[{"TriRowSimple", ":=", " ", 
  RowBox[{"Function", "[", 
   RowBox[{
    RowBox[{"posresult", "=."}], ";", 
    RowBox[{"result", "=", 
     RowBox[{"Solve", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"tri", "[", "n", "]"}], "\[Equal]", "#1"}], ",", "n"}], 
      "]"}]}], ";", 
    RowBox[{"posresult", "=", 
     RowBox[{"Extract", "[", 
      RowBox[{
       RowBox[{"result", "[", 
        RowBox[{"[", 
         RowBox[{"2", ",", "1"}], "]"}], "]"}], ",", "2"}], "]"}]}], ";", 
    RowBox[{"TriRow", "[", 
     RowBox[{"#1", ",", "posresult", ",", "#2"}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.490396742066*^9, 3.4903967642460003`*^9}, {
   3.490396880236*^9, 3.490396951329*^9}, {3.4903970128199997`*^9, 
   3.490397021526*^9}, 3.657420303068013*^9, 3.657421990862336*^9, {
   3.6574221284358053`*^9, 3.6574221630036955`*^9}, {3.657422196605462*^9, 
   3.657422210623742*^9}, {3.6574222408340783`*^9, 3.6574222574176846`*^9}, {
   3.657422429800074*^9, 3.6574224365554323`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"TriRowSimple", "[", 
    RowBox[{"10", ",", "x"}], "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", "1", ",", " ", "4"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.49039695417*^9, 3.490396973934*^9}, {3.490397031962*^9, 
   3.490397044924*^9}, {3.657164112071086*^9, 3.6571641437811117`*^9}, {
   3.6571642766114793`*^9, 3.657164278066664*^9}, 3.6574224438753614`*^9, 
   3.6574227307597914`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"9", ",", "78", ",", "456", ",", "123"}], "}"}]], "Output",
 CellChangeTimes->{3.657422773066163*^9, 3.6574235429809303`*^9, 
  3.657424356099183*^9, 3.6574942745106936`*^9, 3.657496591106864*^9, 
  3.657496880456107*^9, 3.657496955808175*^9, 3.6574970056760073`*^9, 
  3.657497230301532*^9, 3.6575210210245695`*^9, 3.657553302229762*^9, 
  3.6575812712838807`*^9, 3.6575851319686255`*^9, 3.657590466212488*^9, 
  3.657592912959186*^9}]
}, Open  ]],

Cell["\<\
We\[CloseCurlyQuote]ll unset this so we can do it more elegantly...\
\>", "Text",
 CellChangeTimes->{{3.6541474022959566`*^9, 3.654147416959819*^9}}],

Cell[BoxData[
 RowBox[{"TriRowSimple", "=."}]], "Input",
 CellChangeTimes->{{3.6541473611257286`*^9, 3.654147397256817*^9}, 
   3.6574224477818575`*^9, 3.6574225209586496`*^9}],

Cell[TextData[{
 "Manually running the quadratic equation on ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     RowBox[{
      SuperscriptBox["x", "2"], "+", "x"}], "2"], "=", "y"}], 
   TraditionalForm]]],
 " gives: ",
 Cell[BoxData[
  FormBox[
   FractionBox[
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     SqrtBox[
      RowBox[{
       SuperscriptBox["1", "2"], "-", 
       RowBox[{"(", 
        RowBox[{"4", "*", "1", "*", "2", "y"}], ")"}]}]]}], 
    RowBox[{"2", "*", "1"}]], TraditionalForm]]],
 ". The positive result is: ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      SqrtBox[
       RowBox[{"1", "+", 
        RowBox[{"8", " ", "y"}]}]]}], ")"}]}], TraditionalForm]]],
 ". Since we already made the ",
 Cell[BoxData[
  FormBox[
   RowBox[{"qtri", "[", "x", "]"}], TraditionalForm]]],
 " function earlier to compute the quadratic value of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"tri", "[", "x", "]"}], TraditionalForm]]],
 ". We use it below."
}], "Text",
 CellChangeTimes->{{3.5881729716336946`*^9, 3.5881729737418156`*^9}, {
  3.5881734005312266`*^9, 3.588173528936571*^9}, {3.588173559044293*^9, 
  3.588173559044293*^9}, {3.588174303185856*^9, 3.588174324129053*^9}, {
  3.5881757783232284`*^9, 3.5881758269450097`*^9}, {3.58859479201047*^9, 
  3.5885947925315*^9}, {3.5890800999209404`*^9, 3.5890801122806473`*^9}, {
  3.6541474205477743`*^9, 3.654147424751808*^9}, {3.65716940293594*^9, 
  3.6571694051677237`*^9}, {3.657420306045892*^9, 3.657420309592342*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"TriRowSimple", "[", 
   RowBox[{"b_", ",", "z_"}], "]"}], "=", " ", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"TriRow", "[", 
    RowBox[{"b", ",", 
     RowBox[{"qtri", "[", "b", "]"}], ",", "z"}], "]"}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.5881729773270206`*^9, 3.588173005796649*^9}, {
   3.588173064172988*^9, 3.5881731234223766`*^9}, {3.5881733627940683`*^9, 
   3.588173366079256*^9}, {3.5881743813093243`*^9, 3.5881743845345087`*^9}, {
   3.5881744481031446`*^9, 3.588174451067314*^9}, {3.588174791715798*^9, 
   3.588174792913866*^9}, {3.6541473526071467`*^9, 3.654147357551275*^9}, 
   3.6574203114540787`*^9, 3.6574220037634745`*^9, 3.6574222916270285`*^9, 
   3.65742244905752*^9, 3.657422690691203*^9, {3.657424682765664*^9, 
   3.657424713075513*^9}, {3.657498430379922*^9, 3.6574984539699173`*^9}, {
   3.6574995134119496`*^9, 3.6574995200857973`*^9}, 3.6575209393491983`*^9, {
   3.6575894022068768`*^9, 3.6575894163581743`*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"-", "2"}], "+", 
   RowBox[{"2", " ", "b"}], "-", 
   RowBox[{"2", " ", 
    SuperscriptBox["b", "2"]}], "+", "z", "-", 
   RowBox[{"b", " ", "z"}], "-", 
   SuperscriptBox["z", "2"], "+", 
   RowBox[{"b", " ", 
    SuperscriptBox["z", "2"]}], "+", 
   RowBox[{
    SuperscriptBox["b", "z"], " ", 
    RowBox[{"(", 
     RowBox[{"2", "+", 
      RowBox[{"2", " ", 
       SuperscriptBox["b", "2"]}], "+", "z", "+", 
      SuperscriptBox["z", "2"], "-", 
      RowBox[{"b", " ", 
       RowBox[{"(", 
        RowBox[{"2", "+", "z", "+", 
         SuperscriptBox["z", "2"]}], ")"}]}]}], ")"}]}]}], 
  RowBox[{"2", " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "b"}], ")"}], "2"]}]]], "Output",
 CellChangeTimes->{3.657498456026179*^9, 3.657499523302706*^9, 
  3.657521021296104*^9, 3.6575533024382887`*^9, 3.6575812713918943`*^9, 
  3.6575851321791525`*^9, 3.6575894170652637`*^9, 3.6575894727853394`*^9, 
  3.657589696372731*^9, 3.657590466233491*^9, 3.657592912974688*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"TriRowSimple", "[", 
    RowBox[{"10", ",", "x"}], "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", "1", ",", " ", "4"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.657422451331808*^9, 3.6574227351878533`*^9, {3.6574247290315394`*^9, 
   3.657424766709324*^9}, {3.6574979757196875`*^9, 3.657497980695319*^9}, {
   3.6574996300757637`*^9, 3.65749963523942*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"9", ",", "78", ",", "456", ",", "123"}], "}"}]], "Output",
 CellChangeTimes->{
  3.657422773102668*^9, 3.6574235430204353`*^9, 3.6574243562482023`*^9, {
   3.6574247263552*^9, 3.657424768055495*^9}, 3.6574942746607127`*^9, 
   3.6574965911578703`*^9, 3.6574969559761963`*^9, 3.6574970057155123`*^9, 
   3.657497230356038*^9, {3.657497977125366*^9, 3.657497981261391*^9}, {
   3.657499526669633*^9, 3.6574995282713366`*^9}, {3.657499631650464*^9, 
   3.6574996355474586`*^9}, 3.6575210213716135`*^9, 3.657553302510298*^9, 
   3.6575812714133973`*^9, 3.6575851322111564`*^9, 3.657589447298103*^9, 
   3.6575897195451736`*^9, 3.6575904662514935`*^9, 3.6575929129881897`*^9}]
}, Open  ]],

Cell[TextData[{
 "Alternatively, doing this long hand, we would substitute ",
 Cell[BoxData[
  FormBox[
   RowBox[{"qtri", "[", "b", "]"}], TraditionalForm]]],
 " for ",
 Cell[BoxData[
  FormBox["r", TraditionalForm]]],
 "."
}], "Text",
 CellChangeTimes->{{3.5890777056319947`*^9, 3.5890777721918015`*^9}, {
  3.589077890857589*^9, 3.589077928968769*^9}, {3.589078053439888*^9, 
  3.5890780547499633`*^9}, {3.589078199216226*^9, 3.589078207823718*^9}, {
  3.5890782748745537`*^9, 3.5890782755385914`*^9}, {3.5890786726983075`*^9, 
  3.589078673510354*^9}, {3.654135301725379*^9, 3.654135301725379*^9}, {
  3.6571638055681643`*^9, 3.657163848701642*^9}, {3.6571639073060837`*^9, 
  3.6571639387035704`*^9}, {3.6574203126827345`*^9, 3.6574203126827345`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"TriRowLong", "[", 
   RowBox[{"b_", ",", "z_"}], "]"}], "=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"x", "=", "0"}], 
     RowBox[{"z", "-", "1"}]], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"leftedge", "[", 
        RowBox[{
         RowBox[{"qtri", "[", "b", "]"}], ",", "z"}], "]"}], "+", "x"}], 
      ")"}], "*", 
     SuperscriptBox["b", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"z", "-", "1"}], ")"}], "-", "x"}], ")"}]]}]}], 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.490221930156*^9, 3.490221950965*^9}, {3.490222281559*^9,
    3.4902222879040003`*^9}, {3.490222323414*^9, 3.490222384243*^9}, {
   3.5881743598720975`*^9, 3.58817436777655*^9}, {3.5881744342783537`*^9, 
   3.588174436107458*^9}, {3.5881744937727566`*^9, 3.588174497104947*^9}, 
   3.588176235875399*^9, {3.588176283236108*^9, 3.5881762997360516`*^9}, {
   3.5881764337427163`*^9, 3.5881765218307548`*^9}, {3.588180431101352*^9, 
   3.588180485801481*^9}, {3.5890756039247837`*^9, 3.589075607650997*^9}, {
   3.589075954167817*^9, 3.589076005259739*^9}, {3.5890760656531935`*^9, 
   3.5890761158060617`*^9}, {3.5890763362156687`*^9, 3.589076349967455*^9}, {
   3.589076490564497*^9, 3.5890764950297523`*^9}, {3.5890766050470448`*^9, 
   3.5890766078382044`*^9}, 3.589076711940159*^9, {3.5890767752497797`*^9, 
   3.5890767814501343`*^9}, {3.589077403027687*^9, 3.589077440190812*^9}, {
   3.589077538320425*^9, 3.589077552086212*^9}, 3.589077835715435*^9, {
   3.589078293628626*^9, 3.5890782947336893`*^9}, {3.6541470253340883`*^9, 
   3.654147027827405*^9}, 3.657420314080412*^9, 3.6574213533543825`*^9, {
   3.6574225301878214`*^9, 3.657422532897666*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"-", "2"}], "+", 
   RowBox[{"2", " ", "b"}], "-", 
   RowBox[{"2", " ", 
    SuperscriptBox["b", "2"]}], "+", "z", "-", 
   RowBox[{"b", " ", "z"}], "-", 
   SuperscriptBox["z", "2"], "+", 
   RowBox[{"b", " ", 
    SuperscriptBox["z", "2"]}], "+", 
   RowBox[{
    SuperscriptBox["b", "z"], " ", 
    RowBox[{"(", 
     RowBox[{"2", "+", 
      RowBox[{"2", " ", 
       SuperscriptBox["b", "2"]}], "+", "z", "+", 
      SuperscriptBox["z", "2"], "-", 
      RowBox[{"b", " ", 
       RowBox[{"(", 
        RowBox[{"2", "+", "z", "+", 
         SuperscriptBox["z", "2"]}], ")"}]}]}], ")"}]}]}], 
  RowBox[{"2", " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "b"}], ")"}], "2"]}]]], "Output",
 CellChangeTimes->{
  3.589078235008273*^9, {3.5890782998259807`*^9, 3.5890783178060093`*^9}, 
   3.589409733261992*^9, 3.5894105389650755`*^9, 3.6238061630332403`*^9, {
   3.6541319013190823`*^9, 3.6541319030523024`*^9}, 3.6541353676257477`*^9, 
   3.654140096791775*^9, 3.654147029265588*^9, 3.6571406044354496`*^9, 
   3.6571637415020294`*^9, 3.657163963360202*^9, 3.6571641691268306`*^9, 
   3.6574207807901764`*^9, 3.65742142822289*^9, 3.65742262696011*^9, 
   3.65742277311967*^9, 3.6574235430384374`*^9, 3.6574243562702045`*^9, 
   3.6574942747222204`*^9, 3.657496591180373*^9, 3.657496956012701*^9, 
   3.657497005733015*^9, {3.657497229296404*^9, 3.657497230374541*^9}, 
   3.657521021474127*^9, 3.6575533025758057`*^9, 3.657581271428399*^9, 
   3.6575851322281585`*^9, 3.6575904662809973`*^9, 3.657592913001191*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"TriRowLong", "[", 
    RowBox[{"10", ",", "x"}], "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", "1", ",", "4"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.4902223958459997`*^9, 3.490222427053*^9}, {
   3.490397036139*^9, 3.490397042349*^9}, 3.589076120908354*^9, 
   3.589077841414761*^9, {3.589078297638856*^9, 3.5890782981608853`*^9}, 
   3.6574225479605784`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"9", ",", "78", ",", "456", ",", "123"}], "}"}]], "Output",
 CellChangeTimes->{{3.490222407701*^9, 3.490222427449*^9}, {3.490397023513*^9,
    3.490397042792*^9}, 3.490540750741*^9, 3.490540866183*^9, 
   3.490540979236*^9, 3.561928178657*^9, 3.5787104953405223`*^9, 
   3.588173267379611*^9, 3.5881743953041244`*^9, 3.5881745191472073`*^9, 
   3.588175745353343*^9, {3.58817628870242*^9, 3.588176303590272*^9}, {
   3.588176449348609*^9, 3.5881764610052757`*^9}, 3.588176513368271*^9, 
   3.5881766727943892`*^9, 3.588180444295107*^9, 3.588180638532216*^9, 
   3.5890757240726557`*^9, 3.589075992303998*^9, {3.589076079921009*^9, 
   3.589076125866637*^9}, 3.5890763544987144`*^9, 3.5890764991169863`*^9, 
   3.5890766117964306`*^9, 3.589076716316409*^9, 3.589076785799383*^9, {
   3.5890774301422377`*^9, 3.589077442480943*^9}, 3.58907755623545*^9, 
   3.5890778422128067`*^9, {3.589078301337067*^9, 3.58907831782301*^9}, 
   3.589409733312995*^9, 3.5894105389790764`*^9, 3.6541319030653043`*^9, 
   3.6541353676452503`*^9, 3.6541400968092775`*^9, 3.654147032218463*^9, 
   3.6571406044504504`*^9, 3.6571637428782043`*^9, 3.6571639633907056`*^9, 
   3.6571641691453333`*^9, 3.657420780806178*^9, 3.6574214282403917`*^9, 
   3.6574226269791126`*^9, 3.657422773135672*^9, 3.6574235430559397`*^9, 
   3.6574243562917075`*^9, 3.6574942747837286`*^9, 3.657496591218378*^9, 
   3.657496956035204*^9, 3.657497005750517*^9, 3.6574972304205465`*^9, 
   3.657521021570139*^9, 3.6575533025943084`*^9, 3.657581271443901*^9, 
   3.6575851322426605`*^9, 3.657590466299*^9, 3.6575929130146933`*^9}]
}, Open  ]],

Cell[TextData[{
 "So now we can run a summation to find the sum of all the rows for \
triangular number ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"tri", "(", "4", ")"}], "=", "10"}], TraditionalForm]]],
 "."
}], "Text",
 CellChangeTimes->{{3.4903969828929996`*^9, 3.490396987667*^9}, {
  3.654150484709873*^9, 3.6541505302021503`*^9}, {3.6574209576251316`*^9, 
  3.6574209576251316`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  UnderoverscriptBox["\[Sum]", 
   RowBox[{"x", "=", "1"}], "4"], 
  RowBox[{"TriRow", "[", 
   RowBox[{"10", ",", "4", ",", "x"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.490223543543*^9, 3.490223558167*^9}, 
   3.6574220062822943`*^9, 3.6574222934877644`*^9, {3.6574972934855547`*^9, 
   3.657497296701463*^9}}],

Cell[BoxData["666"], "Output",
 CellChangeTimes->{
  3.490223558612*^9, 3.490540751012*^9, 3.490540866462*^9, 3.490540979323*^9, 
   3.561928178708*^9, 3.5787104953895254`*^9, 3.5881732675136185`*^9, 
   3.5881743954331317`*^9, 3.5881745192972164`*^9, 3.588175745415346*^9, 
   3.588176672859393*^9, 3.5881806386022205`*^9, 3.5890757242166643`*^9, 
   3.589078317841011*^9, 3.589409733329996*^9, 3.589410538994077*^9, 
   3.654131903078806*^9, 3.6541353676647525`*^9, 3.6541400968252797`*^9, 
   3.6571406044654512`*^9, 3.6571639634242096`*^9, 3.6571641691658354`*^9, 
   3.657420780823681*^9, 3.6574214282578945`*^9, 3.657422626999615*^9, 
   3.6574227731516743`*^9, 3.657423543073942*^9, 3.65742435631271*^9, 
   3.6574942747997303`*^9, 3.657496591241381*^9, 3.6574966965402527`*^9, 
   3.6574968871074514`*^9, {3.6574969246472187`*^9, 3.657496956056707*^9}, 
   3.657497005769019*^9, 3.6574972304510503`*^9, {3.6574972948462276`*^9, 
   3.6574972969734974`*^9}, 3.6574995332209654`*^9, 3.6575210216066437`*^9, 
   3.657553302613311*^9, 3.6575812714599032`*^9, 3.657585132257162*^9, 
   3.6575894772844105`*^9, 3.657590466316002*^9, 3.6575929130276947`*^9}]
}, Open  ]],

Cell["Or to make things especially easy for ourselves ...", "Text",
 CellChangeTimes->{{3.589079549988486*^9, 3.589079558211956*^9}, {
   3.589079677766794*^9, 3.5890796781658173`*^9}, 3.5891153921385393`*^9, {
   3.657163986254109*^9, 3.6571639864536343`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"SumTriRows", "[", "b_", "]"}], "=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"x", "=", "1"}], 
     RowBox[{"qtri", "[", "b", "]"}]], 
    RowBox[{"TriRowSimple", "[", 
     RowBox[{"b", ",", "x"}], "]"}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.5890795597190423`*^9, 3.589079642283765*^9}, 
   3.6574203151980534`*^9, 3.6574224745867615`*^9, 3.6574225688927364`*^9, 
   3.6574234787147694`*^9, 3.6574235220662746`*^9, {3.6574244067556157`*^9, 
   3.657424418037548*^9}, {3.6574973126444874`*^9, 3.657497336393503*^9}, {
   3.6574973716439795`*^9, 3.6574974000620885`*^9}, {3.6574980001502895`*^9, 
   3.6574980012254267`*^9}, {3.6574984404101954`*^9, 
   3.6574984483677063`*^9}, {3.657499564436429*^9, 3.657499590863785*^9}, 
   3.657499648134057*^9}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   RowBox[{"6", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "b"}], ")"}], "4"]}]], 
  RowBox[{"(", 
   RowBox[{"3", "-", 
    RowBox[{"3", " ", 
     SqrtBox[
      RowBox[{"1", "+", 
       RowBox[{"8", " ", "b"}]}]]}], "-", 
    RowBox[{"9", " ", 
     SuperscriptBox["b", "2"], " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SqrtBox[
        RowBox[{"1", "+", 
         RowBox[{"8", " ", "b"}]}]]}], ")"}]}], "+", 
    RowBox[{"3", " ", 
     SuperscriptBox["b", 
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{"3", "+", 
         SqrtBox[
          RowBox[{"1", "+", 
           RowBox[{"8", " ", "b"}]}]]}], ")"}]}]], " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SqrtBox[
        RowBox[{"1", "+", 
         RowBox[{"8", " ", "b"}]}]]}], ")"}]}], "+", 
    RowBox[{"6", " ", 
     SuperscriptBox["b", "3"], " ", 
     RowBox[{"(", 
      RowBox[{"2", "+", 
       SqrtBox[
        RowBox[{"1", "+", 
         RowBox[{"8", " ", "b"}]}]]}], ")"}]}], "-", 
    RowBox[{"2", " ", 
     SuperscriptBox["b", "4"], " ", 
     RowBox[{"(", 
      RowBox[{"3", "+", 
       SqrtBox[
        RowBox[{"1", "+", 
         RowBox[{"8", " ", "b"}]}]]}], ")"}]}], "-", 
    RowBox[{"3", " ", 
     SuperscriptBox["b", 
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SqrtBox[
          RowBox[{"1", "+", 
           RowBox[{"8", " ", "b"}]}]]}], ")"}]}]], " ", 
     RowBox[{"(", 
      RowBox[{"3", "+", 
       SqrtBox[
        RowBox[{"1", "+", 
         RowBox[{"8", " ", "b"}]}]]}], ")"}]}], "+", 
    RowBox[{"b", " ", 
     RowBox[{"(", 
      RowBox[{"6", "+", 
       RowBox[{"8", " ", 
        SqrtBox[
         RowBox[{"1", "+", 
          RowBox[{"8", " ", "b"}]}]]}]}], ")"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{
  3.65749964839659*^9, 3.657521022306732*^9, 3.657553303602436*^9, 
   3.6575812714759054`*^9, 3.6575851322716637`*^9, {3.6575904505164957`*^9, 
   3.6575904663335037`*^9}, 3.657592913040696*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SumTriRows", "[", "10", "]"}]], "Input",
 CellChangeTimes->{{3.589079618786421*^9, 3.5890796224916325`*^9}, 
   3.6574225906184955`*^9, 3.657423481045565*^9, 3.657423524309559*^9, {
   3.6574970404434223`*^9, 3.6574970436553307`*^9}, {3.65749954491345*^9, 
   3.6574995500836067`*^9}}],

Cell[BoxData["666"], "Output",
 CellChangeTimes->{{3.589079622815651*^9, 3.5890796455119495`*^9}, 
   3.589409734168044*^9, 3.589410539023079*^9, 3.654131903615374*^9, 
   3.6541353683283367`*^9, 3.654140096876286*^9, 3.657140605481509*^9, 
   3.6571639640562897`*^9, 3.657164169205841*^9, 3.657420781867813*^9, 
   3.657421428294899*^9, 3.657422627045621*^9, 3.6574227731856785`*^9, 
   3.6574235431104465`*^9, 3.65742435694079*^9, 3.6574244250594397`*^9, 
   3.6574942755708284`*^9, 3.6574965912908874`*^9, 3.657496956101712*^9, 
   3.657497005817526*^9, {3.6574970386416936`*^9, 3.657497071326844*^9}, 
   3.6574971678015947`*^9, 3.6574972304965563`*^9, {3.657497321451106*^9, 
   3.6574973399689574`*^9}, {3.6574973858032775`*^9, 3.6574974055537853`*^9}, 
   3.657498008287823*^9, {3.657498443430579*^9, 3.657498444810254*^9}, {
   3.6574995418055553`*^9, 3.6574995920894403`*^9}, 3.6574996437580013`*^9, 
   3.6575210223942437`*^9, 3.657553303667945*^9, 3.6575812714934072`*^9, 
   3.657585132287166*^9, {3.6575904510535636`*^9, 3.657590466351506*^9}, 
   3.657592913054698*^9}]
}, Open  ]],

Cell["\<\
Now let\[CloseCurlyQuote]s test it in a smaller number base (6)...\
\>", "Text",
 CellChangeTimes->{{3.490223841281*^9, 3.4902238555030003`*^9}, 
   3.6574229350522327`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"TriRow", "[", 
    RowBox[{"6", ",", "3", ",", "x"}], "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", "1", ",", " ", "3"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.490224032084*^9, 3.490224040914*^9}, 
   3.6574220076079626`*^9, 3.6574222950529633`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"5", ",", "22", ",", "8"}], "}"}]], "Output",
 CellChangeTimes->{{3.49022402646*^9, 3.490224041467*^9}, 3.490540751199*^9, 
   3.490540866625*^9, 3.490540979376*^9, 3.5619281787320004`*^9, 
   3.5787104954135265`*^9, 3.5881732675866227`*^9, 3.5881743954601336`*^9, 
   3.588174519313217*^9, 3.588175745428347*^9, 3.5881765351415157`*^9, 
   3.5881766728723936`*^9, 3.5881806386172214`*^9, 3.589075724229665*^9, 
   3.589078317858012*^9, 3.589409734185045*^9, 3.58941053903708*^9, 
   3.654131903630876*^9, 3.654135368346839*^9, 3.654140096892788*^9, 
   3.6571406054965105`*^9, 3.6571639640892944`*^9, 3.6571641692258434`*^9, 
   3.657420781885316*^9, 3.6574214283124013`*^9, 3.657422627064624*^9, 
   3.6574227732026806`*^9, 3.657423543129449*^9, 3.657424356963293*^9, 
   3.6574942755863304`*^9, 3.6574965913118896`*^9, 3.6574969561237154`*^9, 
   3.6574970058350277`*^9, 3.657497230531561*^9, 3.6575210224107456`*^9, 
   3.657553303686447*^9, 3.65758127150941*^9, 3.657585132301668*^9, 
   3.6575894816299624`*^9, 3.657590466369008*^9, 3.6575929130676994`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"BaseForm", "[", 
    RowBox[{
     RowBox[{"TriRow", "[", 
      RowBox[{"6", ",", "3", ",", "x"}], "]"}], ",", "6"}], "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", "1", ",", " ", "3"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.4902239011800003`*^9, 3.490223903242*^9}, {
   3.4902239379820004`*^9, 3.490223942708*^9}, 3.657422011563965*^9, 
   3.6574222968026857`*^9, {3.6574244593852987`*^9, 3.657424468130909*^9}, {
   3.6575894851684117`*^9, 3.6575895045103683`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    InterpretationBox[
     SubscriptBox["\<\"5\"\>", "\<\"6\"\>"],
     5,
     Editable->False],
    BaseForm[#, 6]& ], ",", 
   TagBox[
    InterpretationBox[
     SubscriptBox["\<\"34\"\>", "\<\"6\"\>"],
     22,
     Editable->False],
    BaseForm[#, 6]& ], ",", 
   TagBox[
    InterpretationBox[
     SubscriptBox["\<\"12\"\>", "\<\"6\"\>"],
     8,
     Editable->False],
    BaseForm[#, 6]& ]}], "}"}]], "Output",
 CellChangeTimes->{
  3.490223904059*^9, 3.49022394312*^9, 3.490540751367*^9, 
   3.4905408668389997`*^9, 3.4905409794189997`*^9, 3.561928178757*^9, 
   3.5787104954375277`*^9, 3.5881732676586266`*^9, 3.5881743954861345`*^9, 
   3.588174519329218*^9, 3.588175745443348*^9, 3.5881765361475735`*^9, 
   3.588176672885394*^9, 3.588180638632222*^9, 3.589075724245666*^9, 
   3.589078317874013*^9, 3.589409734201046*^9, 3.5894105390510807`*^9, 
   3.6541319036443777`*^9, 3.6541353683663416`*^9, 3.6541400969092903`*^9, 
   3.657140605510511*^9, 3.6571639641348*^9, 3.657164169245846*^9, 
   3.6574207819028177`*^9, 3.6574214283304033`*^9, 3.657422627084626*^9, 
   3.657422773218683*^9, 3.6574235431489515`*^9, 3.6574243570107985`*^9, 
   3.657424468727985*^9, 3.6574942756048326`*^9, 3.657496591333893*^9, 
   3.657496956145718*^9, 3.65749700585303*^9, 3.657497230559564*^9, 
   3.6575210224267473`*^9, 3.6575533037034492`*^9, 3.6575812715254116`*^9, 
   3.65758513231717*^9, {3.657589498730134*^9, 3.6575895049909286`*^9}, 
   3.6575904663860106`*^9, 3.6575929130817013`*^9}]
}, Open  ]],

Cell["\<\
This is correct because we see 012, then 34, and last 5 by itself (note see \
\[OpenCurlyDoubleQuote]Other Possible Connections\[CloseCurlyDoubleQuote] \
below). 

So if we sum the entire thing we get ...\
\>", "Text",
 CellChangeTimes->{
  3.490230559885*^9, {3.5890704988517904`*^9, 3.589070501061917*^9}, {
   3.589071659800193*^9, 3.589071671021835*^9}, {3.654150554788272*^9, 
   3.6541505549577937`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  UnderoverscriptBox["\[Sum]", 
   RowBox[{"x", "=", "1"}], "3"], 
  RowBox[{"TriRow", "[", 
   RowBox[{"6", ",", "3", ",", "x"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.490223876366*^9, 3.490223880764*^9}, 
   3.6574220128276253`*^9, 3.6574222978258157`*^9}],

Cell[BoxData["35"], "Output",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGDQAOJ578MfCjG+cozb9XHmWiB9fXHCChB9RKFgG4j24ona
d63zleOCXe+tb6585ShypXrX092vHBkCC92fAWnZ/tdhIFqKV/8DiNbQkk15
DqSVLK8GvwTSBv4difP2vnI8W7Rn6XwgbffrWIXjvleOaqJJd0F0FO9X8S2W
rx0tMnlObgXSVRtkJXYA6bMnNugX2r92/JjVOr0GSL9t1dgIorXy9/79CaRt
tbr9fgHpNwHJT0D0orbl30D0ieinYb+B9DmBhXtA9MO7xQ9kHV47nsp/zSgP
pJ2yWvVB9IzHu01B9DO+y4Eg2tj43HstIG0l9X2TFZCODv8Y5QGk1Rd22XoB
6dY1X5N8gHT1U58bIPo8uzKXH5AGAC2Dpi8=
  "]]
}, Open  ]],

Cell[TextData[{
 "To check ourselves we can use ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 "\[CloseCurlyQuote]s builtin base conversion ..."
}], "Text",
 CellChangeTimes->{{3.58941099606122*^9, 3.589411014327265*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"6^^12", "+", "6^^34", "+", "6^^5"}]], "Input"],

Cell[BoxData["35"], "Output",
 CellChangeTimes->{3.5894110160333624`*^9, 3.654131903670381*^9, 
  3.6541353684073467`*^9, 3.654140096944295*^9, 3.6571406055385127`*^9, 
  3.6571639642023087`*^9, 3.6571641692863507`*^9, 3.657420781952824*^9, 
  3.6574214283859105`*^9, 3.657422627142133*^9, 3.6574227732676888`*^9, 
  3.6574235432049584`*^9, 3.6574243570798073`*^9, 3.657494275652339*^9, 
  3.657496591404402*^9, 3.6574969562142267`*^9, 3.657497005907537*^9, 
  3.657497230658077*^9, 3.657521022477254*^9, 3.657553303757956*^9, 
  3.6575812715739174`*^9, 3.6575851323616753`*^9, 3.6575904664390173`*^9, 
  3.657592913107205*^9}]
}, Open  ]],

Cell["\<\
Since everything checks lets see what this looks like in base-6.\
\>", "Text",
 CellChangeTimes->{{3.589411033689372*^9, 3.58941105217443*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BaseForm", "[", 
  RowBox[{
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"x", "=", "1"}], "3"], 
    RowBox[{"TriRow", "[", 
     RowBox[{"6", ",", "3", ",", "x"}], "]"}]}], ",", "6"}], "]"}]], "Input",
 CellChangeTimes->{{3.490225934256*^9, 3.490225938665*^9}, 
   3.6574220139697704`*^9, 3.6574222989039526`*^9, {3.657424500943576*^9, 
   3.657424514856843*^9}, {3.65742454491916*^9, 3.6574245480930634`*^9}}],

Cell[BoxData[
 TagBox[
  InterpretationBox[
   SubscriptBox["\<\"55\"\>", "\<\"6\"\>"],
   35,
   Editable->False],
  BaseForm[#, 6]& ]], "Output",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGDQAuLW14mPhBlfOUZY/pi5Fkh78aStANHPLhRtA9EeD6P2
Xet85ciy4IP1zZWvHBW16nY93f3KkUmtyP0ZkDYSehMGos/U638A0SumyKY8
B9JXVl8NfgmkRU51JM7b+8pxw9s9S+cD6aDa4xWO+1453mhPugui3e59Fd9i
+drxwArek1uB9KdDchI7gLTBuo36hfavHR/0t0+vAdK9JzU3gmhtp/1/fwJp
u789fr+AtLxO6hMQLSGx8huI5rd8EfYbSL+3XbwHRH/56nseRH+6PPEKiFZN
L30g6/DakWnhW0Z5IO01uV0fRPuv2msKohdoXgsE0Z8unH+vBaSPM/7eZAWk
2+58ivIA0vt4e2y9gHRPZlOKD5CeN9nvBojefUOZyw9IAwBoxbO5
  "]]
}, Open  ]],

Cell["Interestingly...", "Text",
 CellChangeTimes->{{3.490927203843*^9, 3.490927221521*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"tri", "[", "10", "]"}]], "Input",
 CellChangeTimes->{{3.490927223307*^9, 3.490927242928*^9}, 
   3.65742031627169*^9}],

Cell[BoxData["55"], "Output",
 CellChangeTimes->{3.490927243807*^9, 3.56192817887*^9, 
  3.5787104955435343`*^9, 3.5881732680146475`*^9, 3.588174395594141*^9, 
  3.588174519393222*^9, 3.588175745498351*^9, 3.5881766729363976`*^9, 
  3.5881806386922255`*^9, 3.5890757242886686`*^9, 3.5890783179220157`*^9, 
  3.5894097342520485`*^9, 3.589410539093083*^9, 3.6541319036983843`*^9, 
  3.654135368447852*^9, 3.654140096976299*^9, 3.657140605566514*^9, 
  3.6571639642693167`*^9, 3.657164169326356*^9, 3.65742078199833*^9, 
  3.6574214284239154`*^9, 3.6574226271811385`*^9, 3.657422773301193*^9, 
  3.6574235432744675`*^9, 3.657424357123313*^9, 3.657494275683343*^9, 
  3.657496591446907*^9, 3.6574969562597322`*^9, 3.6574970059455423`*^9, 
  3.6574972307280855`*^9, 3.6575210225107584`*^9, 3.657553303861969*^9, 
  3.6575812716054215`*^9, 3.657585132391179*^9, 3.657590466474022*^9, 
  3.6575929131332083`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"tri", "[", "x", "]"}], "\[Equal]", "35"}], ",", "x"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.657169648997686*^9, 3.6571696567831745`*^9}, 
   3.6574203173538275`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "-", 
        SqrtBox["281"]}], ")"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SqrtBox["281"]}], ")"}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6571696606651673`*^9, 3.657420782015832*^9, 
  3.657421428442418*^9, 3.657422627200141*^9, 3.657422773317695*^9, 
  3.6574235432914696`*^9, 3.6574243571448154`*^9, 3.657494275698344*^9, 
  3.65749659146791*^9, 3.657496956282736*^9, 3.6574970059650445`*^9, 
  3.657497230758089*^9, 3.657521022547263*^9, 3.657553303880972*^9, 
  3.6575812716214237`*^9, 3.657585132406681*^9, 3.657590466492024*^9, 
  3.6575929131467094`*^9}]
}, Open  ]],

Cell[TextData[{
 "So there may be a connection between ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{"base", ",", "root", ",", "sum"}], "}"}], TraditionalForm]]],
 " of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{"6", ",", "3", ",", 
     RowBox[{
      RowBox[{"BaseForm", "[", 
       RowBox[{
        RowBox[{
         UnderoverscriptBox["\[Sum]", 
          RowBox[{"x", "=", "1"}], "3"], 
         RowBox[{"TriRowSimple", "[", 
          RowBox[{"6", ",", "x"}], "]"}]}], ",", "6"}], "]"}], "=", 
      SubscriptBox["55", "6"]}]}], "}"}], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{"55", ",", 
     RowBox[{
      RowBox[{"qtri", "[", "55", "]"}], "=", "10"}], ",", " ", 
     "\[Ellipsis]"}], "}"}], TraditionalForm]]],
 ", similar to ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{"10", ",", "4", ",", "666"}], "}"}], TraditionalForm]]],
 " connects to ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{"666", ",", "36", ",", 
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"x", "=", "1"}], "36"], 
      RowBox[{"TriRowSimple", "[", 
       RowBox[{"666", ",", "x"}], "]"}]}]}], "}"}], TraditionalForm]]],
 ". Though it would seem the baseform plays an important part in whatever the \
relationship is. I tried summing various combinations to see if anything \
beneath base 55 would sum to a series of ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["primes", "2"], TraditionalForm]]],
 " (i.e. ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"x", "=", "1"}], "28424"], 
      SuperscriptBox[
       RowBox[{"Prime", "[", "x", "]"}], "2"]}], "=", "971511442813339"}], 
    ")"}], TraditionalForm]]],
 ", but in all instances it didn't work out. "
}], "Text",
 CellChangeTimes->{{3.4909272569560003`*^9, 3.490927406343*^9}, {
  3.490927445951*^9, 3.4909274701949997`*^9}, {3.490927634289*^9, 
  3.4909276447679996`*^9}, {3.4909277262349997`*^9, 3.490927770922*^9}, {
  3.5810802106421556`*^9, 3.5810802155464363`*^9}, {3.6541505965680776`*^9, 
  3.65415064430614*^9}, {3.6571645558444376`*^9, 3.6571646786265287`*^9}, {
  3.6571647217540054`*^9, 3.6571647595603065`*^9}, {3.6571660464087152`*^9, 
  3.657166069934703*^9}, {3.65716610393252*^9, 3.657166135205491*^9}, {
  3.657171687067988*^9, 3.657171696355667*^9}, {3.6574203183709564`*^9, 
  3.6574203183709564`*^9}, {3.657422483898944*^9, 3.6574224864142632`*^9}}],

Cell[TextData[{
 StyleBox["Conjecture:",
  FontWeight->"Bold",
  FontVariations->{"Underline"->True}],
 " That aside, this seems to hint that a triangular number, when summing its \
rows will result in another tri- number. However it must be the value in its \
baseform? At a later point it may be worthwhile to attempt to figure out how \
to use the difference between the base-10 and the base-x form to determine \
the integer digits in the native base that when transformed to base-10 \
without a conversion would then result in a tri- number (i.e. ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["55", "6"], "=", 
     SubscriptBox["35", "10"]}], ";"}], TraditionalForm]]],
 " ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["55", "10"], TraditionalForm]]],
 " is a triangular number but ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["35", "10"], TraditionalForm]]],
 " is not). This would then allow me to use an arbitrary number base and \
still be able to find tri- numbers. ",
 StyleBox["TODO / INVESTIGATE ME (see: ",
  FontWeight->"Bold"],
 StyleBox["\[OpenCurlyDoubleQuote]Sum of tri[n] rows in base form is equal to \
tri[n + 1]?\[CloseCurlyDoubleQuote]",
  FontWeight->"Bold",
  FontVariations->{"Underline"->True}],
 StyleBox[" below)",
  FontWeight->"Bold"]
}], "Text",
 CellChangeTimes->{{3.490225966545*^9, 3.4902259956099997`*^9}, {
   3.4902277083780003`*^9, 3.49022783767*^9}, {3.490927800868*^9, 
   3.490927804656*^9}, {3.588180700267748*^9, 3.5881807013658104`*^9}, {
   3.589411629069426*^9, 3.5894116734169626`*^9}, 3.657164828050003*^9, {
   3.657169638958411*^9, 3.6571697147140307`*^9}, {3.657169755060154*^9, 
   3.6571697554307013`*^9}, {3.6574203198671465`*^9, 3.6574203211763124`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"qtri", "[", "55", "]"}]], "Input",
 CellChangeTimes->{{3.588175126771962*^9, 3.5881751300301485`*^9}, 
   3.6574203225144825`*^9}],

Cell[BoxData["10"], "Output",
 CellChangeTimes->{3.588175130423171*^9, 3.588175745512352*^9, 
  3.588176672949398*^9, 3.5881806387072268`*^9, 3.589075724303669*^9, 
  3.589078317938017*^9, 3.5894097342690496`*^9, 3.589410539107084*^9, 
  3.6541319037113867`*^9, 3.6541353684673543`*^9, 3.654140096991801*^9, 
  3.657140605580515*^9, 3.657163964302821*^9, 3.657164169348859*^9, 
  3.6574207820358343`*^9, 3.6574214284964247`*^9, 3.657422627219643*^9, 
  3.6574227733747025`*^9, 3.6574235433084717`*^9, 3.6574243571663184`*^9, 
  3.6574942757143464`*^9, 3.6574965914894123`*^9, 3.6574969563057384`*^9, 
  3.657497005985047*^9, 3.657497230799595*^9, 3.657521022561265*^9, 
  3.6575533038969736`*^9, 3.657581271637426*^9, 3.657585132421183*^9, 
  3.6575904665100265`*^9, 3.6575929131597114`*^9}]
}, Open  ]],

Cell["\<\
Otherwise, as demonstrated below, it doesn't necessarily work.\
\>", "Text",
 CellChangeTimes->{{3.490226001199*^9, 3.4902260236280003`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"qtri", "[", "35", "]"}]], "Input",
 CellChangeTimes->{{3.588175142495861*^9, 3.588175144024949*^9}, 
   3.657420323683631*^9}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "1"}], "+", 
    SqrtBox["281"]}], ")"}]}]], "Output",
 CellChangeTimes->{3.588175145670043*^9, 3.588175745526353*^9, 
  3.5881766729623985`*^9, 3.5881806387232275`*^9, 3.58907572431767*^9, 
  3.5890783179540176`*^9, 3.589409734286051*^9, 3.5894105391210847`*^9, 
  3.6541319037238874`*^9, 3.654135368485857*^9, 3.6541400970073028`*^9, 
  3.657140605594516*^9, 3.6571639643373256`*^9, 3.6571641693683615`*^9, 
  3.6574207820513363`*^9, 3.6574214285159273`*^9, 3.6574226272386456`*^9, 
  3.6574227733902044`*^9, 3.657423543325474*^9, 3.657424357187321*^9, 
  3.6574942757303486`*^9, 3.657496591510415*^9, 3.6574969563282413`*^9, 
  3.6574970060045495`*^9, 3.6574972308315988`*^9, 3.6575210225757666`*^9, 
  3.657553303915476*^9, 3.657581271653428*^9, 3.6575851324356847`*^9, 
  3.6575904665275283`*^9, 3.6575929131727133`*^9}]
}, Open  ]],

Cell["\<\
Also let\[CloseCurlyQuote]s test in a higher number base that uses letters, \
like base 36.\
\>", "Text",
 CellChangeTimes->{{3.4902255419110003`*^9, 3.490225551054*^9}, 
   3.657166156834237*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"qtri", "[", "36", "]"}]], "Input",
 CellChangeTimes->{{3.5881751595598373`*^9, 3.588175161688959*^9}, 
   3.6574203424015083`*^9}],

Cell[BoxData["8"], "Output",
 CellChangeTimes->{3.5881751621819873`*^9, 3.5881757455393534`*^9, 
  3.5881766729763994`*^9, 3.5881806387382283`*^9, 3.5890757243316708`*^9, 
  3.5890783179700184`*^9, 3.5894097343300533`*^9, 3.589410539135085*^9, 
  3.6541319037378893`*^9, 3.6541353685058594`*^9, 3.6541400970223045`*^9, 
  3.6571406056085167`*^9, 3.65716396437083*^9, 3.657164169399865*^9, 
  3.657420782067339*^9, 3.6574214285349293`*^9, 3.657422627257648*^9, 
  3.657422773406707*^9, 3.657423543342476*^9, 3.6574243572083235`*^9, 
  3.6574942757458506`*^9, 3.657496591531918*^9, 3.657496956351244*^9, 
  3.657497006025052*^9, 3.6574972308601027`*^9, 3.6575210225917683`*^9, 
  3.6575533039334784`*^9, 3.65758127166943*^9, 3.6575851324501867`*^9, 
  3.6575904665450306`*^9, 3.6575929131852145`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"BaseForm", "[", 
    RowBox[{
     RowBox[{"TriRow", "[", 
      RowBox[{"36", ",", "8", ",", "x"}], "]"}], ",", "36"}], "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", "1", ",", " ", "8"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.490225354609*^9, 3.4902253649189997`*^9}, 
   3.4902254080559998`*^9, 3.490225509021*^9, 3.657422015117416*^9, 
   3.657422299925582*^9, {3.657424578851469*^9, 3.657424584025126*^9}, {
   3.657589553468585*^9, 3.657589558344204*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    InterpretationBox[
     SubscriptBox["\<\"z\"\>", "\<\"36\"\>"],
     35,
     Editable->False],
    BaseForm[#, 36]& ], ",", 
   TagBox[
    InterpretationBox[
     SubscriptBox["\<\"xy\"\>", "\<\"36\"\>"],
     1222,
     Editable->False],
    BaseForm[#, 36]& ], ",", 
   TagBox[
    InterpretationBox[
     SubscriptBox["\<\"uvw\"\>", "\<\"36\"\>"],
     40028,
     Editable->False],
    BaseForm[#, 36]& ], ",", 
   TagBox[
    InterpretationBox[
     SubscriptBox["\<\"qrst\"\>", "\<\"36\"\>"],
     1249085,
     Editable->False],
    BaseForm[#, 36]& ], ",", 
   TagBox[
    InterpretationBox[
     SubscriptBox["\<\"lmnop\"\>", "\<\"36\"\>"],
     36329065,
     Editable->False],
    BaseForm[#, 36]& ], ",", 
   TagBox[
    InterpretationBox[
     SubscriptBox["\<\"fghijk\"\>", "\<\"36\"\>"],
     934683680,
     Editable->False],
    BaseForm[#, 36]& ], ",", 
   TagBox[
    InterpretationBox[
     SubscriptBox["\<\"89abcde\"\>", "\<\"36\"\>"],
     17975779682,
     Editable->False],
    BaseForm[#, 36]& ], ",", 
   TagBox[
    InterpretationBox[
     SubscriptBox["\<\"1234567\"\>", "\<\"36\"\>"],
     2302946863,
     Editable->False],
    BaseForm[#, 36]& ]}], "}"}]], "Output",
 CellChangeTimes->{{3.490225349225*^9, 3.49022536571*^9}, 3.490225408574*^9, 
   3.49022551015*^9, 3.4905407521940002`*^9, 3.4905408676940002`*^9, 
   3.4905409797130003`*^9, 3.561928178975*^9, 3.5787104956425395`*^9, 
   3.5881732683046637`*^9, 3.588174395703147*^9, 3.588174519457226*^9, 
   3.5881757455533543`*^9, 3.5881766729894004`*^9, 3.588180638755229*^9, 
   3.5890757243456717`*^9, 3.5890783179870195`*^9, 3.589409734346054*^9, 
   3.589410539149086*^9, 3.6541319037513914`*^9, 3.6541353685258617`*^9, 
   3.654140097038807*^9, 3.6571406056235175`*^9, 3.657163964402334*^9, 
   3.657164169417368*^9, 3.6574207820818405`*^9, 3.657421428552932*^9, 
   3.657422627294653*^9, 3.6574227734232087`*^9, 3.657423543358478*^9, 
   3.6574243572293262`*^9, 3.6574245846001987`*^9, 3.6574942758073587`*^9, 
   3.6574965915544205`*^9, 3.657496956373747*^9, 3.6574970060440545`*^9, 
   3.657497230940613*^9, 3.6575210226067705`*^9, 3.6575533039509807`*^9, 
   3.657581271685932*^9, 3.6575851324646883`*^9, 3.6575895614986043`*^9, 
   3.657590466562533*^9, 3.6575929131997166`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BaseForm", "[", 
  RowBox[{
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"x", "=", "1"}], "8"], 
    RowBox[{"TriRow", "[", 
     RowBox[{"36", ",", "8", ",", "x"}], "]"}]}], ",", "36"}], "]"}]], "Input",\

 CellChangeTimes->{{3.490227537584*^9, 3.4902275791070004`*^9}, 
   3.6574220168296337`*^9, 3.6574223009137077`*^9}],

Cell[BoxData[
 TagBox[
  InterpretationBox[
   SubscriptBox["\<\"9rgbbfg\"\>", "\<\"36\"\>"],
   21251029660,
   Editable->False],
  BaseForm[#, 36]& ]], "Output",
 CellChangeTimes->{{3.490227548025*^9, 3.490227580117*^9}, 3.490540752479*^9, 
   3.490540867876*^9, 3.4905409797460003`*^9, 3.561928179001*^9, 
   3.5787104956675415`*^9, 3.588173268379668*^9, 3.588174395732149*^9, 
   3.5881745194732265`*^9, 3.588175745568355*^9, 3.5881766730024014`*^9, 
   3.5881806387702303`*^9, 3.5890757243606725`*^9, 3.58907831800502*^9, 
   3.589409734364055*^9, 3.589410539163087*^9, 3.654131903764393*^9, 
   3.654135368545864*^9, 3.6541400970548086`*^9, 3.6571406056375184`*^9, 
   3.657163964433838*^9, 3.6571641694353695`*^9, 3.6574207820968423`*^9, 
   3.657421428571934*^9, 3.657422627326657*^9, 3.657422773440211*^9, 
   3.65742354337498*^9, 3.657424357251829*^9, 3.6574942758228607`*^9, 
   3.6574965915764236`*^9, 3.65749695639625*^9, 3.657497006063057*^9, 
   3.657497230964616*^9, 3.6575210226222725`*^9, 3.657553303968483*^9, 
   3.657581271702434*^9, 3.6575851324791903`*^9, 3.657589573443621*^9, 
   3.657590466580535*^9, 3.657592913212718*^9}]
}, Open  ]],

Cell[TextData[{
 "Note this is compressible to 7 digits, one less than 8. As a caveat since \
base-10 ",
 StyleBox["isn't",
  FontWeight->"Bold",
  FontVariations->{"Underline"->True}],
 " dense enough to contain ",
 Cell[BoxData[
  FormBox["rgbbfg", TraditionalForm]]],
 " there is probably ",
 StyleBox["not",
  FontWeight->"Bold"],
 " a reverse map. Unless we can convert ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["b", "36"], TraditionalForm]]],
 " to something like 11 and concatenate that way (i.e. / bb \[Implies] 1111) \
the best we can probably do is test in an upwards direction."
}], "Text",
 CellChangeTimes->{{3.490227891743*^9, 3.490227978406*^9}, {3.490230001851*^9,
   3.490230007523*^9}, {3.490231929941*^9, 3.490231945703*^9}, {
  3.5891168982686853`*^9, 3.5891169008928356`*^9}, {3.657166307328848*^9, 
  3.6571663945419226`*^9}, {3.657169790810194*^9, 3.657169797349524*^9}, {
  3.6571699116020327`*^9, 3.65716997545014*^9}, {3.6571707894430037`*^9, 
  3.6571708430998173`*^9}, {3.6571708739017286`*^9, 3.657170933341777*^9}, {
  3.6571822677768574`*^9, 3.6571822868599486`*^9}, {3.657182371380783*^9, 
  3.6571824251828604`*^9}, {3.6571824911946363`*^9, 3.6571826395621223`*^9}, {
  3.657185077340555*^9, 3.6571850884921927`*^9}, {3.6571930818753047`*^9, 
  3.6571930820273237`*^9}, {3.65719523282144*^9, 3.657195235291254*^9}, {
  3.657228907863224*^9, 3.657228914327594*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BaseForm", "[", 
  RowBox[{
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"x", "=", "1"}], "8"], 
    RowBox[{"TriRow", "[", 
     RowBox[{"36", ",", "8", ",", "x"}], "]"}]}], ",", "10"}], "]"}]], "Input",\

 CellChangeTimes->{{3.490227606671*^9, 3.490227607126*^9}, {
   3.589413600999214*^9, 3.5894136143529778`*^9}, 3.6574220200355406`*^9, 
   3.657422301829324*^9}],

Cell[BoxData[
 TagBox[
  InterpretationBox["\<\"21251029660\"\>",
   21251029660,
   Editable->False],
  BaseForm[#, 10]& ]], "Output",
 CellChangeTimes->{{3.490227603623*^9, 3.490227607409*^9}, 3.490540752645*^9, 
   3.490540868165*^9, 3.490540979778*^9, 3.561928179034*^9, 
   3.5787104956915426`*^9, 3.5881732684556723`*^9, 3.5881743957591505`*^9, 
   3.5881745194892273`*^9, 3.5881757455823555`*^9, 3.588176673015402*^9, 
   3.588180638784231*^9, 3.5890757243756733`*^9, 3.589078318021021*^9, 
   3.589409734382056*^9, 3.589410539177088*^9, {3.5894136035953627`*^9, 
   3.5894136146659956`*^9}, 3.654131903777895*^9, 3.6541353685653667`*^9, 
   3.6541400970703106`*^9, 3.657140605652519*^9, 3.657163964465342*^9, 
   3.657164169454872*^9, 3.6574207821138444`*^9, 3.6574214285894365`*^9, 
   3.6574226273471594`*^9, 3.6574227734737153`*^9, 3.6574235433914824`*^9, 
   3.6574243572738323`*^9, 3.6574942758388624`*^9, 3.657496591597926*^9, 
   3.6574969564187527`*^9, 3.6574970060830593`*^9, 3.657497230993619*^9, 
   3.657521022636774*^9, 3.657553303987985*^9, 3.657581271718936*^9, 
   3.6575851324936924`*^9, 3.6575904665980377`*^9, 3.6575929132257195`*^9}]
}, Open  ]],

Cell[TextData[{
 "To explain this in another way, it is easy to see ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["55", "6"], "~", 
    SubscriptBox["55", "10"]}], TraditionalForm]]],
 " and test if 55 in base-10 is a triangular number, but the question is \
whether there is a way to determine if ",
 Cell[BoxData[
  FormBox[
   RowBox[{"9", 
    SubscriptBox["rgbbfg", "36"]}], TraditionalForm]]],
 " is triangular when dropped to a lower number base that doesn\
\[CloseCurlyQuote]t contain the number \[OpenCurlyDoubleQuote]r\
\[CloseCurlyDoubleQuote]. I\[CloseCurlyQuote]m doubtful (how would this be \
expressed?), but maybe there is something that could done algorithmically. \
For now we can at least test whether ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["21251029660", "10"], TraditionalForm]]],
 " is  triangular when we drop the ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["base", "10"], TraditionalForm]]],
 " and convert to ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["base", "36"], TraditionalForm]]],
 ". "
}], "Text",
 CellChangeTimes->{
  3.657182644331395*^9, {3.6571826817385345`*^9, 3.6571826840146646`*^9}, {
   3.657185104683119*^9, 3.6571851588542175`*^9}, {3.6571930959395905`*^9, 
   3.65719314137136*^9}, {3.6571952513617945`*^9, 3.6571952818671684`*^9}, {
   3.6574259095909514`*^9, 3.6574259473062406`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"qtri", "[", "21251029660", "]"}]], "Input",
 CellChangeTimes->{{3.6571824399087024`*^9, 3.6571824429708776`*^9}, 
   3.6574203469035797`*^9}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "1"}], "+", 
    SqrtBox["170008237281"]}], ")"}]}]], "Output",
 CellChangeTimes->{3.6571824437539225`*^9, 3.657420782130847*^9, 
  3.6574214286064386`*^9, 3.657422627366662*^9, 3.657422773491217*^9, 
  3.6574235434084845`*^9, 3.6574243572958345`*^9, 3.657494275853364*^9, 
  3.657496591619429*^9, 3.657496956440756*^9, 3.6574970061030617`*^9, 
  3.6574972310221233`*^9, 3.657521022651276*^9, 3.6575533040084877`*^9, 
  3.657581271734938*^9, 3.657585132508194*^9, 3.65759046661504*^9, 
  3.6575929132392216`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"qtri", "[", "36^^21251029660", "]"}]], "Input",
 CellChangeTimes->{{3.65718233793487*^9, 3.6571823593750963`*^9}, 
   3.657420348498782*^9}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "1"}], "+", 
    SqrtBox["59359304463993793"]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.6571823479064407`*^9, 3.6571823611892*^9}, 
   3.6574207821453485`*^9, 3.6574214286239405`*^9, 3.6574226273861647`*^9, 
   3.6574227735072193`*^9, 3.6574235434254866`*^9, 3.657424357318838*^9, 
   3.657494275868866*^9, 3.657496591640432*^9, 3.6574969564667587`*^9, 
   3.6574970061230645`*^9, 3.657497231046126*^9, 3.657521022666278*^9, 
   3.6575533040269904`*^9, 3.65758127175144*^9, 3.657585132522696*^9, 
   3.6575904666330423`*^9, 3.657592913252723*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FromDigits", "[", 
  RowBox[{
   RowBox[{"IntegerDigits", "[", 
    RowBox[{
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"x", "=", "1"}], "8"], 
      RowBox[{"TriRow", "[", 
       RowBox[{"36", ",", "8", ",", "x"}], "]"}]}], ",", "36"}], "]"}], ",", 
   "36"}], "]"}]], "Input",
 CellChangeTimes->{{3.6571829783014965`*^9, 3.657182978302497*^9}, {
   3.6571830195238543`*^9, 3.6571831067358427`*^9}, 3.6574220212982006`*^9, 
   3.6574223028659554`*^9}],

Cell[BoxData["21251029660"], "Output",
 CellChangeTimes->{{3.657183056106947*^9, 3.657183107054861*^9}, 
   3.65742078215985*^9, 3.6574214286414433`*^9, 3.657422627406167*^9, 
   3.6574227735242214`*^9, 3.657423543441989*^9, 3.657424357340841*^9, 
   3.657494275884368*^9, 3.6574965916629343`*^9, 3.657496956492262*^9, 
   3.657497006142067*^9, 3.6574972310696287`*^9, 3.6575210227017827`*^9, 
   3.6575533040464926`*^9, 3.6575812717674427`*^9, 3.657585132537198*^9, 
   3.65758961840283*^9, 3.657590466650044*^9, 3.657592913266225*^9}]
}, Open  ]],

Cell["Neither unfortunately is a triangular number.", "Text",
 CellChangeTimes->{{3.657182700820626*^9, 3.657182722025839*^9}}],

Cell[TextData[{
 "One thing we can do though is look at  ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"x", "=", "1"}], "8"], 
    RowBox[{"TriRow", "[", 
     RowBox[{"36", ",", "8", ",", "x"}], "]"}]}], TraditionalForm]]],
 " in base-6 since each base 36 digit can be represented as two base 6 digits."
}], "Text",
 CellChangeTimes->{{3.4902261600439997`*^9, 3.490226189365*^9}, {
  3.6571827858434887`*^9, 3.657182830326033*^9}, {3.657185187592861*^9, 
  3.6571852013046455`*^9}, {3.6571953050111074`*^9, 3.657195318083267*^9}, {
  3.6574220226793766`*^9, 3.6574220226793766`*^9}, {3.6574223040391045`*^9, 
  3.6574223040391045`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"BaseForm", "[", 
    RowBox[{
     RowBox[{"TriRow", "[", 
      RowBox[{"36", ",", "8", ",", "x"}], "]"}], ",", "6"}], "]"}], ",", " ", 
   
   RowBox[{"{", 
    RowBox[{"x", ",", " ", "1", ",", " ", "8"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.490225615433*^9, 3.657422023874028*^9, 3.6574223064979167`*^9, {
   3.657424607073553*^9, 3.657424615761156*^9}, {3.6575896365846395`*^9, 
   3.6575896416182785`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    InterpretationBox[
     SubscriptBox["\<\"55\"\>", "\<\"6\"\>"],
     35,
     Editable->False],
    BaseForm[#, 6]& ], ",", 
   TagBox[
    InterpretationBox[
     SubscriptBox["\<\"5354\"\>", "\<\"6\"\>"],
     1222,
     Editable->False],
    BaseForm[#, 6]& ], ",", 
   TagBox[
    InterpretationBox[
     SubscriptBox["\<\"505152\"\>", "\<\"6\"\>"],
     40028,
     Editable->False],
    BaseForm[#, 6]& ], ",", 
   TagBox[
    InterpretationBox[
     SubscriptBox["\<\"42434445\"\>", "\<\"6\"\>"],
     1249085,
     Editable->False],
    BaseForm[#, 6]& ], ",", 
   TagBox[
    InterpretationBox[
     SubscriptBox["\<\"3334354041\"\>", "\<\"6\"\>"],
     36329065,
     Editable->False],
    BaseForm[#, 6]& ], ",", 
   TagBox[
    InterpretationBox[
     SubscriptBox["\<\"232425303132\"\>", "\<\"6\"\>"],
     934683680,
     Editable->False],
    BaseForm[#, 6]& ], ",", 
   TagBox[
    InterpretationBox[
     SubscriptBox["\<\"12131415202122\"\>", "\<\"6\"\>"],
     17975779682,
     Editable->False],
    BaseForm[#, 6]& ], ",", 
   TagBox[
    InterpretationBox[
     SubscriptBox["\<\"1020304051011\"\>", "\<\"6\"\>"],
     2302946863,
     Editable->False],
    BaseForm[#, 6]& ]}], "}"}]], "Output",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGDQBGJVtsgSEcZXjm8CFWatBdKT3k5YAaKVb1duA9HbPifu
u9b5ynGh6Q/rmytfOdYxT9z1dPcrxyiDSvdnQPqK1ocwEB0lavwBRK99oZDy
HEg3zL4Z/BJIm1X0JM7b+8qx2vzg0vlAWuTomQrHfa8cg/LT7oJoueCf4lss
XztG7BY6uRVIx55XktgBpINjtuoX2r921HrWP70GSOsY6W8E0YJbj/79CaRF
xKb6/QLSovNzn4DoOb4bv4Hor6vfhf0G0llzVu8B0SJ8HHdB9JXzNQ9kHV47
vnr2lVEeSH+pmKAPotfoHzUF0cc8HgeC6Gfvr73XAtJf/zNutgLSJzh/RnkA
6XmrJ9p6AemIvxGFPkC6KCL0Bohu/azB5QekAcUgrKs=
  "]]
}, Open  ]],

Cell[TextData[{
 "How fascinating. Base 36's highest number is the sum of all values in base \
6. I suppose this makes sense since all base-36 numbers can be represented by \
two base 6 numbers. The last of the square ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      SuperscriptBox["x", "2"], "=", "36"}], ",", " ", 
     RowBox[{"x", "=", "6"}]}], ")"}], TraditionalForm]]],
 " will thus contain all the information from the sum of all the rows of the \
square root as a base ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", "x", ")"}], TraditionalForm]]],
 ". "
}], "Text",
 CellChangeTimes->{{3.4902262533389997`*^9, 3.490226267341*^9}, {
  3.490226656526*^9, 3.4902268040109997`*^9}, {3.490226898836*^9, 
  3.490226900024*^9}, {3.561928032929*^9, 3.5619280334639997`*^9}, {
  3.6571931759712534`*^9, 3.6571931853909492`*^9}, {3.6574260119104443`*^9, 
  3.657426023195877*^9}}],

Cell["\<\
By induction the algorithm appears to work across all number bases.\
\>", "Text",
 CellChangeTimes->{{3.490223571586*^9, 3.490223575448*^9}, {3.490224156547*^9,
   3.4902241621029997`*^9}, {3.49022559569*^9, 3.490225600205*^9}, {
  3.490226627809*^9, 3.490226628035*^9}, {3.561928074676*^9, 
  3.5619281133640003`*^9}, {3.5894113581249285`*^9, 3.5894113827383366`*^9}, {
  3.5894117923627663`*^9, 3.589411796290991*^9}, {3.589413644866723*^9, 
  3.5894136676310253`*^9}, {3.657182896920842*^9, 3.65718292275832*^9}, {
  3.6571932092049737`*^9, 3.657193217495026*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"TriRow", "[", 
    RowBox[{"666", ",", "36", ",", "x"}], "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", "1", ",", " ", "36"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.490222504384*^9, 3.490222551227*^9}, 
   3.6574220250656796`*^9, 3.657422307501544*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "665", ",", "442222", ",", "293187848", ",", "194079697355", ",", 
   "128271889550815", ",", "84641715481334060", ",", "55759601491029691682", 
   ",", "36670241839868247700033", ",", "24073490740048975892825225", ",", 
   "15774765992148192908827531130", ",", "10316852332055982696056400527380", 
   ",", "6733603524497648790161553681697367", ",", 
   "4385431324493278947222830208338546243", ",", 
   "2849584819097618041092027641430640808920", ",", 
   "1847079681967663021066848337731729522658070", ",", 
   "1194106667305984109839486945363382579368752125", ",", 
   "769766290749905637720167837703157936673771163277", ",", 
   "494676179573881460848574694657870710772050229025478", ",", 
   "316808652040119400132391615709681863412150452431542440", ",", 
   "202129272523611052319775362166839300027528717039177795635", ",", 
   "128418598388963609054810051693775865289563160990927943592295", ",", 
   "81201308827929414752911623261824411132203723663216401406393412", ",", 
   "51068359525077103675123128250360695655975618961239943015684161738", ",", 
   "31918518440452959629360214316185546579287422097776258994078432769785", 
   ",", "198057082853380995667278490474572670420382371516473679960889780794078\
25", ",", 
   "12184871124803260515524205639758145143531522255872883866453777719146231890\
", ",", "741954541806142250802484191329408491129697076926255214725030351475763\
9291772", ",", 
   "44610041910318268842474826553704645606240199436207631340093706113241036425\
79023", ",", 
   "26396467272783676729531571411455183203523967596547076166684576428257956543\
65834955", ",", 
   "15296939052743720405842435932278256386331946403618118865279504445138824477\
24747558640", ",", 
   "86165263796571484409662508608791523826477022828171538206318961379875303953\
2031111454910", ",", 
   "46584078285913947593348010717639941419633871669141455935812835548485456313\
6420041115362357", ",", 
   "23606056165468648972975958840836114698672328356788831845004725443066886976\
5235220459116501333", ",", 
   "10630891686581492683509722641578486271788924307454218036350827995334367230\
4304135260298905681950", ",", 
   "35900212313704262512646894201438567334952239100857996240577614631094513975\
187901798324710335912080", ",", 
   "99868599477578375311903560996441609979024231407090035905871481326214219570\
9249513290349487645355"}], "}"}]], "Output",
 CellChangeTimes->{{3.4902225338310003`*^9, 3.490222552116*^9}, 
   3.490540756126*^9, 3.490540871648*^9, 3.490540980255*^9, 
   3.5619281795480003`*^9, 3.578710496063564*^9, 3.5881732689447002`*^9, 
   3.588174395858156*^9, 3.5881745195212293`*^9, 3.5881757456113577`*^9, 
   3.5881766730414033`*^9, 3.5881806388152328`*^9, 3.589075724405675*^9, 
   3.5890783180540233`*^9, 3.589409734417058*^9, 3.58941053921609*^9, 
   3.654131903804398*^9, 3.654135368616373*^9, 3.654140097103815*^9, 
   3.657140605682521*^9, 3.6571639645293503`*^9, 3.6571641694968777`*^9, 
   3.657420782196355*^9, 3.6574214286759477`*^9, 3.657422627445672*^9, 
   3.6574227735572257`*^9, 3.6574235434754925`*^9, 3.657424357391347*^9, 
   3.6574942759163723`*^9, 3.6574965917074404`*^9, 3.657496956538268*^9, 
   3.657497006181572*^9, 3.6574972311366377`*^9, 3.6575210227322865`*^9, 
   3.6575533040839977`*^9, 3.657581271796946*^9, 3.6575851325677013`*^9, 
   3.6575904666845484`*^9, 3.65759291330523*^9}]
}, Open  ]],

Cell["\<\
Unfortunately since 666 isn't a perfect square of any number...\
\>", "Text",
 CellChangeTimes->{{3.49022475951*^9, 3.49022476435*^9}, {3.49022526966*^9, 
  3.490225288113*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{"666", "\[Equal]", 
   SuperscriptBox["x", "2"]}], "]"}]], "Input",
 CellChangeTimes->{{3.490224623461*^9, 3.490224688481*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{
      RowBox[{"-", "3"}], " ", 
      SqrtBox["74"]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"3", " ", 
      SqrtBox["74"]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.4902246320889997`*^9, 3.490224688909*^9}, 
   3.4905407562200003`*^9, 3.490540871737*^9, 3.4905409802790003`*^9, 
   3.561928179573*^9, 3.578710496088565*^9, 3.5881732690197043`*^9, 
   3.5881743958861575`*^9, 3.58817451953823*^9, 3.5881757456273584`*^9, 
   3.588176673055404*^9, 3.5881806388312335`*^9, 3.589075724422676*^9, 
   3.589078318071024*^9, 3.589409734434059*^9, 3.5894105392310905`*^9, 
   3.6541319038173995`*^9, 3.654135368636876*^9, 3.654140097119817*^9, 
   3.6571406056975217`*^9, 3.6571639645618544`*^9, 3.65716416951688*^9, 
   3.657420782213857*^9, 3.6574214286939497`*^9, 3.657422627466174*^9, 
   3.657422773574228*^9, 3.6574235434929953`*^9, 3.65742435741585*^9, 
   3.657494275932374*^9, 3.6574965917294436`*^9, 3.657496956562771*^9, 
   3.657497006200074*^9, 3.657497231166641*^9, 3.657521022748288*^9, 
   3.6575533041045*^9, 3.657581271811948*^9, 3.6575851325837035`*^9, 
   3.6575904667030506`*^9, 3.6575929133192315`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"3", " ", 
   SqrtBox["74"]}], "]"}]], "Input",
 CellChangeTimes->{{3.4902246954230003`*^9, 3.49022469685*^9}}],

Cell[BoxData["25.80697580112788`"], "Output",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGBQB+JqESV3YcZXjiWTO2atBdL6d3+sANG6mzq3gehj3sX7
rnW+clSbxWxzc+Urx1X/F+16uvuV4yyLWvdnQNppz8cwEM3SZvIBRE+0UEp5
DqR7ZG4HvwTS1wT7EuftfeX48sShpfOBtFj+uQrHfa8cT11Pvwuie/t+iW+x
fO3Ixyh6ciuQXhihIrEDSJ86sk2/0P6148wvk6bXAOkJooYbQfQOv+N/fwJp
8yPT/H4B6VVd+U9AdPTrTd9A9LPAD2G/gfSsb2v3gOjzPnUPZB1eO3rN/sUo
D6QPHZqkD6LXMh03BfMlnwWC6Ac5N95rAemi58ybrYC0Xt6vKA8gPUNjsq0X
kF7DFX7DB0jb7NLi8gPSAKVgpUA=
  "]]
}, Open  ]],

Cell[TextData[{
 "The best we can do to see that this is working correctly is try base 25 or \
26 (e.g. ",
 Cell[BoxData[
  FormBox[
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"BaseForm", "[", 
      RowBox[{
       RowBox[{"TriRow", "[", 
        RowBox[{"666", ",", "36", ",", "x"}], "]"}], ",", "25"}], "]"}], ",", 
     " ", 
     RowBox[{"{", 
      RowBox[{"x", ",", " ", "1", ",", " ", "36"}], "}"}]}], "]"}], 
   TraditionalForm]]],
 ").\n\nSo the sum of all the rows of base-666 is ..."
}], "Text",
 CellChangeTimes->{{3.4902252905109997`*^9, 3.490225303932*^9}, {
  3.5894118465888677`*^9, 3.5894118568354535`*^9}, {3.5894136873431525`*^9, 
  3.5894137138986716`*^9}, {3.6574220263753457`*^9, 3.657422026375846*^9}, {
  3.6574223086001835`*^9, 3.6574223086001835`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  UnderoverscriptBox["\[Sum]", 
   RowBox[{"x", "=", "1"}], "36"], 
  RowBox[{"TriRow", "[", 
   RowBox[{"666", ",", "36", ",", "x"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.4902235931470003`*^9, 3.490223610408*^9}, 
   3.657422028039557*^9, 3.6574223096553173`*^9}],

Cell[BoxData[\
"37005443752611483714216385166550857181329086284892731078593232926279977894581\
784762614450464857290"], "Output",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGDQAOLriy2OCjG+cpTST7wqDKT17z6YtRZIK9/2XQmikwR6
toHomP6yfdc6XznuiWG1ubnyleMj1hW7nu5+5Wjwu879GZA+d+lTGIj+3Wz6
AUR/lVVOeQ6ktyjdCX4JpCcZ9CfO2/vKseT+4aXzgTTLtPMVjvteOU44m3EX
RAv8/CW+xfK14445oie3gujbKhI7gPQ6++36hfavHad+mjy9Bki37jXcCKLP
XTz+9yeQrvef7vcLSOdpFTwB0V1Fm7+BaLGbH8J+A+lX19ftAdFzDtc9kHV4
7Vjg/ZtRHkjXdE/WB9H2s46bguho9ueBIPrY8xvvtYC0aTvLZisg/ejBrygP
IJ06f7KtF5D+OjX8hg+Q5jDU5vID0gA7DavA
  "]]
}, Open  ]],

Cell[TextData[{
 "If the \[OpenCurlyDoubleQuote]prime-square-sum\[CloseCurlyDoubleQuote] \
theory is correct this number should be a sum of primes. Since a base 666 \
system could contain 665 in 1 character at most this would be 15 characters \
long natively ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["log", "666"], "(", 
    SubscriptBox["p", "o"], ")"}], TraditionalForm]]],
 "."
}], "Text",
 CellChangeTimes->{{3.490222729519*^9, 3.490222737273*^9}, {3.490231807742*^9,
    3.490231839836*^9}, {3.5891170943469005`*^9, 3.589117094662918*^9}, {
   3.5891171408225584`*^9, 3.5891171410485716`*^9}, {3.589117408075845*^9, 
   3.589117409779942*^9}, {3.5891181748066993`*^9, 3.589118179351959*^9}, {
   3.591316706686952*^9, 3.5913167365236588`*^9}, 3.5921723430824623`*^9, {
   3.6571829356110554`*^9, 3.657182939102255*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubscriptBox["p", "0"], "=", 
  "370054437526114837142163851665508571813290862848927310785932329262799778945\
81784762614450464857290"}]], "Input",
 CellChangeTimes->{{3.4902236306610003`*^9, 3.490223632722*^9}}],

Cell[BoxData[\
"37005443752611483714216385166550857181329086284892731078593232926279977894581\
784762614450464857290"], "Output",
 CellChangeTimes->{3.657420782259363*^9, 3.6574214287459564`*^9, 
  3.657422627524682*^9, 3.657422773624234*^9, 3.6574235435430017`*^9, 
  3.6574243574878592`*^9, 3.65749427597688*^9, 3.6574965918744617`*^9, 
  3.6574969566357803`*^9, 3.6574970062565813`*^9, 3.6574972312471514`*^9, 
  3.6575210227937946`*^9, 3.6575533041615076`*^9, 3.657581271854453*^9, 
  3.6575851326287093`*^9, 3.6575904667545576`*^9, 3.6575929133837395`*^9}]
}, Open  ]],

Cell["\<\
One of the major questions is does the sum of the rows of a tri-sequence \
always result in another triangular pattern?\
\>", "Text",
 CellChangeTimes->{{3.490224242068*^9, 3.490224251957*^9}, {3.490225848459*^9,
   3.49022586237*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"n", 
     FractionBox[
      RowBox[{"(", 
       RowBox[{"n", "+", "1"}], ")"}], "2"]}], "\[Equal]", 
    SubscriptBox["p", "0"]}], ",", "n"}], "]"}]], "Input",
 CellChangeTimes->{{3.490224253837*^9, 3.490224273605*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"n", "\[Rule]", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "-", 
        RowBox[{
        "\[Sqrt]", 
         "29604355002089186971373108133240685745063269027914184862874586341023\
9823156654278100915603718858321"}]}], ")"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", "\[Rule]", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{
        "\[Sqrt]", 
         "29604355002089186971373108133240685745063269027914184862874586341023\
9823156654278100915603718858321"}]}], ")"}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.490224274692*^9, 3.490224293918*^9}, 3.490540759179*^9, 
   3.490540874641*^9, 3.490540980432*^9, 3.561928179802*^9, 
   3.5787104962175727`*^9, 3.5881732694037266`*^9, 3.5881743960241656`*^9, 
   3.588174519621235*^9, 3.588175745702363*^9, 3.588176673125408*^9, 
   3.5881806389102383`*^9, 3.5890757245226817`*^9, 3.5890783181550293`*^9, 
   3.589409734524064*^9, 3.589410539303095*^9, 3.654131903870406*^9, 
   3.654135368715386*^9, 3.654140097185325*^9, 3.657140605756525*^9, 
   3.6571639646873703`*^9, 3.6571641695963907`*^9, 3.6574207822778654`*^9, 
   3.657421428763959*^9, 3.657422627545184*^9, 3.6574227736417365`*^9, 
   3.6574235435610037`*^9, 3.6574243575153627`*^9, 3.657494275993382*^9, 
   3.657496591895464*^9, 3.6574969566612835`*^9, 3.6574970062765837`*^9, 
   3.657497231276655*^9, 3.6575210228107967`*^9, 3.6575533041820097`*^9, 
   3.657581271868955*^9, 3.6575851326452117`*^9, 3.65759046677306*^9, 
   3.6575929134747515`*^9}]
}, Open  ]],

Cell[TextData[{
 "In this case no. However as established earlier it does appear to give a \
tri-number when in baseform. Recall, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"x", "=", "1"}], "3"], 
     RowBox[{"TriRow", "[", 
      RowBox[{"6", ",", "3", ",", "x"}], "]"}]}], " ", "=", " ", "35"}], 
   TraditionalForm]]],
 ". However when the number is expressed in base-6 form we get, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"BaseForm", "[", 
     RowBox[{
      RowBox[{
       UnderoverscriptBox["\[Sum]", 
        RowBox[{"x", "=", "1"}], "3"], 
       RowBox[{"TriRow", "[", 
        RowBox[{"6", ",", "3", ",", "x"}], "]"}]}], ",", "6"}], "]"}], " ", 
    "=", " ", 
    SubscriptBox["55", "6"]}], TraditionalForm]]],
 ". And ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"tri", "[", "10", "]"}], "=", "55"}], TraditionalForm]]],
 ". So even though ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["35", "10"], TraditionalForm]]],
 " isn't triangular ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["55", "6"], TraditionalForm]]],
 " (dropping the 6 and treating it as though it were natively base-10) does \
give us a triangular value. This may be purely coincidental however. Also \
recall that it reveals a problem. Base-10 can encapsulate base-6. \
Unfortunately though base-10 cannot encapsulate base-666. So there doesn\
\[CloseCurlyQuote]t appear to be an easy way to show ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["p", "0"], TraditionalForm]]],
 " is triangular when converted to some other number base (see: ",
 StyleBox["\[OpenCurlyDoubleQuote]Sum of tri[n] rows in base form is equal to \
tri[n + 1]?\[CloseCurlyDoubleQuote]",
  FontWeight->"Bold",
  FontVariations->{"Underline"->True}],
 ")."
}], "Text",
 CellChangeTimes->{{3.490224301144*^9, 3.4902243023059998`*^9}, {
   3.5619263017609997`*^9, 3.5619263391619997`*^9}, {3.561926396332*^9, 
   3.561926660524*^9}, {3.5619282117860003`*^9, 3.5619282528570004`*^9}, {
   3.5787102868815994`*^9, 3.5787103492371655`*^9}, {3.57910657358423*^9, 
   3.579106575125318*^9}, 3.5894114907655153`*^9, {3.589411897248765*^9, 
   3.5894118974467764`*^9}, {3.589415973740927*^9, 3.589415976741099*^9}, {
   3.5894188698005724`*^9, 3.589418889593704*^9}, {3.5894189217135415`*^9, 
   3.589418938536504*^9}, {3.657182198449892*^9, 3.657182198892917*^9}, {
   3.6571932678114157`*^9, 3.6571932683939896`*^9}, {3.6572291468938956`*^9, 
   3.6572291510161314`*^9}, {3.65742034981995*^9, 3.657420352914843*^9}, {
   3.6574220292102056`*^9, 3.657422030378354*^9}, {3.6574223108519697`*^9, 
   3.657422311920105*^9}}],

Cell[TextData[{
 "Trying to figure out if the ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["p", "0"], TraditionalForm]]],
 " value is a sum of square primes is going to take a long time to calculate \
..."
}], "Text",
 CellChangeTimes->{{3.4902241964110003`*^9, 3.490224200842*^9}, {
  3.5619282799230003`*^9, 3.5619283368929996`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  UnderoverscriptBox["\[Sum]", 
   RowBox[{"x", "=", "1"}], "7"], 
  SuperscriptBox[
   RowBox[{"Prime", "[", "x", "]"}], "2"]}]], "Input",
 CellChangeTimes->{{3.4902234669709997`*^9, 3.490223469281*^9}}],

Cell[BoxData["666"], "Output",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGBQB+I/KzeuFWJ85Vhg+23+WiC9oejFOhAtsu7yHhAd8pj1
yLXOV46qZ37Y3Vz5ynFX1fpdT3e/coxa3ej+DEjn5XwJA9FLvph9ANFcZSop
z4H0gcV3g18CaTffiYnz9gLNqzy6dD6QPpVwscJx3yvHG7pZd0F0X+If8S2W
rx39OsRPbgXScaVqEjuAdMSGHfqF9q8dWRinT68B0j/PGm8E0QfKT/79CaR3
Mc70+wWSFyt6AqIlObZ+A9HyzZ/CfgPpGqeNe0D0R/mWB7IOrx1n+f9llAfS
At+m6oPootKTpiB694uXgSD6Y86t91pAesJkts1WQFrf8U+UB5CeqDLV1gtI
i7tE3vAB0plP9bn8gDQAooKkiQ==
  "]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  UnderoverscriptBox["\[Sum]", 
   RowBox[{"x", "=", "1"}], 
   RowBox[{"10", "^", "7"}]], 
  SuperscriptBox[
   RowBox[{"Prime", "[", "x", "]"}], "2"]}]], "Input",
 CellChangeTimes->{{3.490222742849*^9, 3.490222830013*^9}, 3.490223326633*^9}],

Cell[BoxData["103158861357874372432083"], "Output",
 CellChangeTimes->{{3.490222752425*^9, 3.490222827007*^9}, 3.49022332301*^9, 
   3.49022336977*^9, 3.4905407996470003`*^9, 3.49054091919*^9, 
   3.490541030481*^9, 3.561928224116*^9, 3.578710519737918*^9, 
   3.579114312171852*^9, 3.588173293016077*^9, 3.588174420000537*^9, 
   3.588174543957627*^9, 3.5881757696837344`*^9, 3.5881766973047915`*^9, 
   3.588180662805605*^9, 3.589075748746067*^9, 3.589078342265408*^9, 
   3.5894097580554104`*^9, 3.5894105634574766`*^9, 3.6541319344782934`*^9, 
   3.654135399193256*^9, 3.65414012738266*^9, 3.6571406350832024`*^9, 
   3.6571639950072203`*^9, 3.657164199338667*^9, 3.6574208117166033`*^9, 
   3.6574214595383663`*^9, 3.6574226581735735`*^9, 3.657422803927082*^9, 
   3.657423573795343*^9, 3.657424386960602*^9, 3.657494305565137*^9, 
   3.657496623526981*^9, 3.657496987775234*^9, 3.657497037661569*^9, 
   3.6574972617200212`*^9, 3.6575210523495474`*^9, 3.6575533334202228`*^9, 
   3.6575813021603017`*^9, 3.657585163166587*^9, 3.6575904966228504`*^9, 
   3.6575929436450825`*^9}]
}, Open  ]],

Cell["\<\
Running 10^7 takes almost half a minute. 10^10 takes hours upon hours. I\
\[CloseCurlyQuote]ll have to try to come up with a way to optimize this \
process. \
\>", "Text",
 CellChangeTimes->{{3.57911431930326*^9, 3.5791143600855923`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Other Possible Connections", "Subtitle",
 CellChangeTimes->{{3.589070242171109*^9, 3.5890702496585374`*^9}}],

Cell[CellGroupData[{

Cell["Summing Rows Results in Next Tri Numbers First Row?", "Section",
 CellChangeTimes->{{3.5890791229950633`*^9, 3.589079150956662*^9}}],

Cell[TextData[{
 "Interestingly enough, it seems there is some degree of further \
compressibility. Transform ",
 Cell[BoxData[
  FormBox[
   RowBox[{"TriRowSimple", "[", 
    RowBox[{
     RowBox[{"tri", "[", "n", "]"}], ",", "x"}], "]"}], TraditionalForm]]],
 " results in baseform of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"tri", "[", "n", "]"}], TraditionalForm]]],
 " to baseform of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"tri", "[", 
    RowBox[{"n", "+", "1"}], "]"}], TraditionalForm]]],
 ". "
}], "Text",
 CellChangeTimes->{{3.4902241356610003`*^9, 3.490224152222*^9}, {
  3.49023055825*^9, 3.490230576223*^9}, {3.5635908754032*^9, 
  3.5635908769007998`*^9}, {3.5890692543736105`*^9, 3.5890692545396194`*^9}, {
  3.589069475295246*^9, 3.5890695937850237`*^9}, {3.589069713603877*^9, 
  3.589069718369149*^9}, {3.5890697579694147`*^9, 3.589069791134311*^9}, {
  3.589069842987277*^9, 3.5890698780672836`*^9}, {3.589069932345388*^9, 
  3.5890699670733747`*^9}, {3.5890702552578573`*^9, 3.589070255961898*^9}, {
  3.5890706790961*^9, 3.5890706834073467`*^9}, {3.589070787440297*^9, 
  3.5890708086075077`*^9}, {3.5890713486033936`*^9, 3.5890713539216976`*^9}, {
  3.5894119235532694`*^9, 3.5894119246153307`*^9}, {3.6574203678502398`*^9, 
  3.6574203740750303`*^9}, {3.657422489552662*^9, 3.657422489552662*^9}, {
  3.6574262946723504`*^9, 3.657426295415945*^9}, {3.657592458795514*^9, 
  3.6575924594250946`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"BaseForm", "[", 
    RowBox[{
     RowBox[{"TriRowSimple", "[", 
      RowBox[{
       RowBox[{"tri", "[", "3", "]"}], ",", "x"}], "]"}], ",", 
     RowBox[{"tri", "[", "3", "]"}]}], "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", "1", ",", " ", "3"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.4902239011800003`*^9, 3.490223903242*^9}, {
   3.4902239379820004`*^9, 3.490223942708*^9}, {3.5890706381217566`*^9, 
   3.589070638516779*^9}, {3.589070718510354*^9, 3.5890707629788976`*^9}, {
   3.5890713639662724`*^9, 3.5890713731447973`*^9}, {3.6574203752531796`*^9, 
   3.657420376265808*^9}, 3.657422496600557*^9, {3.657424649363423*^9, 
   3.6574246690954285`*^9}, {3.6574248753876243`*^9, 
   3.6574248793271246`*^9}, {3.657590053972641*^9, 3.657590067842402*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    InterpretationBox[
     SubscriptBox["\<\"5\"\>", "\<\"6\"\>"],
     5,
     Editable->False],
    BaseForm[#, 6]& ], ",", 
   TagBox[
    InterpretationBox[
     SubscriptBox["\<\"34\"\>", "\<\"6\"\>"],
     22,
     Editable->False],
    BaseForm[#, 6]& ], ",", 
   TagBox[
    InterpretationBox[
     SubscriptBox["\<\"12\"\>", "\<\"6\"\>"],
     8,
     Editable->False],
    BaseForm[#, 6]& ]}], "}"}]], "Output",
 CellChangeTimes->{3.6575900688460293`*^9, 3.6575902329368663`*^9, 
  3.6575904966523542`*^9, 3.657592943671586*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"BaseForm", "[", 
    RowBox[{
     RowBox[{"TriRowSimple", "[", 
      RowBox[{
       RowBox[{"tri", "[", "3", "]"}], ",", "x"}], "]"}], ",", 
     RowBox[{"tri", "[", "4", "]"}]}], "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", "1", ",", " ", "3"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.4902239011800003`*^9, 3.490223903242*^9}, {
   3.4902239379820004`*^9, 3.490223942708*^9}, {3.5890706381217566`*^9, 
   3.589070638516779*^9}, 3.5890707018904037`*^9, {3.5890707337102237`*^9, 
   3.5890707501571646`*^9}, {3.5890713781970863`*^9, 3.589071384642455*^9}, {
   3.6574203771999273`*^9, 3.6574203780915403`*^9}, 3.657422499377909*^9, {
   3.657424885969468*^9, 3.6574248903195205`*^9}, {3.657589787588314*^9, 
   3.657589792888487*^9}, {3.657589990716608*^9, 3.657590044932993*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    InterpretationBox["\<\"5\"\>",
     5,
     Editable->False],
    BaseForm[#, 10]& ], ",", 
   TagBox[
    InterpretationBox["\<\"22\"\>",
     22,
     Editable->False],
    BaseForm[#, 10]& ], ",", 
   TagBox[
    InterpretationBox["\<\"8\"\>",
     8,
     Editable->False],
    BaseForm[#, 10]& ]}], "}"}]], "Output",
 CellChangeTimes->{3.657590049121525*^9, 3.657590238809112*^9, 
  3.6575904966693563`*^9, 3.657592943686588*^9}]
}, Open  ]],

Cell[TextData[{
 "Now note the ",
 Cell[BoxData[
  FormBox[
   RowBox[{"tri", "[", "3", "]"}], TraditionalForm]]],
 " result in base ",
 Cell[BoxData[
  FormBox[
   RowBox[{"tri", "[", "4", "]"}], TraditionalForm]]],
 " digits when visualized in baseform of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"tri", "[", "3", "]"}], TraditionalForm]]],
 " shows ..."
}], "Text",
 CellChangeTimes->{{3.589070816331949*^9, 3.5890708957494917`*^9}, {
  3.5894119544530373`*^9, 3.5894119550370703`*^9}, {3.6574203799527764`*^9, 
  3.6574203814434657`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BaseForm", "[", 
  RowBox[{
   RowBox[{"12", "+", "34", "+", "5"}], ",", 
   RowBox[{"tri", "[", "3", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.490228115524*^9, 3.490228131742*^9}, {
   3.4902281682060003`*^9, 3.490228179426*^9}, {3.5890712519038625`*^9, 
   3.589071252873918*^9}, 3.657420382393586*^9}],

Cell[BoxData[
 TagBox[
  InterpretationBox[
   SubscriptBox["\<\"123\"\>", "\<\"6\"\>"],
   51,
   Editable->False],
  BaseForm[#, 6]& ]], "Output",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGDQAGJDjopfIoyvHD9dejtzLZD2MY9dAaIVN+RtA9HtYpH7
rnW+crx15J31zZWvHDnqKnc93f3K8VxxgfszIM3J8zoMRGfM0vsAolfsl0l5
DqTt9l0Jfgmk/71aajRn7yvHJbqzUuYBaQbPUyvmA+mm2CPVjvteOebmFTwA
0RY/LkhvsXztOCnjxZmtQFqo5J30DiCdpZBqXGj/2vH/+uTZNUD627S3W0B0
mGAV4y8g7d1THASi/z30eAGiT1yv/wWiN1buifoNpCOeJR0A0aYrzZ7IOrx2
PPLzE6s8kI5JqzYG0b5uOyzB/OZdoSD6vuySz1pA2plv0zYrIC0geTzOA0j3
+aQ7eoHUvRK94wOkc4q/8foBaQC9u6i3
  "]]
}, Open  ]],

Cell[TextData[{
 "This is the basis of the first row of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"tri", "[", "4", "]"}], TraditionalForm]]],
 ". However, on further examination ..."
}], "Text",
 CellChangeTimes->{{3.589069242335922*^9, 3.5890692609149847`*^9}, {
  3.5890703675352793`*^9, 3.589070412199834*^9}, {3.5890708999957347`*^9, 
  3.5890709090372515`*^9}, {3.5890714099279013`*^9, 3.589071413913129*^9}, {
  3.589071579092577*^9, 3.5890715800336304`*^9}, {3.6574203833892126`*^9, 
  3.6574203833892126`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BaseForm", "[", 
  RowBox[{
   RowBox[{
   "15^^123", " ", "+", " ", "15^^456", " ", "+", " ", "15^^78", " ", "+", 
    " ", "15^^9"}], ",", "10"}], "]"}]], "Input"],

Cell[BoxData[
 TagBox[
  InterpretationBox["\<\"1361\"\>",
   1361,
   Editable->False],
  BaseForm[#, 10]& ]], "Output",
 CellChangeTimes->{3.589069263684143*^9, 3.5890757488370724`*^9, 
  3.589078342336412*^9, 3.5894097581524158`*^9, 3.5894105635274806`*^9, 
  3.6541319345438013`*^9, 3.6541353992802672`*^9, 3.654140127467671*^9, 
  3.6571406351752076`*^9, 3.6571639951462383`*^9, 3.657164199448181*^9, 
  3.6574208118341184`*^9, 3.6574214596318784`*^9, 3.6574226582975893`*^9, 
  3.6574228040140934`*^9, 3.6574235739083576`*^9, 3.6574243871126213`*^9, 
  3.6574943057411594`*^9, 3.657496623608991*^9, 3.6574969878762474`*^9, 
  3.657497037783085*^9, 3.65749726187004*^9, 3.6575210531451483`*^9, 
  3.657553333580243*^9, 3.657581302240312*^9, 3.657585163243097*^9, 
  3.6575904967018604`*^9, 3.6575929437160916`*^9}]
}, Open  ]],

Cell["In base-10 the first row of tri[5] should work out to:", "Text",
 CellChangeTimes->{{3.590259233903647*^9, 3.5902592463293576`*^9}, {
   3.5902594194992623`*^9, 3.5902594248855705`*^9}, 3.657420574791518*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BaseForm", "[", 
  RowBox[{
   RowBox[{"TriRowSimple", "[", 
    RowBox[{
     RowBox[{"tri", "[", "5", "]"}], ",", "5"}], "]"}], ",", 
   RowBox[{"tri", "[", "4", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5890692742307463`*^9, 3.5890693097447777`*^9}, {
   3.5890693484079885`*^9, 3.589069395945708*^9}, {3.589069427034486*^9, 
   3.5890694435394297`*^9}, {3.5890699884455967`*^9, 
   3.5890699893636494`*^9}, {3.5890714468660135`*^9, 
   3.5890714796748905`*^9}, {3.5890715113767033`*^9, 
   3.5890715149069057`*^9}, {3.590259406471517*^9, 3.59025941071376*^9}, {
   3.657420576973795*^9, 3.6574205779674215`*^9}, 3.6574225022147694`*^9}],

Cell[BoxData[
 TagBox[
  InterpretationBox["\<\"3874\"\>",
   3874,
   Editable->False],
  BaseForm[#, 10]& ]], "Output",
 CellChangeTimes->{
  3.5890693103998146`*^9, {3.589069359574628*^9, 3.5890693972137804`*^9}, {
   3.5890694280075417`*^9, 3.5890694440694604`*^9}, 3.5890699902507*^9, 
   3.5890714799889083`*^9, {3.5890715116367188`*^9, 3.5890715157849555`*^9}, 
   3.5890757488550735`*^9, 3.589078342350413*^9, 3.5894097581674166`*^9, 
   3.5894105635424814`*^9, {3.590259406810537*^9, 3.5902594110777807`*^9}, 
   3.654131934556803*^9, 3.6541353992982693`*^9, 3.6541401274846725`*^9, 
   3.6571406351902084`*^9, 3.657163995177742*^9, 3.657164199471684*^9, 
   3.6574208118586216`*^9, 3.657421459652381*^9, 3.6574226583175917`*^9, 
   3.6574228040330954`*^9, 3.6574235739263597`*^9, 3.657424387134124*^9, 
   3.6574943057736635`*^9, 3.6574966236249933`*^9, 3.65749698789825*^9, 
   3.657497037807088*^9, 3.657497261901544*^9, 3.6575210532546625`*^9, 
   3.6575533336087465`*^9, 3.657581302258314*^9, 3.6575851632580986`*^9, 
   3.6575904967173624`*^9, 3.6575929437310934`*^9}]
}, Open  ]],

Cell[TextData[{
 "So unfortunately ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["1361", "10"], TraditionalForm]]],
 " doesn\[CloseCurlyQuote]t map to ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["1234", "15"], "=", 
    SubscriptBox["3874", "10"]}], TraditionalForm]]],
 " like ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["123", "6"], TraditionalForm]]],
 " maps to ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["123", "10"], TraditionalForm]]],
 " "
}], "Text",
 CellChangeTimes->{{3.589070007839706*^9, 3.589070012941998*^9}, {
   3.5890702647353992`*^9, 3.5890703088999257`*^9}, {3.5902592521356897`*^9, 
   3.5902592826094327`*^9}, {3.590259392576722*^9, 3.5902593945208335`*^9}, {
   3.590259437969319*^9, 3.590259449546981*^9}, {3.5902595009619217`*^9, 
   3.590259516425806*^9}, 3.5902596035517893`*^9, 3.657426345004242*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Sum of tri[n] rows in base form is equal to tri[n + some x]?", "Section",
 CellChangeTimes->{{3.5890792602589145`*^9, 3.5890792908176622`*^9}, {
   3.589080014703066*^9, 3.589080025146663*^9}, {3.6238073471359673`*^9, 
   3.6238073481080227`*^9}, {3.623807777000554*^9, 3.6238077812577977`*^9}, 
   3.623814983652751*^9, {3.6574205790890636`*^9, 3.657420579999679*^9}}],

Cell["\<\
For reference, here are the first 10 triangular numbers:\
\>", "Text",
 CellChangeTimes->{{3.6238132086322255`*^9, 3.623813221381955*^9}, {
  3.623815024852107*^9, 3.6238150255421467`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"tri", "[", "x", "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", "1", ",", " ", "20"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6238131887750897`*^9, 3.62381319996773*^9}, {
   3.623819327540207*^9, 3.623819328008234*^9}, 3.6574205811753283`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "3", ",", "6", ",", "10", ",", "15", ",", "21", ",", "28", ",", 
   "36", ",", "45", ",", "55", ",", "66", ",", "78", ",", "91", ",", "105", 
   ",", "120", ",", "136", ",", "153", ",", "171", ",", "190", ",", "210"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.6238132002537465`*^9, 3.62381932846426*^9, 
  3.6541319345713053`*^9, 3.654135399316272*^9, 3.6541401275006747`*^9, 
  3.6571406352042093`*^9, 3.6571639952082458`*^9, 3.657164199496687*^9, 
  3.6574208118796244`*^9, 3.6574214596733837`*^9, 3.6574226583375945`*^9, 
  3.6574228040520983`*^9, 3.657423573945862*^9, 3.657424387156127*^9, 
  3.6574943058051677`*^9, 3.657496623640995*^9, 3.657496987920253*^9, 
  3.6574970378305907`*^9, 3.6574972619450493`*^9, 3.6575210532711644`*^9, 
  3.657553333626749*^9, 3.6575813022763166`*^9, 3.6575851632736006`*^9, 
  3.657590496733364*^9, 3.6575929437480955`*^9}]
}, Open  ]],

Cell[TextData[{
 "Earlier we showed that the sum of all the rows in base-6 of a ",
 "tri[",
 "3] tri sequence works out to ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["55", 
    RowBox[{"base", "-", "6"}]], TraditionalForm]]],
 "."
}], "Text",
 CellChangeTimes->{{3.589079399166859*^9, 3.5890794016540017`*^9}, {
   3.6238061358916883`*^9, 3.623806185001497*^9}, {3.6238062378175178`*^9, 
   3.6238062462900023`*^9}, {3.623806283926155*^9, 3.6238062841521683`*^9}, 
   3.6574205821979585`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BaseForm", "[", 
  RowBox[{
   RowBox[{"SumTriRows", "[", 
    RowBox[{"tri", "[", "3", "]"}], "]"}], ",", 
   RowBox[{"tri", "[", "3", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.589079737270198*^9, 3.5890797421264753`*^9}, {
   3.623806463077402*^9, 3.623806471868905*^9}, {3.6238065613110204`*^9, 
   3.623806562102066*^9}, {3.65742058307557*^9, 3.6574205838616695`*^9}, 
   3.6574225933898473`*^9, 3.657423482925804*^9, 3.657423526193798*^9, {
   3.657424922659127*^9, 3.657424925096936*^9}, {3.6575905363258915`*^9, 
   3.6575905451400113`*^9}}],

Cell[BoxData[
 TagBox[
  InterpretationBox[
   SubscriptBox["\<\"55\"\>", "\<\"6\"\>"],
   35,
   Editable->False],
  BaseForm[#, 6]& ]], "Output",
 CellChangeTimes->{
  3.58907937661957*^9, 3.5890797429665236`*^9, 3.5894097581844177`*^9, 
   3.5894105635564823`*^9, 3.654131934585807*^9, 3.6541353993342743`*^9, 
   3.654140127517177*^9, 3.65714063521921*^9, 3.6571639952437506`*^9, 
   3.65716419951969*^9, 3.657420811898627*^9, 3.6574214596938863`*^9, 
   3.6574226583590975`*^9, 3.6574228040716004`*^9, 3.6574235739638643`*^9, 
   3.6574243871781297`*^9, 3.6574249256595078`*^9, 3.657494305858674*^9, 
   3.6574966236574974`*^9, 3.6574969879422555`*^9, 3.6574970378545938`*^9, 
   3.657497261989055*^9, 3.6575210532876663`*^9, 3.6575533336532526`*^9, 
   3.657581302294319*^9, 3.6575851632891026`*^9, {3.657590456366238*^9, 
   3.657590458258478*^9}, 3.6575904967493663`*^9, 3.657590545715084*^9, 
   3.657592943763098*^9}]
}, Open  ]],

Cell[TextData[{
 "And that the 10th triangular number in base 10 is ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["55", 
    RowBox[{"base", "-", "10"}]], TraditionalForm]]],
 "."
}], "Text",
 CellChangeTimes->{{3.6238061953870907`*^9, 3.623806221387578*^9}, {
  3.6238062559055524`*^9, 3.623806262593935*^9}, {3.623806298362981*^9, 
  3.6238063030062466`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"tri", "[", "10", "]"}]], "Input",
 CellChangeTimes->{{3.623813809991621*^9, 3.6238138113246975`*^9}, 
   3.6574205847272797`*^9}],

Cell[BoxData["55"], "Output",
 CellChangeTimes->{3.6238138116077137`*^9, 3.6541319346023088`*^9, 
  3.654135399351776*^9, 3.654140127533679*^9, 3.657140635233211*^9, 
  3.6571639952767544`*^9, 3.657164199543193*^9, 3.657420811918129*^9, 
  3.6574214597148886`*^9, 3.6574226583786*^9, 3.657422804090603*^9, 
  3.6574235739823666`*^9, 3.6574243872001324`*^9, 3.657494305885678*^9, 
  3.657496623674*^9, 3.6574969879652586`*^9, 3.657497037878597*^9, 
  3.657497262019559*^9, 3.6575210533041687`*^9, 3.6575533336797557`*^9, 
  3.657581302311821*^9, 3.657585163304105*^9, 3.6575904967653685`*^9, 
  3.657592943778099*^9}]
}, Open  ]],

Cell["Or, put another way,", "Text",
 CellChangeTimes->{{3.62381380717846*^9, 3.6238138088085537`*^9}, {
  3.623814825222689*^9, 3.623814825724718*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"tri", "[", 
  RowBox[{"tri", "[", "4", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.490927223307*^9, 3.490927242928*^9}, {
  3.6238077923484316`*^9, 3.623807794168536*^9}, {3.6238136916748543`*^9, 
  3.6238137025614767`*^9}, {3.6572292052542334`*^9, 3.657229242442361*^9}, {
  3.6572292751622324`*^9, 3.657229276320298*^9}, {3.6574205857329073`*^9, 
  3.6574205864214945`*^9}}],

Cell[BoxData["55"], "Output",
 CellChangeTimes->{{3.6238136966901407`*^9, 3.623813703511531*^9}, 
   3.6541319346153107`*^9, 3.6541353993692784`*^9, 3.6541401275516815`*^9, 
   3.657140635248212*^9, 3.657163995310259*^9, 3.657164199565696*^9, {
   3.6572292092034597`*^9, 3.657229243229406*^9}, 3.657229276614315*^9, 
   3.657420811937132*^9, 3.6574214597348914`*^9, 3.6574226583986025`*^9, 
   3.6574228041096053`*^9, 3.6574235740443745`*^9, 3.6574243872221355`*^9, 
   3.657494305912681*^9, 3.6574966236905017`*^9, 3.657496987985261*^9, 
   3.6574970379026003`*^9, 3.657497262059064*^9, 3.657521053320671*^9, 
   3.657553333705259*^9, 3.657581302330323*^9, 3.6575851633191066`*^9, 
   3.6575904967808704`*^9, 3.657592943856109*^9}]
}, Open  ]],

Cell["\<\
For comparison purposes lets look at all the possible ways of \
\[OpenCurlyDoubleQuote]viewing\[CloseCurlyDoubleQuote] this number in number \
bases 2 to 10.\
\>", "Text",
 CellChangeTimes->{{3.6238157559449234`*^9, 3.6238158035386457`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"BaseForm", "[", 
    RowBox[{
     RowBox[{"SumTriRows", "[", 
      RowBox[{"tri", "[", "3", "]"}], "]"}], ",", "x"}], "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", "2", ",", " ", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.623815805479757*^9, 3.623815830068163*^9}, 
   3.657420587555639*^9, 3.65742259569514*^9, 3.657423484131957*^9, 
   3.6574235272904377`*^9, {3.6574249534295344`*^9, 3.6574249608514767`*^9}, {
   3.6575905753948526`*^9, 3.657590580318478*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    InterpretationBox[
     SubscriptBox["\<\"100011\"\>", "\<\"2\"\>"],
     35,
     Editable->False],
    BaseForm[#, 2]& ], ",", 
   TagBox[
    InterpretationBox[
     SubscriptBox["\<\"1022\"\>", "\<\"3\"\>"],
     35,
     Editable->False],
    BaseForm[#, 3]& ], ",", 
   TagBox[
    InterpretationBox[
     SubscriptBox["\<\"203\"\>", "\<\"4\"\>"],
     35,
     Editable->False],
    BaseForm[#, 4]& ], ",", 
   TagBox[
    InterpretationBox[
     SubscriptBox["\<\"120\"\>", "\<\"5\"\>"],
     35,
     Editable->False],
    BaseForm[#, 5]& ], ",", 
   TagBox[
    InterpretationBox[
     SubscriptBox["\<\"55\"\>", "\<\"6\"\>"],
     35,
     Editable->False],
    BaseForm[#, 6]& ], ",", 
   TagBox[
    InterpretationBox[
     SubscriptBox["\<\"50\"\>", "\<\"7\"\>"],
     35,
     Editable->False],
    BaseForm[#, 7]& ], ",", 
   TagBox[
    InterpretationBox[
     SubscriptBox["\<\"43\"\>", "\<\"8\"\>"],
     35,
     Editable->False],
    BaseForm[#, 8]& ], ",", 
   TagBox[
    InterpretationBox[
     SubscriptBox["\<\"38\"\>", "\<\"9\"\>"],
     35,
     Editable->False],
    BaseForm[#, 9]& ], ",", 
   TagBox[
    InterpretationBox["\<\"35\"\>",
     35,
     Editable->False],
    BaseForm[#, 10]& ]}], "}"}]], "Output",
 CellChangeTimes->{3.623815831882267*^9, 3.654131934628312*^9, 
  3.6541353993872805`*^9, 3.6541401275686836`*^9, 3.6571406352622128`*^9, 
  3.657163995349764*^9, 3.657164199590699*^9, 3.6574208119571342`*^9, 
  3.657421459756894*^9, 3.657422658419105*^9, 3.6574228041291075`*^9, 
  3.6574235740633774`*^9, 3.657424387243638*^9, 3.6574249628722334`*^9, 
  3.657494305941185*^9, 3.6574966237070036`*^9, 3.657496988006764*^9, 
  3.657497037926603*^9, 3.657497262096069*^9, 3.6575210533376727`*^9, 
  3.6575533337322626`*^9, 3.6575813023488255`*^9, 3.6575851633351088`*^9, 
  3.6575904967963724`*^9, 3.657590581791665*^9, 3.657592943922618*^9}]
}, Open  ]],

Cell[TextData[{
 "This seems to hint at the possibility that summing the rows from ",
 "tri[",
 "n] (",
 Cell[BoxData[
  FormBox[
   RowBox[{"BaseForm", "[", 
    RowBox[{
     RowBox[{"SumTriRows", "[", 
      RowBox[{"tri", "[", "n", "]"}], "]"}], ",", 
     RowBox[{"tri", "[", "n", "]"}]}], "]"}], TraditionalForm]],
  FontSlant->"Italic"],
 ") and dropping the base to make the number base ",
 Cell[BoxData[
  FormBox[
   RowBox[{"tri", "(", 
    RowBox[{"n", "+", 
     RowBox[{"?", ")"}]}]}], TraditionalForm]]],
 ", where ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", "+", 
    RowBox[{"?", " ", "= 10"}]}], TraditionalForm]]],
 ", will equal ",
 Cell[BoxData[
  FormBox[
   RowBox[{"tri", "[", 
    RowBox[{"tri", "[", 
     RowBox[{"n", "+", "1"}], "]"}], "]"}], TraditionalForm]]],
 ".\n\nAnother interesting correlation is that the topmost number in base-36 \
is ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["35", 
    RowBox[{"base", "-", "10"}]], TraditionalForm]]],
 " (",
 StyleBox["just like ",
  FontSlant->"Italic"],
 Cell[BoxData[
  FormBox[
   RowBox[{"f", "=", 
    SubscriptBox["15", 
     RowBox[{"base", "-", "10"}]]}], TraditionalForm]],
  FontSlant->"Italic"],
 StyleBox[" is the topmost number in base-16",
  FontSlant->"Italic"],
 ") and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["35", 
     RowBox[{"base", "-", "10"}]], "=", 
    SubscriptBox["55", 
     RowBox[{"base", "-", "6"}]]}], TraditionalForm]]],
 "."
}], "Text",
 CellChangeTimes->{{3.6238080067276936`*^9, 3.6238081548861675`*^9}, {
   3.6238081928713408`*^9, 3.6238081983336525`*^9}, 3.623808236513837*^9, {
   3.623813047933034*^9, 3.623813055886489*^9}, {3.623813458446514*^9, 
   3.623813475276477*^9}, {3.6238135315866976`*^9, 3.6238135337848234`*^9}, {
   3.6238153641025114`*^9, 3.623815412538282*^9}, {3.6574205886577787`*^9, 
   3.657420591785676*^9}, {3.657420959100319*^9, 3.657420959100319*^9}, {
   3.657422597300844*^9, 3.657422597301344*^9}, {3.6574234895686474`*^9, 
   3.6574234895686474`*^9}, {3.657423528214555*^9, 3.657423528214555*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"BaseForm", "[", 
    RowBox[{
     RowBox[{"TriRowSimple", "[", 
      RowBox[{"36", ",", "x"}], "]"}], ",", "6"}], "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", "1", ",", " ", "3"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.490225615433*^9, {3.589079763148678*^9, 3.589079769029014*^9}, {
   3.6238075359627676`*^9, 3.623807536120776*^9}, {3.657424992123448*^9, 
   3.6574249951913376`*^9}, {3.657425029843238*^9, 3.657425052255584*^9}, {
   3.6575901476205325`*^9, 3.657590152666173*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    InterpretationBox[
     SubscriptBox["\<\"55\"\>", "\<\"6\"\>"],
     35,
     Editable->False],
    BaseForm[#, 6]& ], ",", 
   TagBox[
    InterpretationBox[
     SubscriptBox["\<\"5354\"\>", "\<\"6\"\>"],
     1222,
     Editable->False],
    BaseForm[#, 6]& ], ",", 
   TagBox[
    InterpretationBox[
     SubscriptBox["\<\"505152\"\>", "\<\"6\"\>"],
     40028,
     Editable->False],
    BaseForm[#, 6]& ]}], "}"}]], "Output",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGDQAWJVtsgSEcZXjm8CFWatBdKT3k5YAaKVb1duA9HbPifu
u9b5ynGh6Q/rmytfOdYxT9z1dPcrxyiDSvdnQPqK1ocwEB0lavwBRK99oZDy
HEg3zL4Z/BJIm1X0JM7b+8qx2vzg0vlAOo/JOHoBkK5hPV7tuO+VI9/dogcg
Wmgen9vd/68c2addkd5i+doxjuXtma1A+vmzT9I7gPT7exnGhfavHf9U5Myu
AdJLVn/eAqKf+dQz/gLSBQ8qgkB0jKjfCxAdtLflF4g+NO9Q1G8QvyPjAIgO
meUm8gdIt4XaP5F1eO34Te07qzyQjrvfYAyms/dZgugdUUdCQXRa6OrPWkD6
hfeObVZAmm/v6TgPkLhDtqMXkDb6ZrrRB0jvLWQ7BKIFmaXugGgR1n+8fkAa
AGOjtbo=
  "]]
}, Open  ]],

Cell[TextData[{
 "This observations holds when we look at a triangle with a height of two ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["2", "3"], ",", " ", 
     SubscriptBox["01", "3"]}], "}"}], TraditionalForm]]],
 " and sum the rows. We get:"
}], "Text",
 CellChangeTimes->{{3.623807644513976*^9, 3.623807657273706*^9}, {
  3.6238076967119617`*^9, 3.623807740319456*^9}, {3.623813283522509*^9, 
  3.6238133199505925`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BaseForm", "[", 
  RowBox[{
   RowBox[{"SumTriRows", "[", 
    RowBox[{"tri", "[", "2", "]"}], "]"}], ",", " ", 
   RowBox[{"tri", "[", "2", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6238076587557907`*^9, 3.6238076838012233`*^9}, {
   3.6574205940274606`*^9, 3.657420595309123*^9}, 3.657422599614638*^9, 
   3.6574234932821193`*^9, 3.6574235291556745`*^9, {3.657425097973389*^9, 
   3.6574251006412277`*^9}, {3.657590615700471*^9, 3.6575906244440813`*^9}}],

Cell[BoxData[
 TagBox[
  InterpretationBox[
   SubscriptBox["\<\"10\"\>", "\<\"3\"\>"],
   3,
   Editable->False],
  BaseForm[#, 3]& ]], "Output",
 CellChangeTimes->{{3.6238076603438816`*^9, 3.6238076845132637`*^9}, 
   3.6541319346568155`*^9, 3.6541353994257855`*^9, 3.6541401276221905`*^9, 
   3.6571406352912145`*^9, 3.6571639954292736`*^9, 3.6571641996382055`*^9, 
   3.657420811997139*^9, 3.6574214597988997`*^9, 3.65742265846011*^9, 
   3.6574228041671124`*^9, 3.6574235741013823`*^9, 3.657424387288644*^9, 
   3.6574251012648067`*^9, 3.657494306005693*^9, 3.657496623741008*^9, 
   3.657496988046769*^9, 3.657497037975109*^9, 3.657497262174079*^9, 
   3.6575210533796782`*^9, 3.6575533337852693`*^9, 3.6575813023848305`*^9, 
   3.6575851633701134`*^9, 3.6575904968283763`*^9, 3.6575906250676603`*^9, 
   3.6575929439531217`*^9}]
}, Open  ]],

Cell["\<\
For comparison purposes lets look at all the possible ways of \
\[OpenCurlyDoubleQuote]viewing\[CloseCurlyDoubleQuote] this number in number \
bases 2 to 10.\
\>", "Text",
 CellChangeTimes->{{3.6238157559449234`*^9, 3.6238158035386457`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"BaseForm", "[", 
    RowBox[{
     RowBox[{"SumTriRows", "[", 
      RowBox[{"tri", "[", "2", "]"}], "]"}], ",", "x"}], "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", "2", ",", " ", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.623815805479757*^9, 3.623815830068163*^9}, 
   3.6238158641721134`*^9, 3.6574205963337536`*^9, 3.657422601658397*^9, 
   3.657423494400261*^9, 3.6574235300157833`*^9, {3.657425115835657*^9, 
   3.657425117793406*^9}, {3.657590637658759*^9, 3.6575906414407396`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    InterpretationBox[
     SubscriptBox["\<\"11\"\>", "\<\"2\"\>"],
     3,
     Editable->False],
    BaseForm[#, 2]& ], ",", 
   TagBox[
    InterpretationBox[
     SubscriptBox["\<\"10\"\>", "\<\"3\"\>"],
     3,
     Editable->False],
    BaseForm[#, 3]& ], ",", 
   TagBox[
    InterpretationBox[
     SubscriptBox["\<\"3\"\>", "\<\"4\"\>"],
     3,
     Editable->False],
    BaseForm[#, 4]& ], ",", 
   TagBox[
    InterpretationBox[
     SubscriptBox["\<\"3\"\>", "\<\"5\"\>"],
     3,
     Editable->False],
    BaseForm[#, 5]& ], ",", 
   TagBox[
    InterpretationBox[
     SubscriptBox["\<\"3\"\>", "\<\"6\"\>"],
     3,
     Editable->False],
    BaseForm[#, 6]& ], ",", 
   TagBox[
    InterpretationBox[
     SubscriptBox["\<\"3\"\>", "\<\"7\"\>"],
     3,
     Editable->False],
    BaseForm[#, 7]& ], ",", 
   TagBox[
    InterpretationBox[
     SubscriptBox["\<\"3\"\>", "\<\"8\"\>"],
     3,
     Editable->False],
    BaseForm[#, 8]& ], ",", 
   TagBox[
    InterpretationBox[
     SubscriptBox["\<\"3\"\>", "\<\"9\"\>"],
     3,
     Editable->False],
    BaseForm[#, 9]& ], ",", 
   TagBox[
    InterpretationBox["\<\"3\"\>",
     3,
     Editable->False],
    BaseForm[#, 10]& ]}], "}"}]], "Output",
 CellChangeTimes->{3.623815831882267*^9, 3.623815866097224*^9, 
  3.6541319346703176`*^9, 3.654135399443288*^9, 3.654140127652694*^9, 
  3.6571406353062153`*^9, 3.657163995469279*^9, 3.6571641996632085`*^9, 
  3.657420812017642*^9, 3.6574214598199024`*^9, 3.6574226584806128`*^9, 
  3.657422804186615*^9, 3.6574235741198845`*^9, 3.657424387310646*^9, 
  3.657425118168954*^9, 3.6574943060361967`*^9, 3.6574966237585106`*^9, 
  3.657496988066272*^9, 3.657497037999112*^9, 3.6574972622095833`*^9, 
  3.65752105339618*^9, 3.6575533338132725`*^9, 3.6575813024033327`*^9, 
  3.6575851633886156`*^9, 3.6575904968543797`*^9, 3.657590642214838*^9, 
  3.6575929439896264`*^9}]
}, Open  ]],

Cell[TextData[{
 "So if we were to drop the number base of 3 from ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["10", "3"], TraditionalForm]]],
 " and increment ",
 "tri(",
 "n) where ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", "=", "2"}], TraditionalForm]]],
 " to ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", "=", "4"}], TraditionalForm]]],
 ". We get:"
}], "Text",
 CellChangeTimes->{{3.6238076936637874`*^9, 3.623807693827797*^9}, {
   3.6238077456317596`*^9, 3.6238077517601104`*^9}, {3.6238078192079678`*^9, 
   3.6238078287395134`*^9}, 3.623813090744483*^9, {3.623813903263956*^9, 
   3.6238139544788857`*^9}, {3.6238149458955913`*^9, 3.623814951218896*^9}, {
   3.623816183776394*^9, 3.623816213316084*^9}, 3.6574209603704805`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"tri", "[", "4", "]"}]], "Input",
 CellChangeTimes->{{3.623813646513271*^9, 3.623813677595049*^9}, {
   3.623813749313151*^9, 3.6238137609338155`*^9}, 3.657420597185362*^9}],

Cell[BoxData["10"], "Output",
 CellChangeTimes->{{3.6238136469942985`*^9, 3.6238136779900713`*^9}, {
   3.6238137568745832`*^9, 3.6238137613348384`*^9}, 3.6541319346838193`*^9, 
   3.65413539946129*^9, 3.654140127674697*^9, 3.657140635320216*^9, 
   3.6571639955087843`*^9, 3.657164199687211*^9, 3.657420812038144*^9, 
   3.6574214598404045`*^9, 3.6574226585016155`*^9, 3.6574228042051177`*^9, 
   3.6574235741383867`*^9, 3.657424387332649*^9, 3.657494306069701*^9, 
   3.6574966237755127`*^9, 3.657496988085774*^9, 3.657497038024115*^9, 
   3.657497262241087*^9, 3.6575210534126825`*^9, 3.6575533338377757`*^9, 
   3.6575813024208345`*^9, 3.657585163407118*^9, 3.657590496874382*^9, 
   3.657592944004628*^9}]
}, Open  ]],

Cell[TextData[{
 "In summary, the sum of the rows of tri[2] works out to be ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["10", "3"], TraditionalForm]]],
 " which maps to ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["10", "10"], "=", 
    RowBox[{"tri", "[", "4", "]"}]}], TraditionalForm]]],
 " (n-diff: ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"4", "-", "2"}], "=", 
    StyleBox["2",
     FontWeight->"Bold"]}], TraditionalForm]]],
 ", base-diff: ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"10", "-", "3"}], "=", 
    StyleBox["7",
     FontWeight->"Bold"]}], TraditionalForm]]],
 "). Next the sum of the rows of ",
 "tri[",
 "3] works out to be ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["55", "6"], TraditionalForm]]],
 " which maps to ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["55", "10"], "=", 
    RowBox[{"tri", "[", "10", "]"}]}], TraditionalForm]]],
 " (n-diff: ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"10", "-", "3"}], "=", 
    StyleBox["7",
     FontWeight->"Bold"]}], TraditionalForm]]],
 ", base-diff: ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"10", "-", "6"}], "=", 
    StyleBox["4",
     FontWeight->"Bold"]}], TraditionalForm]]],
 ")."
}], "Text",
 CellChangeTimes->{{3.6238151401787033`*^9, 3.623815242136535*^9}, {
  3.6238152751124215`*^9, 3.6238152849549847`*^9}, {3.6238154518205285`*^9, 
  3.623815467858446*^9}, {3.623815499596261*^9, 3.6238155555974646`*^9}, {
  3.623816569862477*^9, 3.6238165764088516`*^9}, {3.6238166129569416`*^9, 
  3.6238166567314453`*^9}, {3.6574205981564846`*^9, 3.657420602614051*^9}}],

Cell[CellGroupData[{

Cell["\<\
Failed Explanation Number #1 \[LongDash] Summed tri[n] rows in base form of \
tri[n+1] is equal to tri[tri[n + 1]]?\
\>", "Subsection",
 CellChangeTimes->{{3.6238185717379775`*^9, 3.6238186271381464`*^9}, {
  3.623819133121087*^9, 3.62381915625241*^9}, {3.623819187536199*^9, 
  3.623819191658435*^9}, {3.6238195145349026`*^9, 3.623819515152938*^9}, {
  3.657420603773198*^9, 3.657420606515046*^9}}],

Cell["So since the sum of the rows of tri[4] equals: ", "Text",
 CellChangeTimes->{{3.5890798405721064`*^9, 3.589079886649742*^9}, {
   3.623816623362537*^9, 3.6238166240175743`*^9}, 3.65742060803974*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BaseForm", "[", 
  RowBox[{
   RowBox[{"SumTriRows", "[", "10", "]"}], ",", "10"}], "]"}]], "Input",
 CellChangeTimes->{{3.589079463493539*^9, 3.589079494904335*^9}, {
   3.5890797034912653`*^9, 3.5890797052723675`*^9}, {3.5890797857219687`*^9, 
   3.5890797905062428`*^9}, 3.6574226034716277`*^9, 3.657423496372512*^9, 
   3.6574235314614673`*^9}],

Cell[BoxData[
 TagBox[
  InterpretationBox["\<\"666\"\>",
   666,
   Editable->False],
  BaseForm[#, 10]& ]], "Output",
 CellChangeTimes->{3.589079496775442*^9, 3.5890797059894085`*^9, 
  3.5890797911342783`*^9, 3.5894097582364206`*^9, 3.589410563604485*^9, 
  3.6541319346968207`*^9, 3.6541353994782925`*^9, 3.6541401276911993`*^9, 
  3.6571406353372173`*^9, 3.6571639955497894`*^9, 3.657164199712714*^9, 
  3.6574208120581465`*^9, 3.6574214598614073`*^9, 3.657422658521118*^9, 
  3.6574228042256203`*^9, 3.6574235741573887`*^9, 3.6574243873541517`*^9, 
  3.657494306101205*^9, 3.6574966237915144`*^9, 3.6574969881057763`*^9, 
  3.6574970380476184`*^9, 3.6574972622760916`*^9, 3.6575210534291844`*^9, 
  3.657553333863779*^9, 3.657581302440337*^9, 3.65758516342562*^9, 
  3.657590496894885*^9, 3.6575929440391326`*^9}]
}, Open  ]],

Cell["And:", "Text",
 CellChangeTimes->{{3.623815303968072*^9, 3.623815307418269*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"tri", "[", "36", "]"}]], "Input",
 CellChangeTimes->{{3.623815309103366*^9, 3.623815310041419*^9}, 
   3.657420608883347*^9}],

Cell[BoxData["666"], "Output",
 CellChangeTimes->{3.623815310501446*^9, 3.6541319347098227`*^9, 
  3.6541353994957943`*^9, 3.6541401277097015`*^9, 3.6571406353512177`*^9, 
  3.6571639955887938`*^9, 3.6571641997362175`*^9, 3.65742081207815*^9, 
  3.65742145988241*^9, 3.657422658542121*^9, 3.657422804244622*^9, 
  3.657423574175891*^9, 3.6574243873766546`*^9, 3.65749430614021*^9, 
  3.657496623808017*^9, 3.657496988125279*^9, 3.6574970380716214`*^9, 
  3.657497262306596*^9, 3.6575210534456863`*^9, 3.657553333887282*^9, 
  3.6575813024583397`*^9, 3.6575851634436226`*^9, 3.6575904969113865`*^9, 
  3.6575929440541344`*^9}]
}, Open  ]],

Cell[TextData[{
 "The pattern seems to hold. \n\nSo for our first naive attempt to explain \
what\[CloseCurlyQuote]s happening. Lets assume that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"SumTriRows", "[", 
     RowBox[{"tri", "[", "n", "]"}], "]"}], "=", 
    StyleBox["s",
     FontWeight->"Bold"]}], TraditionalForm]]],
 " gives a number ",
 Cell[BoxData[
  FormBox[
   StyleBox["s",
    FontWeight->"Bold"], TraditionalForm]]],
 " that in baseform of ",
 "tri[",
 "n+1] will equal some other ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"tri", "[", "x", "]"}], "=", 
    StyleBox["s",
     FontWeight->"Bold"]}], TraditionalForm]]],
 " (possibly as ",
 Cell[BoxData[
  FormBox[
   RowBox[{"tri", "[", 
    RowBox[{"tri", "[", 
     RowBox[{"n", "+", "1"}], "]"}], "]"}], TraditionalForm]]],
 "). So, lets convert the number as though it was previously in base-15."
}], "Text",
 CellChangeTimes->{{3.6238186777610416`*^9, 3.623818690940796*^9}, {
   3.623818741504688*^9, 3.623818768180214*^9}, {3.623818830229762*^9, 
   3.623818873931262*^9}, {3.6238189065211263`*^9, 3.6238189325326138`*^9}, {
   3.6238189725969057`*^9, 3.6238190293731527`*^9}, {3.623819166430992*^9, 
   3.6238191666330037`*^9}, 3.6238192087354116`*^9, {3.657420609725954*^9, 
   3.657420613025873*^9}, {3.6574226051633425`*^9, 3.6574226051633425`*^9}, {
   3.6574234974831524`*^9, 3.6574234974831524`*^9}, {3.657423533073172*^9, 
   3.657423533073172*^9}}],

Cell[CellGroupData[{

Cell[BoxData["15^^666"], "Input",
 CellChangeTimes->{{3.589079819903924*^9, 3.589079825127223*^9}, {
  3.623819240641237*^9, 3.6238192607253857`*^9}}],

Cell[BoxData["1446"], "Output",
 CellChangeTimes->{
  3.589079825867265*^9, 3.5894097582524214`*^9, 3.589410563619486*^9, {
   3.623819241786302*^9, 3.6238192612324142`*^9}, 3.6541319347233243`*^9, 
   3.654135399512797*^9, 3.654140127726204*^9, 3.6571406353662186`*^9, 
   3.657163995628299*^9, 3.6571641997597203`*^9, 3.657420812097652*^9, 
   3.657421459902913*^9, 3.6574226585621233`*^9, 3.657422804263625*^9, 
   3.657423574194894*^9, 3.6574243873991575`*^9, 3.6574943061687136`*^9, 
   3.657496623828019*^9, 3.657496988144781*^9, 3.6574970380956244`*^9, 
   3.6574972623466005`*^9, 3.6575210534621887`*^9, 3.6575533339107847`*^9, 
   3.6575813024763417`*^9, 3.657585163461625*^9, 3.657590496928389*^9, 
   3.657592944089139*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"tri", "[", "15", "]"}]], "Input",
 CellChangeTimes->{{3.5890797960095577`*^9, 3.589079805532102*^9}, 
   3.6574206139594917`*^9}],

Cell[BoxData["120"], "Output",
 CellChangeTimes->{3.5890798059731274`*^9, 3.5894097582674227`*^9, 
  3.5894105636334867`*^9, 3.654131934736326*^9, 3.654135399530799*^9, 
  3.6541401277427053`*^9, 3.65714063538122*^9, 3.6571639956648035`*^9, 
  3.657164199781723*^9, 3.6574208121151543`*^9, 3.657421459923415*^9, 
  3.6574226585821257`*^9, 3.6574228042836275`*^9, 3.6574235742143965`*^9, 
  3.6574243874211607`*^9, 3.6574943061907167`*^9, 3.6574966238450212`*^9, 
  3.657496988164784*^9, 3.6574970381196275`*^9, 3.657497262373104*^9, 
  3.657521053479191*^9, 3.6575533339317875`*^9, 3.6575813024958444`*^9, 
  3.657585163479127*^9, 3.657590496945391*^9, 3.6575929441051407`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BaseForm", "[", 
  RowBox[{
   RowBox[{"tri", "[", "15", "]"}], ",", "15"}], "]"}]], "Input",
 CellChangeTimes->{{3.589079975199806*^9, 3.589079978081971*^9}, 
   3.6574206146295767`*^9}],

Cell[BoxData[
 TagBox[
  InterpretationBox[
   SubscriptBox["\<\"80\"\>", "\<\"15\"\>"],
   120,
   Editable->False],
  BaseForm[#, 15]& ]], "Output",
 CellChangeTimes->{3.5890799783789883`*^9, 3.589409758282423*^9, 
  3.5894105636474876`*^9, 3.654131934748828*^9, 3.654135399548301*^9, 
  3.6541401277592077`*^9, 3.65714063539622*^9, 3.6571639957013083`*^9, 
  3.657164199803226*^9, 3.6574208121331563`*^9, 3.657421459943918*^9, 
  3.657422658602128*^9, 3.6574228043021297`*^9, 3.6574235742328987`*^9, 
  3.657424387442663*^9, 3.65749430621472*^9, 3.657496623861023*^9, 
  3.657496988184286*^9, 3.6574970381436305`*^9, 3.6574972624001074`*^9, 
  3.6575210534956927`*^9, 3.6575533339537907`*^9, 3.6575813025158467`*^9, 
  3.657585163496629*^9, 3.6575904969653935`*^9, 3.657592944120143*^9}]
}, Open  ]],

Cell[TextData[{
 "Sadly ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"tri", "[", "15", "]"}], "\[NotEqual]", "1446"}]], "Input"],
 " nor does it equal 666. However since ",
 Cell[BoxData[
  FormBox[
   RowBox[{"tri", "[", "n", "]"}], TraditionalForm]]],
 " will always equal a number that has a whole ",
 Cell[BoxData[
  FormBox[
   RowBox[{"qtri", "[", 
    RowBox[{"tri", "[", "n", "]"}], "]"}], TraditionalForm]]],
 ". This means all values generated by ",
 Cell[BoxData[
  FormBox[
   RowBox[{"tri", "[", "n", "]"}], TraditionalForm]]],
 " are also triangular."
}], "Text",
 CellChangeTimes->{{3.589079893702145*^9, 3.589079926358013*^9}, {
  3.589079997626089*^9, 3.589080002160349*^9}, {3.5890801984445753`*^9, 
  3.589080208866172*^9}, {3.589080317032358*^9, 3.589080374532647*^9}, {
  3.6574206154451804`*^9, 3.6574206201772814`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"tri", "[", "26796", "]"}]], "Input",
 CellChangeTimes->{{3.58908043122989*^9, 3.589080464311782*^9}, 
   3.657420621148404*^9}],

Cell[BoxData["359026206"], "Output",
 CellChangeTimes->{{3.5890804329959908`*^9, 3.589080464640801*^9}, 
   3.589409758299424*^9, 3.5894105636614885`*^9, 3.6541319347713304`*^9, 
   3.6541353995663033`*^9, 3.65414012777921*^9, 3.657140635410221*^9, 
   3.6571639957408133`*^9, 3.657164199826729*^9, 3.657420812153659*^9, 
   3.6574214599649205`*^9, 3.657422658622131*^9, 3.657422804321132*^9, 
   3.657423574251401*^9, 3.657424387464666*^9, 3.657494306243723*^9, 
   3.657496623877025*^9, 3.657496988204289*^9, 3.6574970381681337`*^9, 
   3.657497262440112*^9, 3.657521053511695*^9, 3.6575533339787936`*^9, 
   3.6575813025363493`*^9, 3.6575851635141315`*^9, 3.657590496982896*^9, 
   3.6575929441346445`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Miscellaneous Tinkering ...", "Subtitle",
 CellChangeTimes->{{3.579106669729729*^9, 3.5791066780012026`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  UnderoverscriptBox["\[Sum]", 
   RowBox[{"y", "=", "0"}], "2"], 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"x", "=", "1"}], "1"], "2"}], "-", "y"}], ")"}]}]], "Input",
 CellChangeTimes->{{3.4902173560439997`*^9, 3.490217403881*^9}, {
  3.490217531434*^9, 3.490217551091*^9}, {3.490218468773*^9, 
  3.490218476273*^9}, {3.490218804493*^9, 3.490218956863*^9}, {
  3.4902190845880003`*^9, 3.490219102024*^9}}],

Cell[BoxData["3"], "Output",
 CellChangeTimes->{{3.490217364341*^9, 3.4902174042939997`*^9}, {
   3.490217531795*^9, 3.490217551396*^9}, 3.490218477817*^9, {
   3.49021880587*^9, 3.490218878436*^9}, {3.490218915407*^9, 
   3.49021895717*^9}, {3.490219084928*^9, 3.490219102394*^9}, 
   3.490540799724*^9, 3.490540919324*^9, 3.4905410306949997`*^9, 
   3.561928224212*^9, 3.5787105197839203`*^9, 3.588173293187087*^9, 
   3.5881744200275383`*^9, 3.5881745439836283`*^9, 3.5881757697207365`*^9, 
   3.5881766973287926`*^9, 3.588180662827606*^9, 3.5890757488750744`*^9, 
   3.5890783423644133`*^9, 3.589409758314425*^9, 3.589410563674489*^9, 
   3.654131934791833*^9, 3.6541353995828056`*^9, 3.6541401277952127`*^9, 
   3.6571406354302225`*^9, 3.6571639957793183`*^9, 3.657164199849732*^9, 
   3.6574208121736617`*^9, 3.6574214599859233`*^9, 3.657422658642133*^9, 
   3.657422804341135*^9, 3.6574235742709036`*^9, 3.657424387486169*^9, 
   3.657494306278228*^9, 3.6574966238945274`*^9, 3.657496988222291*^9, 
   3.6574970381901364`*^9, 3.6574972624781175`*^9, 3.6575210535281973`*^9, 
   3.6575533340017967`*^9, 3.6575813025548515`*^9, 3.6575851635316334`*^9, 
   3.6575904970003977`*^9, 3.6575929441501465`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"tri", "[", "3", "]"}], "-", 
    RowBox[{"tri", "[", "2", "]"}]}], ")"}], "-", "1"}]], "Input",
 CellChangeTimes->{
  3.490216571112*^9, {3.657420621961508*^9, 3.657420622554083*^9}}],

Cell[BoxData["2"], "Output",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGDQAOINRSXO/IyvHK8vrvAH0ee/f5+/Fki7dL9ZB6JXHLu+
B0Tb3Gc/cq3zlWNW+E+7mytfOW7RXLH36e5XjvdyGr2eAemjX/5HgmiNbvPP
IDqGQTv9OUj+6q2wl0BaZMqclHl7XzlqqZxZMR9Ilzedqnbc98rx1f/SByBa
+NlN6S2Wrx3zND+f2QqkJ/z8Kb0DSC/3zzMutH/teI2ranYNkD5y4fcWEM0i
18b4C0gvMWkIAtHyOqEvQLRdW/cvEH3B6WTUbyB9w67gAIiune35RNbhteM9
qb+s8kB66pZ2YxDNdemYJYieIHkhFEQ/Stz4WQtIT9l0YJsVkO7wuBTnAaQv
zCt09ALSSyYp3PEB0mdcWPn8gDQAy6eraQ==
  "]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  UnderoverscriptBox["\[Sum]", 
   RowBox[{"x", "=", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"tri", "[", "4", "]"}], "-", 
        RowBox[{"tri", "[", "3", "]"}]}], ")"}], "-", "1"}], ")"}]}], 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"tri", "[", "4", "]"}], "-", 
        RowBox[{"tri", "[", "3", "]"}]}], ")"}], "-", "1"}], ")"}], "+", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"tri", "[", "3", "]"}], "-", 
      RowBox[{"tri", "[", "2", "]"}]}], ")"}]}]], 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"tri", "[", "0", "]"}], "+", "x"}], ")"}], "*", 
   SuperscriptBox["10", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"tri", "[", "4", "]"}], "-", 
        RowBox[{"tri", "[", "3", "]"}], "-", "1"}], ")"}], "-", "x"}], 
     ")"}]]}]}]], "Input",
 CellChangeTimes->{{3.490216414531*^9, 3.490216526185*^9}, {
   3.4902166271870003`*^9, 3.490216643347*^9}, {3.4902166896870003`*^9, 
   3.49021669973*^9}, 3.490216743626*^9, {3.490216921014*^9, 
   3.490216988257*^9}, 3.490217153665*^9, 3.490217183731*^9, {
   3.490217220158*^9, 3.490217235301*^9}, {3.49021731365*^9, 
   3.490217329605*^9}, {3.6574206237042294`*^9, 3.657420630744123*^9}}],

Cell[BoxData[
 FractionBox["432", "125"]], "Output",
 CellChangeTimes->{
  3.490216460885*^9, {3.490216493493*^9, 3.490216527016*^9}, {
   3.4902169267209997`*^9, 3.49021697276*^9}, 3.4902183772320004`*^9, 
   3.490540799783*^9, 3.490540919455*^9, 3.4905410309519997`*^9, 
   3.561928224275*^9, 3.5787105198029213`*^9, 3.5881732933230944`*^9, 
   3.58817442006054*^9, 3.58817454401263*^9, 3.588175769750738*^9, 
   3.588176697355794*^9, 3.588180662850608*^9, 3.5890757489110765`*^9, 
   3.5890783423934155`*^9, 3.5894097583424263`*^9, 3.5894105637014904`*^9, 
   3.654131934827838*^9, 3.6541353996143093`*^9, 3.6541401278267164`*^9, 
   3.6571406354642243`*^9, 3.6571639958498273`*^9, 3.657164199889737*^9, 
   3.657420812209166*^9, 3.6574214600274286`*^9, 3.657422658682638*^9, 
   3.65742280437914*^9, 3.6574235743084083`*^9, 3.6574243875301743`*^9, 
   3.657494306322233*^9, 3.6574966239245315`*^9, 3.6574969882587957`*^9, 
   3.6574970382351418`*^9, 3.657497262528124*^9, 3.6575210535832043`*^9, 
   3.657553334087308*^9, 3.6575813026328616`*^9, 3.6575851635701385`*^9, 
   3.6575904970354023`*^9, 3.6575929441786504`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  UnderoverscriptBox["\[Sum]", 
   RowBox[{"x", "=", 
    RowBox[{"tri", "[", "2", "]"}]}], 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"tri", "[", "3", "]"}], "-", 
      RowBox[{"tri", "[", "2", "]"}]}], ")"}], "-", "1"}]], 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"tri", "[", "0", "]"}], "+", "x"}], ")"}], "*", 
   SuperscriptBox["10", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"tri", "[", "3", "]"}], "-", 
          RowBox[{"tri", "[", "2", "]"}]}], ")"}], "-", "1"}], ")"}], "-", 
      "x"}], ")"}]]}]}]], "Input",
 CellChangeTimes->{{3.490216533278*^9, 3.490216558005*^9}, {
  3.6574206316482377`*^9, 3.6574206351441813`*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.4902165380220003`*^9, 3.490216558516*^9}, 
   3.490540799814*^9, 3.490540919517*^9, 3.490541033361*^9, 3.561928224304*^9,
    3.5787105198189225`*^9, 3.588173293389098*^9, 3.588174420076541*^9, 
   3.588174544026631*^9, 3.588175769765739*^9, 3.588176697368795*^9, 
   3.588180662860608*^9, 3.5890757489290776`*^9, 3.5890783424074163`*^9, 
   3.589409758356427*^9, 3.589410563714491*^9, 3.65413193484634*^9, 
   3.6541353996303115`*^9, 3.6541401278422184`*^9, 3.657140635481225*^9, 
   3.6571639958848314`*^9, 3.6571641999097395`*^9, 3.6574208122276683`*^9, 
   3.6574214600484314`*^9, 3.657422658703141*^9, 3.657422804398642*^9, 
   3.657423574328411*^9, 3.657424387552177*^9, 3.6574943063452363`*^9, 
   3.657496623940033*^9, 3.6574969882777987`*^9, 3.6574970382581453`*^9, 
   3.657497262555127*^9, 3.65752105362671*^9, 3.6575533341523156`*^9, 
   3.6575813026933694`*^9, 3.65758516358214*^9, 3.6575904970539045`*^9, 
   3.657592944193152*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  UnderoverscriptBox["\[Sum]", 
   RowBox[{"x", "=", 
    RowBox[{"tri", "[", "3", "]"}]}], 
   RowBox[{"tri", "[", "4", "]"}]], 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"tri", "[", "4", "]"}], "+", "x"}], ")"}], "*", 
   SuperscriptBox["10", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"tri", "[", "4", "]"}], "-", "x"}], ")"}]]}]}]], "Input",
 CellChangeTimes->{{3.490212011344*^9, 3.4902120733900003`*^9}, {
  3.657420635887776*^9, 3.657420638153564*^9}}],

Cell[BoxData["179010"], "Output",
 CellChangeTimes->{{3.490212019736*^9, 3.4902120257799997`*^9}, {
   3.490212064164*^9, 3.490212073649*^9}, 3.490540799844*^9, 
   3.4905409195810003`*^9, 3.49054103352*^9, 3.561928224337*^9, 
   3.5787105198329234`*^9, 3.588173293455102*^9, 3.5881744200925417`*^9, 
   3.5881745440406313`*^9, 3.58817576978074*^9, 3.588176697381796*^9, 
   3.5881806628716087`*^9, 3.5890757489470787`*^9, 3.589078342421417*^9, 
   3.589409758370428*^9, 3.5894105637274923`*^9, 3.654131934863842*^9, 
   3.6541353996468134`*^9, 3.6541401278577204`*^9, 3.657140635498226*^9, 
   3.657163995919836*^9, 3.657164199929242*^9, 3.657420812246171*^9, 
   3.657421460068934*^9, 3.6574226587231436`*^9, 3.657422804418144*^9, 
   3.657423574347413*^9, 3.6574243875741796`*^9, 3.6574943063677387`*^9, 
   3.657496623955535*^9, 3.6574969882968006`*^9, 3.657497038280648*^9, 
   3.6574972625801306`*^9, 3.657521053667715*^9, 3.657553334215824*^9, 
   3.6575813027543774`*^9, 3.6575851635941415`*^9, 3.6575904970714073`*^9, 
   3.6575929442071543`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  UnderoverscriptBox["\[Sum]", 
   RowBox[{"y", "=", "3"}], "0"], 
  RowBox[{"\[Placeholder]", 
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"x", "=", "0"}], "y"], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"y", "-", "x"}], ")"}], "*", 
     SuperscriptBox["10", "x"]}]}]}]}]], "Input",
 CellChangeTimes->{{3.4902113622860003`*^9, 3.490211423*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGBQA2K3bb/nr2V85ejS/WUdiJZrNd8Losv3cR+51vnK0Ujp
t93Nla8cn63ZsPfp7leOBpXNXs+AdM9+xigQ3ZJn+RlE/56pk/4cSIfZ3Ql7
CaTfPZyXMm/vK8dP786umA+k7XzPVDvuA5q/qfwBiP5pfEd6i+Vrx0eWX89s
BdJhb39L7wDS+2oKjAvtXzt+7aybXQOkZWP+bQHRMiUdjL+A9Ko7TUEg+tbx
8Bcg2oSx7xeIPrb3dNRvIP1OuPgAiF5d4vNE1uG1Y5Pxf1Z5IP1NrMsYRAes
P2kJovXXXw4F0VJPt37WAtJPuo9vswLSNptvxHkA6R25xY5eQDrihtIdHyA9
h5+dzw9IAwBs4qSU
  "]]
}, Open  ]],

Cell["So likewise using base 36 ...", "Text",
 CellChangeTimes->{{3.490211327801*^9, 3.4902113314849997`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  UnderoverscriptBox["\[Sum]", 
   RowBox[{"x", "=", "0"}], 
   RowBox[{"36", "-", "1"}]], 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"35", "-", "x"}], ")"}], "*", 
   SuperscriptBox["36", "x"]}]}]], "Input",
 CellChangeTimes->{{3.490210993769*^9, 3.490211032535*^9}, {3.490211340727*^9,
   3.490211341553*^9}}],

Cell[BoxData["86846823611197163108337531226495015298096208677436155"], \
"Output",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGDQAOKMiWtn8zC+cqzPenAQRAs1/5m/Fkhrt39bB6K/adjs
BdHXF/Mcudb5ylFs7m+7mytfOf69uWnv092vHF3+NHs9A9J2RkxRIHrGR8vP
INrrj076cyBdMuNO2EsgPb12fsq8va8cFyeeWzEfSH/Yf6bacd8rx3kyFQ9A
NPuDO9JbLF87/tjz9cxWIB2S80d6B5Bm4Sg0LrR/7Wi0t352DZB24fm/BURr
KnQy/gLSOzqag0D0hfyIFyD6/py+XyC6IPJM1G8g7Xam+ACIPunr+0TW4bXj
pl3/WeWBdPiyLmMQfTD7lCWIFlp5JRREMyRs+6wFpLlsTmyzAtItdjfjPIB0
EmeJoxeQ3pWufMcHSGe2sfP5AWkAsYOoiw==
  "]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Connection Between Primes and Triangular Numbers", "Subtitle",
 CellChangeTimes->{{3.561934920152*^9, 3.561934955867*^9}}],

Cell[TextData[{
 "The big question here that I want to explore is whether ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"x", "=", "1"}], "4"], 
     RowBox[{"TriRow", "[", 
      RowBox[{"10", ",", "4", ",", "x"}], "]"}]}], "=", 
    RowBox[{"666", "=", " ", 
     RowBox[{
      SuperscriptBox["2", "2"], "+", 
      SuperscriptBox["3", "2"], "+", 
      SuperscriptBox["5", "2"], "+", 
      SuperscriptBox["7", "2"], "+", 
      SuperscriptBox["11", "2"], "+", 
      SuperscriptBox["13", "2"], "+", 
      SuperscriptBox["17", "2"]}]}]}], TraditionalForm]]],
 " somehow means ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"x", "=", "1"}], "36"], 
     RowBox[{"TriRow", "[", 
      RowBox[{"666", ",", "36", ",", "x"}], "]"}]}], " ", "=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       SuperscriptBox["2", "2"], " ", "+", " ", 
       SuperscriptBox["3", "2"], " ", "+", " ", 
       SuperscriptBox["5", "2"], " ", "+"}], " ", "..."}], " ", "+", 
     SuperscriptBox[
      SubscriptBox["p", "z"], "2"]}]}], TraditionalForm]]],
 "."
}], "Text",
 CellChangeTimes->{{3.561935056421*^9, 3.5619350931140003`*^9}, {
  3.561935125425*^9, 3.561935291413*^9}, {3.579112702014756*^9, 
  3.579112708985155*^9}, {3.657422031641014*^9, 3.6574220327051497`*^9}, {
  3.6574223128657255`*^9, 3.6574223139153585`*^9}, {3.65742520956656*^9, 
  3.657425226454204*^9}}],

Cell["\<\
To really dig into this question it's helpful to look at a table of \
triangular numbers and compare it to a table of summed primes and squared \
primes to find moments when the two meet.\
\>", "Text",
 CellChangeTimes->{{3.561935303788*^9, 3.56193534348*^9}, {3.56193575792*^9, 
  3.561935758724*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"tri", "[", "x", "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", "1", ",", " ", "69"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5619345782390003`*^9, 3.561934578795*^9}, {
   3.5619346536210003`*^9, 3.561934677109*^9}, {3.561935456238*^9, 
   3.5619354604440002`*^9}, {3.561935571924*^9, 3.561935572111*^9}, {
   3.5619356636280003`*^9, 3.561935689913*^9}, 3.657420638885657*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "3", ",", "6", ",", "10", ",", "15", ",", "21", ",", "28", ",", 
   "36", ",", "45", ",", "55", ",", "66", ",", "78", ",", "91", ",", "105", 
   ",", "120", ",", "136", ",", "153", ",", "171", ",", "190", ",", "210", 
   ",", "231", ",", "253", ",", "276", ",", "300", ",", "325", ",", "351", 
   ",", "378", ",", "406", ",", "435", ",", "465", ",", "496", ",", "528", 
   ",", "561", ",", "595", ",", "630", ",", "666", ",", "703", ",", "741", 
   ",", "780", ",", "820", ",", "861", ",", "903", ",", "946", ",", "990", 
   ",", "1035", ",", "1081", ",", "1128", ",", "1176", ",", "1225", ",", 
   "1275", ",", "1326", ",", "1378", ",", "1431", ",", "1485", ",", "1540", 
   ",", "1596", ",", "1653", ",", "1711", ",", "1770", ",", "1830", ",", 
   "1891", ",", "1953", ",", "2016", ",", "2080", ",", "2145", ",", "2211", 
   ",", "2278", ",", "2346", ",", "2415"}], "}"}]], "Output",
 CellChangeTimes->{
  3.5619346773970003`*^9, 3.561935349394*^9, {3.561935456557*^9, 
   3.56193546067*^9}, 3.561935572578*^9, {3.5619356647390003`*^9, 
   3.5619356904040003`*^9}, 3.578710519877926*^9, 3.5881732936581135`*^9, 
   3.588174420141545*^9, 3.588174544083634*^9, 3.5881757698257427`*^9, 
   3.588176697419798*^9, 3.5881806629056106`*^9, 3.5890757490040817`*^9, 
   3.5890783424634194`*^9, 3.589409758415431*^9, 3.589410563767494*^9, 
   3.65413193492535*^9, 3.6541353996968203`*^9, 3.654140127904726*^9, 
   3.657140635546229*^9, 3.65716399603135*^9, 3.6571641999957504`*^9, 
   3.6574208123071785`*^9, 3.657421460131442*^9, 3.657422658784151*^9, 
   3.6574228044756517`*^9, 3.6574235744044204`*^9, 3.6574243876411886`*^9, 
   3.6574943064472494`*^9, 3.657496624013543*^9, 3.6574969883518076`*^9, 
   3.657497038349657*^9, 3.6574972626906443`*^9, 3.657521053716721*^9, 
   3.6575533342878327`*^9, 3.6575813028118844`*^9, 3.657585163644648*^9, 
   3.657590497123914*^9, 3.6575929442691617`*^9}]
}, Open  ]],

Cell["\<\
Next let\[CloseCurlyQuote]s create a quick function to sum primes and their \
squares\
\>", "Text",
 CellChangeTimes->{{3.5619353907460003`*^9, 3.56193539862*^9}, {
   3.5619360420690002`*^9, 3.5619360443389997`*^9}, {3.589411989521043*^9, 
   3.5894119897250547`*^9}, 3.6575927325252733`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"p", "[", 
   RowBox[{"m_", ",", "e_"}], "]"}], ":=", 
  RowBox[{
   UnderoverscriptBox["\[Sum]", 
    RowBox[{"x", "=", "1"}], "m"], 
   SuperscriptBox[
    RowBox[{"Prime", "[", "x", "]"}], "e"]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.561934717429*^9, 3.5619347494440002`*^9}, {
  3.561934789351*^9, 3.561934791716*^9}, {3.561934859876*^9, 
  3.561934862041*^9}, {3.561935365991*^9, 3.5619353670039997`*^9}, {
  3.561935511307*^9, 3.561935514403*^9}, {3.561935935894*^9, 
  3.561935947249*^9}}],

Cell["\<\
Now let\[CloseCurlyQuote]s see if we get any hits with triangular numbers ...\
\
\>", "Text",
 CellChangeTimes->{{3.561935406101*^9, 3.561935418582*^9}, 
   3.6575927420349813`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"p", "[", 
    RowBox[{"x", ",", "1"}], "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", "1", ",", " ", "36"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5619355540889997`*^9, 3.561935587461*^9}, {
  3.561935795955*^9, 3.561935802418*^9}, {3.561935950082*^9, 
  3.561935964226*^9}, {3.561937183257*^9, 3.5619372042679996`*^9}, {
  3.561937255273*^9, 3.561937259744*^9}, {3.5619374684230003`*^9, 
  3.561937468705*^9}, {3.56193794659*^9, 3.561937969906*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "2", ",", "5", ",", "10", ",", "17", ",", "28", ",", "41", ",", "58", ",", 
   "77", ",", "100", ",", "129", ",", "160", ",", "197", ",", "238", ",", 
   "281", ",", "328", ",", "381", ",", "440", ",", "501", ",", "568", ",", 
   "639", ",", "712", ",", "791", ",", "874", ",", "963", ",", "1060", ",", 
   "1161", ",", "1264", ",", "1371", ",", "1480", ",", "1593", ",", "1720", 
   ",", "1851", ",", "1988", ",", "2127", ",", "2276", ",", "2427"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.561935432395*^9, 3.561935554481*^9, {3.5619355844969997`*^9, 
   3.561935587651*^9}, {3.56193579709*^9, 3.561935802903*^9}, {
   3.561935964955*^9, 3.561935970137*^9}, {3.561937184311*^9, 
   3.561937205159*^9}, 3.561937260401*^9, 3.5619374691219997`*^9, {
   3.561937947549*^9, 3.561937970477*^9}, 3.578710519895927*^9, 
   3.588173293734118*^9, 3.588174420162546*^9, 3.5881745441026354`*^9, 
   3.5881757698467436`*^9, 3.588176697436799*^9, 3.5881806629206114`*^9, 
   3.589075749028083*^9, 3.5890783424814205`*^9, 3.589409758439432*^9, 
   3.5894105637854953`*^9, 3.654131934956854*^9, 3.654135399719823*^9, 
   3.654140127925729*^9, 3.65714063556623*^9, 3.657163996092358*^9, 
   3.6571642000277543`*^9, 3.6574208123366823`*^9, 3.657421460156945*^9, 
   3.6574226588091545`*^9, 3.6574228045001545`*^9, 3.6574235744294233`*^9, 
   3.6574243876686916`*^9, 3.6574943064902544`*^9, 3.657496624038046*^9, 
   3.657496988376811*^9, 3.6574970383796606`*^9, 3.6574972627381506`*^9, 
   3.6575210537387238`*^9, 3.6575533343183365`*^9, 3.6575813028343873`*^9, 
   3.657585163671151*^9, 3.657590497145917*^9, 3.6575929442901645`*^9}]
}, Open  ]],

Cell["The set of hits include {10, 28} ", "Text",
 CellChangeTimes->{{3.56193543541*^9, 3.561935486024*^9}, {
   3.5619356254040003`*^9, 3.561935628658*^9}, {3.561935781797*^9, 
   3.5619358102209997`*^9}, 3.561937477896*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Intersection", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"p", "[", 
      RowBox[{"x", ",", "1"}], "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"x", ",", " ", "1", ",", " ", "36"}], "}"}]}], "]"}], ",", " ", 
   
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"tri", "[", "x", "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"x", ",", " ", "1", ",", " ", "69"}], "}"}]}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.589413279884847*^9, 3.589413294725696*^9}, 
   3.657420639681758*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"10", ",", "28"}], "}"}]], "Output",
 CellChangeTimes->{3.5894132955207415`*^9, 3.654131934978857*^9, 
  3.6541353997378254`*^9, 3.6541401279422307`*^9, 3.657140635586231*^9, 
  3.6571639961308627`*^9, 3.6571642000502577`*^9, 3.6574208123566847`*^9, 
  3.6574214601784477`*^9, 3.6574226588301573`*^9, 3.657422804519657*^9, 
  3.6574235744484262`*^9, 3.657424387690695*^9, 3.6574943065212584`*^9, 
  3.657496624057048*^9, 3.6574969883968134`*^9, 3.657497038403164*^9, 
  3.657497262790657*^9, 3.6575210537567263`*^9, 3.6575533343468404`*^9, 
  3.6575813028588905`*^9, 3.6575851636931543`*^9, 3.657590497163419*^9, 
  3.657592944307667*^9}]
}, Open  ]],

Cell["Now let\[CloseCurlyQuote]s try squared primes.", "Text",
 CellChangeTimes->{{3.5619355065769997`*^9, 3.561935526038*^9}, {
   3.579106251117786*^9, 3.5791062517668233`*^9}, 3.6575927746331205`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"p", "[", 
    RowBox[{"x", ",", "2"}], "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", "1", ",", " ", "13"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5619355581809998`*^9, 3.561935559307*^9}, {
  3.561935984139*^9, 3.5619359871359997`*^9}, {3.561937274895*^9, 
  3.5619373194049997`*^9}, {3.5619374543310003`*^9, 3.561937459406*^9}, {
  3.561937975487*^9, 3.5619379824230003`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "4", ",", "13", ",", "38", ",", "87", ",", "208", ",", "377", ",", "666", 
   ",", "1027", ",", "1556", ",", "2397", ",", "3358", ",", "4727", ",", 
   "6408"}], "}"}]], "Output",
 CellChangeTimes->{
  3.561935560508*^9, 3.561935988281*^9, {3.561937275736*^9, 
   3.56193732004*^9}, {3.561937454874*^9, 3.561937459843*^9}, {
   3.561937976212*^9, 3.561937982817*^9}, 3.5787105199059277`*^9, 
   3.588173293803122*^9, 3.588174420185548*^9, 3.5881745441176357`*^9, 
   3.5881757698617444`*^9, 3.5881766974508*^9, 3.5881806629326124`*^9, 
   3.5890757490480843`*^9, 3.5890783424984217`*^9, 3.589409758455433*^9, 
   3.589410563800496*^9, 3.65413193500136*^9, 3.654135399755828*^9, 
   3.654140127958233*^9, 3.6571406356032324`*^9, 3.6571639961683674`*^9, 
   3.6571642000732603`*^9, 3.657420812376687*^9, 3.6574214601989503`*^9, 
   3.6574226588501596`*^9, 3.65742280453866*^9, 3.6574235744679284`*^9, 
   3.6574243877136974`*^9, 3.6574943065487623`*^9, 3.6574966240760508`*^9, 
   3.657496988416316*^9, 3.6574970384266663`*^9, 3.657497262827162*^9, 
   3.6575210537737284`*^9, 3.657553334370844*^9, 3.657581302878893*^9, 
   3.657585163714157*^9, 3.657590497180421*^9, 3.6575929443251686`*^9}]
}, Open  ]],

Cell["In this case we get hits with {666}. ", "Text",
 CellChangeTimes->{{3.5619355655220003`*^9, 3.5619355694040003`*^9}, {
  3.5619357244040003`*^9, 3.561935725832*^9}, {3.561936009176*^9, 
  3.56193601342*^9}, {3.589412043909154*^9, 3.5894121464810205`*^9}, {
  3.589413321925252*^9, 3.589413326752528*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Intersection", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"tri", "[", "x", "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"x", ",", " ", "1", ",", " ", "69"}], "}"}]}], "]"}], ",", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"p", "[", 
      RowBox[{"x", ",", "2"}], "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"x", ",", " ", "1", ",", " ", "13"}], "}"}]}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.589413329216669*^9, 3.58941336088048*^9}, 
   3.657420640370345*^9}],

Cell[BoxData[
 RowBox[{"{", "666", "}"}]], "Output",
 CellChangeTimes->{{3.5894133450495744`*^9, 3.589413361486515*^9}, 
   3.6541319350248623`*^9, 3.6541353997733297`*^9, 3.654140127975235*^9, 
   3.6571406356202335`*^9, 3.657163996206873*^9, 3.657164200096263*^9, 
   3.65742081239669*^9, 3.657421460219953*^9, 3.6574226588701625`*^9, 
   3.6574228045581627`*^9, 3.657423574486931*^9, 3.6574243877357006`*^9, 
   3.6574943065762653`*^9, 3.657496624094553*^9, 3.6574969884348183`*^9, 
   3.6574970384506693`*^9, 3.6574972628631663`*^9, 3.65752105379123*^9, 
   3.657553334398847*^9, 3.6575813029038963`*^9, 3.6575851637326593`*^9, 
   3.657590497197923*^9, 3.6575929443426714`*^9}]
}, Open  ]],

Cell["\<\
So it\[CloseCurlyQuote]s not exactly a common occurrence. What\
\[CloseCurlyQuote]s interesting though is, again, we see 10 and 666 seem to \
have something in common.

Now let\[CloseCurlyQuote]s try to sum lots of different number bases and see \
whether those numbers align with the above prime lists (these numbers should \
always be triangular numbers). 

Obviously only triangular numbers will give whole \[DoubleStruckCapitalZ]\
\[CloseCurlyQuote]s, as the command below shows ...\
\>", "Text",
 CellChangeTimes->{{3.5619360661140003`*^9, 3.561936146274*^9}, {
   3.561936359918*^9, 3.5619363860620003`*^9}, {3.5894133231063194`*^9, 
   3.589413323907365*^9}, {3.5894133928853106`*^9, 3.589413414762562*^9}, {
   3.589413463135329*^9, 3.5894134768111105`*^9}, 3.6575928271832933`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"N", "[", 
    RowBox[{"SumTriRows", "[", "x", "]"}], "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", "2", ",", " ", "12"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.589413065286573*^9, 3.589413065603591*^9}, 
   3.6574226065585194`*^9, 3.657423499564417*^9, 3.6574235341558094`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.9082238808568583`", ",", "3.`", ",", "7.375838853401325`", ",", 
   "16.39259672318487`", ",", "35.`", ",", "73.55482991806356`", ",", 
   "153.66130033523635`", ",", "320.20663007825425`", ",", "666.`", ",", 
   "1381.8763593702051`", ",", "2857.896668400256`"}], "}"}]], "Output",
 CellChangeTimes->{3.5894130667126546`*^9, 3.654131935054366*^9, 
  3.654135399792332*^9, 3.654140127994238*^9, 3.6571406356392345`*^9, 
  3.6571639962448773`*^9, 3.657164200119766*^9, 3.6574208124166927`*^9, 
  3.657421460241456*^9, 3.657422658890665*^9, 3.657422804578165*^9, 
  3.6574235745064335`*^9, 3.6574243877582035`*^9, 3.6574943066417737`*^9, 
  3.657496624113055*^9, 3.657496988454321*^9, 3.6574970384751725`*^9, 
  3.6574972629001713`*^9, 3.6575210539697533`*^9, 3.6575533344283504`*^9, 
  3.657581302925399*^9, 3.6575851637526617`*^9, 3.657590497216426*^9, 
  3.6575929443596735`*^9}]
}, Open  ]],

Cell["So just putting in tri\[CloseCurlyQuote]s ...", "Text",
 CellChangeTimes->{{3.5894134819094024`*^9, 3.5894134878487425`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"SumTriRows", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"{", 
      RowBox[{
      "3", ",", "6", ",", "10", ",", "15", ",", "21", ",", "28", ",", "36", 
       ",", "45", ",", "55"}], "}"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5894124132492785`*^9, 3.5894124290351815`*^9}, 
   3.657422607814179*^9, 3.657423501469159*^9, 3.6574235351954412`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "3", ",", "35", ",", "666", ",", "24605", ",", "1564690", ",", "152843733", 
   ",", "21251029660", ",", "3988218576606", ",", "971559132683085"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.589412415614414*^9, 3.589412429476207*^9}, 
   3.654131935078369*^9, 3.6541353998118343`*^9, 3.6541401280102396`*^9, 
   3.657140635656235*^9, 3.657163996283882*^9, 3.6571642001432695`*^9, 
   3.657420812436695*^9, 3.6574214602624583`*^9, 3.6574226589126673`*^9, 
   3.657422804597167*^9, 3.6574235745254354`*^9, 3.657424387780706*^9, 
   3.6574943066707773`*^9, 3.6574966241335583`*^9, 3.6574969884743233`*^9, 
   3.657497038500676*^9, 3.657497262940176*^9, 3.6575210539887557`*^9, 
   3.6575533345053606`*^9, 3.657581302945401*^9, 3.6575851637731643`*^9, 
   3.657590497235428*^9, 3.6575929443766756`*^9}]
}, Open  ]],

Cell["The set of hits includes {666}. ", "Text",
 CellChangeTimes->{{3.561937644795*^9, 3.561937654778*^9}, {3.561940818392*^9,
   3.561940839446*^9}, {3.5894134926410165`*^9, 3.5894134929930363`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Oddities", "Subtitle",
 CellChangeTimes->{{3.578704406342252*^9, 3.578704422489175*^9}, {
  3.5791080763741846`*^9, 3.5791080778312683`*^9}, {3.579108182135234*^9, 
  3.5791081867995005`*^9}}],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
    "], {{0, 177}, {547, 0}}, {0,
     255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> ColorProfileData[CompressedData["
1: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
ojdSOjIusjlyNsojqiJqNNoselX05RjlGH5Mdyw+NjJ2f+zMEs8lO5ZMxFnH
FcfdWKq3dMXSi8uUl6UtO7Fcejl7+dF4bHxUfEv8e3YQu5E9k+CbUJ8wzXHn
7OQ85bpwK7lTPEdeBW8y0TGxIvFxkmPS9qSpZOfkquRnfHd+Lf9Fik9KQ8ps
alDqgdRPaVFp7emE9Pj0YwI5QaqgL0MtY0XGcKZRZnHmaJZ91o6saaG/cH82
lL00u1tER3+mBsT64g3isRynnLqcN7mRuUdXyK4QrBjIM8zbnDeZ75X/7UrM
Ss7K3gKNgnUFY6tcV+1dDa1OWN27RmtN0ZqJtd5rD64jrUtd91OheWFF4av1
Uet7ilSL1haNb/De0FosVSwsvrnRYWPDJswm/qbBzVabazZ/LOGWXCo1L60q
fV/GKbv0jcU31d982pK4ZbDcpnz3VtxWwdYb25y3HayQrcivGN8euL2zkllZ
Uvlqx/IdF6sWVjXsJO0U7xytDqjurtGu2Vrzvja59nqdW117vUr95vrZXdxd
I7tddrc1qDaUNrzbw99za6/33s5G3caqfbh9OfseNUU29X/L+rZ5v/L+0v0f
DggOjB4MPdjXbNvc3KLSUt4Kt4pbpw7FHbryncd33W0mbXvbGe2lh8Fh8eEn
38d/f+OI/5Heo6yjbT/o/FDfQeso6YQ68zqnu5K7RrtjuoeP+R3r7XHo6fjR
9McDxzWO152QP1F+knSy6OSnU/mnZk5nnn52JunMeO/y3rtno89e6wvpGzzn
f+7Cea/zZ/td+09dcLxw/KL9xWOXWJe6Lttc7hywHuj4yfqnjkGbwc4h26Hu
K3ZXeoYXDZ8ccR45c9Xj6vlrvtcuX198ffhGxI1bN+Nujt7i3np8O+32izs5
d+burr2HvVdyX+Z+1QOVB40/G/zcPmozemLMY2zgYdjDu+Oc8ae/ZP/yfqLo
EfVR1aT6ZPNjy8fHp7ymrjxZ8mTiaebTuWfFv8r+Wv9c//kPv7n8NjAdPT3x
Qvji0+9lL5VeHni18FXvTPDMg9fpr+dmS94ovTn4lvW2/13Uu8m53Pf499Uf
DD70fPT/eO9T+qdP/wJOwPvu
      "], "RGB", "XYZ"], Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSizeRaw->{547, 177},
  PlotRange->{{0, 547}, {0, 177}}]], "Text",
 CellChangeTimes->{3.6571406506860948`*^9}],

Cell["Now note that:", "Text",
 CellChangeTimes->{{3.5787139701952724`*^9, 3.5787139736814723`*^9}, {
  3.5787141052990007`*^9, 3.5787141077991433`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GoldenRatio", "==", 
  FractionBox[
   RowBox[{"1", "+", 
    SqrtBox["5"]}], "2"], "\[Equal]", 
  RowBox[{
   RowBox[{"-", "2"}], "*", 
   RowBox[{"Sin", "[", 
    RowBox[{"666", "\[Degree]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.5787139758415956`*^9, 3.5787140156478724`*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.5787140163469124`*^9, 3.5881732941771436`*^9, 
  3.5881744202725525`*^9, 3.58817454419164*^9, 3.588175769939749*^9, 
  3.5881766975208035`*^9, 3.588180663000616*^9, 3.5890757491430902`*^9, 
  3.5890783425704255`*^9, 3.589409758560439*^9, 3.5894105638705*^9, 
  3.6541319351433773`*^9, 3.6541353998428383`*^9, 3.654140128040243*^9, 
  3.657140635708238*^9, 3.6571639963238873`*^9, 3.6571642001682725`*^9, 
  3.6574208124616985`*^9, 3.657421460282961*^9, 3.6574226589331703`*^9, 
  3.65742280461717*^9, 3.657423574544438*^9, 3.6574243878027086`*^9, 
  3.657494306707282*^9, 3.65749662415256*^9, 3.657496988493826*^9, 
  3.657497038525179*^9, 3.6574972629821815`*^9, 3.657521054007758*^9, 
  3.6575533345298634`*^9, 3.657581302965904*^9, 3.657585163793167*^9, 
  3.65759049725543*^9, 3.6575929443936777`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"666", "==", 
  RowBox[{"1", "+", "5", "+", "10", "+", "50", "+", "100", "+", "500"}], 
  "\[Equal]", 
  RowBox[{"1", "+", 
   RowBox[{"(", 
    RowBox[{"1", "*", 
     StyleBox["5",
      FontWeight->"Plain",
      FontVariations->{"Underline"->True}]}], 
    StyleBox[")",
     FontWeight->"Plain",
     FontVariations->{"Underline"->True}]}], "+", 
   RowBox[{"(", 
    RowBox[{"5", "*", 
     StyleBox["2",
      FontWeight->"Plain",
      FontVariations->{"Underline"->True}]}], 
    StyleBox[")",
     FontWeight->"Plain",
     FontVariations->{"Underline"->True}]}], "+", 
   RowBox[{"(", 
    RowBox[{"10", "*", 
     StyleBox["5",
      FontWeight->"Plain",
      FontVariations->{"Underline"->True}]}], 
    StyleBox[")",
     FontWeight->"Plain",
     FontVariations->{"Underline"->True}]}], "+", 
   RowBox[{"(", 
    RowBox[{"50", "*", 
     StyleBox["2",
      FontWeight->"Plain",
      FontVariations->{"Underline"->True}]}], 
    StyleBox[")",
     FontWeight->"Plain",
     FontVariations->{"Underline"->True}]}], "+", 
   RowBox[{"(", 
    RowBox[{"100", "*", 
     StyleBox["5",
      FontWeight->"Plain",
      FontVariations->{"Underline"->True}]}], 
    StyleBox[")",
     FontWeight->"Plain",
     FontVariations->{"Underline"->True}]}]}]}]], "Input",
 CellChangeTimes->{{3.5787140241273575`*^9, 3.5787140301677027`*^9}, {
  3.5787141136574783`*^9, 3.578714134749685*^9}, {3.5787151441344185`*^9, 
  3.5787151576201897`*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.5787141357567425`*^9, 3.588173294246147*^9, 
  3.5881744202955537`*^9, 3.588174544206641*^9, 3.58817576995575*^9, 
  3.5881766975338044`*^9, 3.588180663012617*^9, 3.589075749161091*^9, 
  3.5890783425844264`*^9, 3.58940975857644*^9, 3.589410563885501*^9, 
  3.65413193516438*^9, 3.654135399860341*^9, 3.6541401280562453`*^9, 
  3.657140635723239*^9, 3.657163996359892*^9, 3.657164200188775*^9, 
  3.6574208124797*^9, 3.6574214603039637`*^9, 3.6574226589531727`*^9, 
  3.6574228046366725`*^9, 3.6574235745639405`*^9, 3.6574243878252115`*^9, 
  3.657494306731285*^9, 3.6574966241740627`*^9, 3.6574969886058397`*^9, 
  3.6574970385501823`*^9, 3.6574972630141854`*^9, 3.65752105402576*^9, 
  3.6575533345518665`*^9, 3.6575813029864063`*^9, 3.6575851638101687`*^9, 
  3.6575904972804337`*^9, 3.6575929444101796`*^9}]
}, Open  ]],

Cell[TextData[{
 "The ",
 Cell[BoxData[
  FormBox[
   RowBox[{"1", "+", "5", "+", "10", "+", "50", "+", "100", "+", "500"}], 
   TraditionalForm]]],
 " sequence is the same as I + V + X + L + C + D. A variation of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"5", ",", "2", ",", "5", ",", "2", ",", "5"}], TraditionalForm]]],
 "\[Ellipsis] where the new number is multiplied by the previous one. Now, \
note, as stated above ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Phi]", " ", "=", " ", 
    RowBox[{
     SqrtBox[
      RowBox[{"1", "+", 
       StyleBox["5",
        FontWeight->"Bold",
        FontVariations->{"Underline"->True}]}]], "/", 
     StyleBox["2",
      FontWeight->"Bold",
      FontVariations->{"Underline"->True}]}]}], TraditionalForm]]],
 ". As strange as this is, it appears there\[CloseCurlyQuote]s an actual \
mapping between an irrational number (\[Phi]), an integer (666), and the same \
number as a degree measure (",
 Cell[BoxData[
  FormBox[
   RowBox[{"666", "\[Degree]"}], TraditionalForm]]],
 "). \n\nThe ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{"5", ",", "2"}], "}"}], TraditionalForm]]],
 " relationship appears to be key:"
}], "Text",
 CellChangeTimes->{{3.578714176157053*^9, 3.578714196991245*^9}, {
  3.578714244502962*^9, 3.5787142891255145`*^9}, {3.5787146707533426`*^9, 
  3.578714810964362*^9}, {3.5787148782832127`*^9, 3.578714909416993*^9}, {
  3.5787149850113173`*^9, 3.57871500499546*^9}, {3.5787151883519473`*^9, 
  3.5787152176456227`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   UnderoverscriptBox["\[Sum]", 
    RowBox[{"y", "=", "1"}], "3"], 
   SuperscriptBox["5", "y"]}], "+", 
  RowBox[{
   UnderoverscriptBox["\[Sum]", 
    RowBox[{"x", "=", "1"}], "8"], 
   SuperscriptBox["2", "x"]}], "+", "1"}]], "Input",
 CellChangeTimes->{{3.5787098847946014`*^9, 3.578709905251771*^9}}],

Cell[BoxData["666"], "Output",
 CellChangeTimes->{3.578709905937811*^9, 3.578710519987932*^9, 
  3.588173294319152*^9, 3.588174420313555*^9, 3.588174544222642*^9, 
  3.588175769970751*^9, 3.5881766975478053`*^9, 3.5881806630256176`*^9, 
  3.5890757491810923`*^9, 3.5890783425984273`*^9, 3.589409758593441*^9, 
  3.589410563899502*^9, 3.6541319351893835`*^9, 3.654135399877843*^9, 
  3.6541401280722475`*^9, 3.65714063574024*^9, 3.657163996399397*^9, 
  3.657164200213278*^9, 3.657420812500203*^9, 3.6574214603244667`*^9, 
  3.657422658973175*^9, 3.657422804656675*^9, 3.657423574582943*^9, 
  3.6574243878472147`*^9, 3.6574943067697897`*^9, 3.6574966241935654`*^9, 
  3.6574969886248426`*^9, 3.6574970385741854`*^9, 3.6574972630526905`*^9, 
  3.657521054044263*^9, 3.6575533345763693`*^9, 3.657581303005909*^9, 
  3.6575851638266706`*^9, 3.6575904973009367`*^9, 3.6575929444271817`*^9}]
}, Open  ]],

Cell["\<\
Now note how each element from the above summation breaks down over the \
individual rows of tri[4] ...\
\>", "Text",
 CellChangeTimes->{{3.5787100180972257`*^9, 3.5787100322190332`*^9}, {
   3.5791053279999866`*^9, 3.5791053373375206`*^9}, {3.579105408286579*^9, 
   3.579105421515335*^9}, {3.57911279771023*^9, 3.5791127993313227`*^9}, 
   3.657420641163946*^9}],

Cell[BoxData[GridBox[{
   {" ", 
    StyleBox["rows",
     FontSlant->"Italic"], 
    StyleBox["equivalancy",
     FontSlant->"Italic"], 
    StyleBox[
     RowBox[{
      SuperscriptBox["5", "x"], "+", 
      RowBox[{
       SuperscriptBox["2", "x"], " ", "breakdown"}]}],
     FontSlant->"Italic"], 
    StyleBox[
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        SuperscriptBox["5", "x"], ",", 
        SuperscriptBox["2", "x"]}], "}"}], " ", "sum"}],
     FontSlant->"Italic"]},
   {
    StyleBox[
     RowBox[{"a", ")"}],
     FontSlant->"Italic"], 
    StyleBox[
     RowBox[{"9", " ", "=", " "}],
     FontWeight->"Bold"], 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["5", 
         StyleBox["1",
          FontSize->11,
          FontColor->RGBColor[0., 0., 1.]]], "*", 
        StyleBox["2",
         FontColor->RGBColor[0., 1., 0.]]}], ")"}], "-", 
      StyleBox["1",
       FontColor->RGBColor[1., 0., 0.]]}], "=", "\[Ellipsis]"}], 
    RowBox[{
     RowBox[{
      SuperscriptBox["5", "1"], "+", 
      SuperscriptBox["2", "2"]}], "="}], 
    StyleBox["9",
     FontWeight->"Bold"]},
   {
    StyleBox[
     RowBox[{"b", ")"}],
     FontSlant->"Italic"], 
    StyleBox[
     RowBox[{"78", " ", "=", " "}],
     FontWeight->"Bold"], 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["5", 
         StyleBox["2",
          FontSize->11,
          FontColor->RGBColor[0., 0., 1.]]], "*", 
        StyleBox["3",
         FontColor->RGBColor[0., 1., 0.]]}], ")"}], "+", 
      StyleBox["3",
       FontColor->RGBColor[1., 0., 0.]]}], ";", " ", 
     StyleBox[
      RowBox[{"vs", "."}],
      FontSlant->"Italic"]}], 
    RowBox[{
     RowBox[{
      SuperscriptBox["5", "2"], "+", 
      SuperscriptBox["2", "5"], "+", 
      SuperscriptBox["2", "4"], "+", 
      SuperscriptBox["2", "1"], "+", "1"}], "="}], 
    StyleBox["76",
     FontWeight->"Bold"]},
   {
    StyleBox[
     RowBox[{"c", ")"}],
     FontSlant->"Italic"], 
    StyleBox[
     RowBox[{"456", " ", "="}],
     FontWeight->"Bold"], "\[Ellipsis]", 
    RowBox[{
     RowBox[{
      SuperscriptBox["2", "8"], "+", 
      SuperscriptBox["2", "7"], "+", 
      SuperscriptBox["2", "6"], "+", 
      SuperscriptBox["2", "3"]}], "="}], 
    StyleBox["456",
     FontWeight->"Bold"]},
   {
    StyleBox[
     RowBox[{"d", ")"}],
     FontSlant->"Italic"], 
    StyleBox[
     RowBox[{"123", " ", "="}],
     FontWeight->"Bold"], 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["5", 
         StyleBox["3",
          FontSize->11,
          FontColor->RGBColor[0., 0., 1.]]], "*", 
        StyleBox["1",
         FontColor->RGBColor[0., 1., 0.]]}], ")"}], "-", 
      StyleBox["2",
       FontColor->RGBColor[1., 0., 0.]]}], ";", " ", 
     RowBox[{
      StyleBox["vs",
       FontSlant->"Italic"], "."}]}], 
    RowBox[{
     SuperscriptBox["5", "3"], "="}], 
    StyleBox["125",
     FontWeight->"Bold"]}
  }]], "Text",
 CellChangeTimes->{{3.5791047750053573`*^9, 3.579104904699775*^9}, {
   3.579104968022397*^9, 3.579105091699471*^9}, {3.5791051259014273`*^9, 
   3.579105130331681*^9}, {3.579105206463035*^9, 3.5791052700226707`*^9}, 
   3.579105442451533*^9, {3.579106004811698*^9, 3.5791060053857307`*^9}, 
   3.579450521982953*^9},
 FontFamily->"Times New Roman"],

Cell[TextData[{
 "There seems to be some sort of \[OpenCurlyDoubleQuote]integer \
reciprocalness\[CloseCurlyDoubleQuote] (",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"1", "*", ".5"}], "=", 
    FractionBox["1", "2"]}], TraditionalForm]]],
 ") where 5 mimics 2, and vice versa, on the flipside of the radix ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     FractionBox["5", "2"], "=", "2.5"}], ")"}], TraditionalForm]]],
 ". Almost as though the numbers somehow intrinsically flip about each \
other."
}], "Text",
 CellChangeTimes->{{3.57871005592939*^9, 3.578710065938962*^9}, {
  3.5787106434869957`*^9, 3.578710726638752*^9}, {3.5787108269544897`*^9, 
  3.5787108850768137`*^9}, {3.578711022739688*^9, 3.578711036607481*^9}, {
  3.5787148214139595`*^9, 3.578714841439105*^9}, {3.5787149329173374`*^9, 
  3.578714934203411*^9}, {3.578715045635784*^9, 3.5787150933835154`*^9}, {
  3.578715277185028*^9, 3.5787152784210987`*^9}, {3.5787170242549553`*^9, 
  3.5787170408649054`*^9}, {3.5852244313242707`*^9, 3.585224447780212*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"r", "[", "n_", "]"}], ":=", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"x", "=", "1"}], "n"], 
     RowBox[{
      SuperscriptBox["5", "x"], "*", 
      SuperscriptBox["2", 
       RowBox[{"(", 
        RowBox[{"x", "-", "1"}], ")"}]]}]}], "+", 
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"y", "=", "1"}], "n"], 
     RowBox[{
      FractionBox[
       RowBox[{
        SuperscriptBox["2", "y"], "*", 
        SuperscriptBox["5", 
         RowBox[{"(", 
          RowBox[{"y", "-", "1"}], ")"}]]}], "2"], Cell[""]}]}]}], 
   ")"}]}]], "Input",
 CellChangeTimes->{{3.5787099231387944`*^9, 3.57870996747033*^9}, {
  3.578710514842638*^9, 3.578710525571252*^9}, {3.5787105720689116`*^9, 
  3.5787106129072466`*^9}, {3.5787109450192423`*^9, 3.578710972406809*^9}, {
  3.5791140438655057`*^9, 3.579114063712641*^9}, {3.579114226168933*^9, 
  3.57911423119022*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"r", "[", "x", "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", "1", ",", " ", "5"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5787105307125454`*^9, 3.578710541545165*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"5", "+", 
    InterpretationBox[Cell[""],
     TextCell[""]]}], ",", 
   RowBox[{"55", "+", 
    RowBox[{"11", " ", 
     InterpretationBox[Cell[""],
      TextCell[""]]}]}], ",", 
   RowBox[{"555", "+", 
    RowBox[{"111", " ", 
     InterpretationBox[Cell[""],
      TextCell[""]]}]}], ",", 
   RowBox[{"5555", "+", 
    RowBox[{"1111", " ", 
     InterpretationBox[Cell[""],
      TextCell[""]]}]}], ",", 
   RowBox[{"55555", "+", 
    RowBox[{"11111", " ", 
     InterpretationBox[Cell[""],
      TextCell[""]]}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.57871054179618*^9, {3.5787105826415157`*^9, 3.5787106156014013`*^9}, {
   3.5787109509935846`*^9, 3.5787109743399196`*^9}, 3.588173294394156*^9, 
   3.588174420336556*^9, 3.588174544241643*^9, 3.588175769990752*^9, 
   3.588176697564806*^9, 3.5881806630396185`*^9, 3.589075749206094*^9, 
   3.589078342615428*^9, 3.5894097586154423`*^9, 3.589410563916503*^9, 
   3.6541319352233877`*^9, 3.6541353998993454`*^9, 3.65414012809275*^9, 
   3.657140635759241*^9, 3.657163996446903*^9, 3.657164200244282*^9, 
   3.657420812531207*^9, 3.65742146034997*^9, 3.6574226589976788`*^9, 
   3.657422804680678*^9, 3.6574235746079464`*^9, 3.657424387873718*^9, 
   3.657494306808795*^9, 3.6574966242175684`*^9, 3.657496988646845*^9, 
   3.6574970386036887`*^9, 3.6574972631061974`*^9, 3.657521054068266*^9, 
   3.6575533346073737`*^9, 3.657581303031412*^9, 3.657585163848674*^9, 
   3.65759049732994*^9, 3.6575929444486847`*^9}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1006, 948},
WindowMargins->{{-1115, Automatic}, {Automatic, -59}},
PrintingCopies->1,
PrintingPageRange->{Automatic, Automatic},
PrivateNotebookOptions->{"VersionedStylesheet"->{"Default.nb"[8.] -> True}},
FrontEndVersion->"9.0 for Microsoft Windows (64-bit) (January 25, 2013)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell[
    StyleData["Text"], FontSize -> 16]}, Visible -> False, FrontEndVersion -> 
  "9.0 for Microsoft Windows (64-bit) (January 25, 2013)", StyleDefinitions -> 
  "PrivateStylesheetFormatting.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[567, 22, 190, 3, 56, "Subtitle"],
Cell[760, 27, 284, 5, 32, "Text"],
Cell[1047, 34, 25535, 513, 772, "Text"],
Cell[CellGroupData[{
Cell[26607, 551, 137, 2, 39, "Subsubsection"],
Cell[26747, 555, 571, 14, 52, "Input"],
Cell[27321, 571, 530, 13, 31, "Input"],
Cell[27854, 586, 130, 2, 31, "Input"],
Cell[27987, 590, 454, 13, 31, "Input"],
Cell[28444, 605, 286, 8, 31, "Input"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[28779, 619, 110, 1, 56, "Subtitle"],
Cell[28892, 622, 443, 8, 32, "Text"],
Cell[29338, 632, 608, 12, 49, "Input",
 InitializationCell->True],
Cell[29949, 646, 984, 23, 106, "Text"],
Cell[CellGroupData[{
Cell[30958, 673, 193, 3, 31, "Input"],
Cell[31154, 678, 1049, 15, 31, "Output"]
}, Open  ]],
Cell[32218, 696, 181, 9, 137, "Text"],
Cell[CellGroupData[{
Cell[32424, 709, 149, 3, 31, "Input"],
Cell[32576, 714, 1080, 15, 31, "Output"]
}, Open  ]],
Cell[33671, 732, 276, 9, 116, "Text"],
Cell[CellGroupData[{
Cell[33972, 745, 149, 3, 31, "Input"],
Cell[34124, 750, 1030, 14, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[35191, 769, 142, 3, 31, "Input"],
Cell[35336, 774, 1041, 14, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[36414, 793, 142, 3, 31, "Input"],
Cell[36559, 798, 474, 9, 31, "Output"]
}, Open  ]],
Cell[37048, 810, 1312, 30, 75, "Text"],
Cell[CellGroupData[{
Cell[38385, 844, 276, 6, 31, "Input"],
Cell[38664, 852, 1118, 16, 31, "Output"]
}, Open  ]],
Cell[39797, 871, 1649, 40, 54, "Text"],
Cell[CellGroupData[{
Cell[41471, 915, 402, 11, 31, "Input"],
Cell[41876, 928, 655, 9, 31, "Output"]
}, Open  ]],
Cell[42546, 940, 798, 17, 32, "Text"],
Cell[43347, 959, 4837, 100, 252, "Text"],
Cell[48187, 1061, 347, 8, 31, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[48559, 1073, 482, 11, 31, "Input"],
Cell[49044, 1086, 917, 14, 31, "Output"]
}, Open  ]],
Cell[49976, 1103, 520, 9, 32, "Text"],
Cell[CellGroupData[{
Cell[50521, 1116, 145, 3, 31, "Input"],
Cell[50669, 1121, 468, 9, 31, "Output"]
}, Open  ]],
Cell[51152, 1133, 1037, 18, 179, "Text"],
Cell[52192, 1153, 217, 8, 95, "Text"],
Cell[52412, 1163, 3041, 85, 105, "Text"],
Cell[55456, 1250, 428, 15, 46, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[55909, 1269, 204, 3, 31, "Input"],
Cell[56116, 1274, 872, 13, 31, "Output"]
}, Open  ]],
Cell[57003, 1290, 119, 1, 32, "Text"],
Cell[CellGroupData[{
Cell[57147, 1295, 149, 3, 31, "Input"],
Cell[57299, 1300, 820, 11, 31, "Output"]
}, Open  ]],
Cell[58134, 1314, 152, 3, 32, "Text"],
Cell[CellGroupData[{
Cell[58311, 1321, 469, 14, 31, "Input"],
Cell[58783, 1337, 1083, 15, 31, "Output"]
}, Open  ]],
Cell[59881, 1355, 94, 1, 32, "Text"],
Cell[CellGroupData[{
Cell[60000, 1360, 268, 9, 58, "Input"],
Cell[60271, 1371, 118, 2, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[60426, 1378, 608, 18, 60, "Input"],
Cell[61037, 1398, 1130, 16, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[62204, 1419, 1070, 27, 60, "Input"],
Cell[63277, 1448, 1257, 18, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[64571, 1471, 867, 21, 60, "Input"],
Cell[65441, 1494, 1250, 18, 31, "Output"]
}, Open  ]],
Cell[66706, 1515, 6046, 121, 516, "Text"],
Cell[CellGroupData[{
Cell[72777, 1640, 351, 9, 31, "Input"],
Cell[73131, 1651, 645, 10, 31, "Output"]
}, Open  ]],
Cell[73791, 1664, 424, 7, 32, "Text"],
Cell[CellGroupData[{
Cell[74240, 1675, 489, 11, 31, "Input"],
Cell[74732, 1688, 745, 11, 31, "Output"]
}, Open  ]],
Cell[75492, 1702, 305, 5, 32, "Text"],
Cell[CellGroupData[{
Cell[75822, 1711, 602, 17, 55, "Input"],
Cell[76427, 1730, 1146, 26, 46, "Output"]
}, Open  ]],
Cell[77588, 1759, 6092, 121, 418, "Text"],
Cell[CellGroupData[{
Cell[83705, 1884, 285, 8, 55, "Input"],
Cell[83993, 1894, 668, 13, 46, "Output"]
}, Open  ]],
Cell[84676, 1910, 1567, 39, 162, "Text"],
Cell[86246, 1951, 1067, 23, 46, "Input",
 InitializationCell->True],
Cell[87316, 1976, 757, 18, 53, "Text"],
Cell[CellGroupData[{
Cell[88098, 1998, 611, 12, 31, "Input"],
Cell[88712, 2012, 1531, 22, 31, "Output"]
}, Open  ]],
Cell[90258, 2037, 595, 12, 53, "Text"],
Cell[90856, 2051, 790, 12, 32, "Text"],
Cell[91649, 2065, 805, 21, 46, "Input"],
Cell[CellGroupData[{
Cell[92479, 2090, 418, 9, 31, "Input"],
Cell[92900, 2101, 579, 9, 31, "Output"]
}, Open  ]],
Cell[93494, 2113, 707, 19, 38, "Text"],
Cell[CellGroupData[{
Cell[94226, 2136, 421, 12, 46, "Input"],
Cell[94650, 2150, 581, 12, 46, "Output"]
}, Open  ]],
Cell[95246, 2165, 478, 11, 32, "Text"],
Cell[95727, 2178, 158353, 2601, 381, "Text"],
Cell[254083, 4781, 244, 3, 32, "Text"],
Cell[254330, 4786, 672, 19, 55, "Input"],
Cell[255005, 4807, 281, 9, 32, "Text"],
Cell[CellGroupData[{
Cell[255311, 4820, 285, 7, 31, "Input"],
Cell[255599, 4829, 1251, 39, 31, "Output"]
}, Open  ]],
Cell[256865, 4871, 590, 10, 74, "Text"],
Cell[CellGroupData[{
Cell[257480, 4885, 828, 22, 58, "Input"],
Cell[258311, 4909, 1089, 16, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[259437, 4930, 888, 22, 58, "Input"],
Cell[260328, 4954, 1222, 17, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[261587, 4976, 847, 22, 58, "Input"],
Cell[262437, 5000, 1167, 17, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[263641, 5022, 807, 22, 58, "Input"],
Cell[264451, 5046, 507, 10, 31, "Output"]
}, Open  ]],
Cell[264973, 5059, 773, 15, 96, "Text"],
Cell[CellGroupData[{
Cell[265771, 5078, 428, 13, 46, "Input"],
Cell[266202, 5093, 1242, 21, 31, "Output"]
}, Open  ]],
Cell[267459, 5117, 198, 4, 32, "Text"],
Cell[CellGroupData[{
Cell[267682, 5125, 315, 9, 31, "Input"],
Cell[268000, 5136, 1048, 15, 31, "Output"]
}, Open  ]],
Cell[269063, 5154, 1148, 30, 55, "Text"],
Cell[CellGroupData[{
Cell[270236, 5188, 1868, 39, 58, "Input",
 InitializationCell->True],
Cell[272107, 5229, 1209, 40, 54, "Output"]
}, Open  ]],
Cell[273331, 5272, 201, 2, 32, "Text"],
Cell[CellGroupData[{
Cell[273557, 5278, 450, 10, 31, "Input"],
Cell[274010, 5290, 1029, 16, 31, "Output"]
}, Open  ]],
Cell[275054, 5309, 489, 11, 33, "Text"],
Cell[275546, 5322, 1028, 24, 52, "Input"],
Cell[CellGroupData[{
Cell[276599, 5350, 476, 10, 31, "Input"],
Cell[277078, 5362, 475, 8, 31, "Output"]
}, Open  ]],
Cell[277568, 5373, 159, 3, 32, "Text"],
Cell[277730, 5378, 176, 3, 31, "Input"],
Cell[277909, 5383, 1590, 48, 73, "Text"],
Cell[CellGroupData[{
Cell[279524, 5435, 1013, 18, 31, "Input",
 InitializationCell->True],
Cell[280540, 5455, 1065, 30, 54, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[281642, 5490, 441, 10, 31, "Input"],
Cell[282086, 5502, 711, 11, 31, "Output"]
}, Open  ]],
Cell[282812, 5516, 756, 16, 33, "Text"],
Cell[CellGroupData[{
Cell[283593, 5536, 1806, 38, 57, "Input",
 InitializationCell->True],
Cell[285402, 5576, 1610, 38, 54, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[287049, 5619, 447, 10, 31, "Input"],
Cell[287499, 5631, 1624, 23, 31, "Output"]
}, Open  ]],
Cell[289138, 5657, 399, 11, 32, "Text"],
Cell[CellGroupData[{
Cell[289562, 5672, 338, 8, 57, "Input"],
Cell[289903, 5682, 1159, 16, 31, "Output"]
}, Open  ]],
Cell[291077, 5701, 261, 3, 32, "Text"],
Cell[CellGroupData[{
Cell[291363, 5708, 869, 18, 58, "Input",
 InitializationCell->True],
Cell[292235, 5728, 2134, 73, 107, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[294406, 5806, 309, 5, 31, "Input"],
Cell[294718, 5813, 1083, 15, 31, "Output"]
}, Open  ]],
Cell[295816, 5831, 183, 4, 32, "Text"],
Cell[CellGroupData[{
Cell[296024, 5839, 336, 8, 31, "Input"],
Cell[296363, 5849, 1102, 16, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[297502, 5870, 555, 12, 31, "Input"],
Cell[298060, 5884, 1547, 36, 31, "Output"]
}, Open  ]],
Cell[299622, 5923, 420, 10, 74, "Text"],
Cell[CellGroupData[{
Cell[300067, 5937, 285, 7, 57, "Input"],
Cell[300355, 5946, 475, 9, 31, "Output"]
}, Open  ]],
Cell[300845, 5958, 227, 6, 33, "Text"],
Cell[CellGroupData[{
Cell[301097, 5968, 70, 1, 31, "Input"],
Cell[301170, 5971, 627, 9, 31, "Output"]
}, Open  ]],
Cell[301812, 5983, 153, 3, 32, "Text"],
Cell[CellGroupData[{
Cell[301990, 5990, 449, 10, 57, "Input"],
Cell[302442, 6002, 609, 15, 45, "Output"]
}, Open  ]],
Cell[303066, 6020, 92, 1, 32, "Text"],
Cell[CellGroupData[{
Cell[303183, 6025, 142, 3, 31, "Input"],
Cell[303328, 6030, 905, 13, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[304270, 6048, 244, 7, 31, "Input"],
Cell[304517, 6057, 928, 25, 46, "Output"]
}, Open  ]],
Cell[305460, 6085, 2499, 70, 113, "Text"],
Cell[307962, 6157, 1737, 40, 140, "Text"],
Cell[CellGroupData[{
Cell[309724, 6201, 154, 3, 31, "Input"],
Cell[309881, 6206, 791, 11, 31, "Output"]
}, Open  ]],
Cell[310687, 6220, 151, 3, 32, "Text"],
Cell[CellGroupData[{
Cell[310863, 6227, 150, 3, 31, "Input"],
Cell[311016, 6232, 925, 17, 46, "Output"]
}, Open  ]],
Cell[311956, 6252, 206, 5, 32, "Text"],
Cell[CellGroupData[{
Cell[312187, 6261, 154, 3, 31, "Input"],
Cell[312344, 6266, 798, 11, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[313179, 6282, 547, 12, 31, "Input"],
Cell[313729, 6296, 2333, 65, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[316099, 6366, 361, 10, 57, "Input"],
Cell[316463, 6378, 1149, 20, 45, "Output"]
}, Open  ]],
Cell[317627, 6401, 1400, 29, 76, "Text"],
Cell[CellGroupData[{
Cell[319052, 6434, 406, 11, 57, "Input"],
Cell[319461, 6447, 1161, 19, 45, "Output"]
}, Open  ]],
Cell[320637, 6469, 1352, 35, 97, "Text"],
Cell[CellGroupData[{
Cell[322014, 6508, 165, 3, 31, "Input"],
Cell[322182, 6513, 612, 13, 46, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[322831, 6531, 164, 3, 31, "Input"],
Cell[322998, 6536, 649, 13, 46, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[323684, 6554, 499, 13, 57, "Input"],
Cell[324186, 6569, 536, 7, 31, "Output"]
}, Open  ]],
Cell[324737, 6579, 127, 1, 32, "Text"],
Cell[324867, 6582, 679, 15, 58, "Text"],
Cell[CellGroupData[{
Cell[325571, 6601, 486, 13, 31, "Input"],
Cell[326060, 6616, 1728, 59, 31, "Output"]
}, Open  ]],
Cell[327803, 6678, 906, 22, 80, "Text"],
Cell[328712, 6702, 577, 9, 32, "Text"],
Cell[CellGroupData[{
Cell[329314, 6715, 338, 8, 31, "Input"],
Cell[329655, 6725, 3376, 56, 512, "Output"]
}, Open  ]],
Cell[333046, 6784, 187, 4, 32, "Text"],
Cell[CellGroupData[{
Cell[333258, 6792, 175, 4, 33, "Input"],
Cell[333436, 6798, 1265, 25, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[334738, 6828, 155, 4, 39, "Input"],
Cell[334896, 6834, 483, 9, 31, "Output"]
}, Open  ]],
Cell[335394, 6846, 788, 20, 95, "Text"],
Cell[CellGroupData[{
Cell[336207, 6870, 292, 7, 57, "Input"],
Cell[336502, 6879, 575, 11, 31, "Output"]
}, Open  ]],
Cell[337092, 6893, 841, 17, 55, "Text"],
Cell[CellGroupData[{
Cell[337958, 6914, 238, 5, 52, "Input"],
Cell[338199, 6921, 561, 8, 31, "Output"]
}, Open  ]],
Cell[338775, 6932, 245, 5, 32, "Text"],
Cell[CellGroupData[{
Cell[339045, 6941, 295, 9, 46, "Input"],
Cell[339343, 6952, 1712, 38, 151, "Output"]
}, Open  ]],
Cell[341070, 6993, 2645, 64, 171, "Text"],
Cell[343718, 7059, 335, 9, 32, "Text"],
Cell[CellGroupData[{
Cell[344078, 7072, 228, 6, 57, "Input"],
Cell[344309, 7080, 468, 9, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[344814, 7094, 267, 7, 57, "Input"],
Cell[345084, 7103, 1084, 15, 31, "Output"]
}, Open  ]],
Cell[346183, 7121, 248, 5, 53, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[346468, 7131, 114, 1, 56, "Subtitle"],
Cell[CellGroupData[{
Cell[346607, 7136, 138, 1, 86, "Section"],
Cell[346748, 7139, 1423, 31, 53, "Text"],
Cell[CellGroupData[{
Cell[348196, 7174, 847, 17, 31, "Input"],
Cell[349046, 7193, 590, 22, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[349673, 7220, 869, 17, 31, "Input"],
Cell[350545, 7239, 489, 19, 31, "Output"]
}, Open  ]],
Cell[351049, 7261, 541, 17, 32, "Text"],
Cell[CellGroupData[{
Cell[351615, 7282, 334, 7, 31, "Input"],
Cell[351952, 7291, 590, 15, 45, "Output"]
}, Open  ]],
Cell[352557, 7309, 516, 11, 32, "Text"],
Cell[CellGroupData[{
Cell[353098, 7324, 189, 5, 31, "Input"],
Cell[353290, 7331, 819, 15, 45, "Output"]
}, Open  ]],
Cell[354124, 7349, 214, 2, 32, "Text"],
Cell[CellGroupData[{
Cell[354363, 7355, 670, 13, 31, "Input"],
Cell[355036, 7370, 1083, 19, 45, "Output"]
}, Open  ]],
Cell[356134, 7392, 845, 25, 32, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[357016, 7422, 375, 4, 86, "Section"],
Cell[357394, 7428, 199, 4, 32, "Text"],
Cell[CellGroupData[{
Cell[357618, 7436, 328, 7, 31, "Input"],
Cell[357949, 7445, 916, 15, 31, "Output"]
}, Open  ]],
Cell[358880, 7463, 494, 13, 32, "Text"],
Cell[CellGroupData[{
Cell[359399, 7480, 578, 11, 31, "Input"],
Cell[359980, 7493, 927, 18, 45, "Output"]
}, Open  ]],
Cell[360922, 7514, 360, 10, 32, "Text"],
Cell[CellGroupData[{
Cell[361307, 7528, 153, 3, 31, "Input"],
Cell[361463, 7533, 616, 9, 31, "Output"]
}, Open  ]],
Cell[362094, 7545, 152, 2, 32, "Text"],
Cell[CellGroupData[{
Cell[362271, 7551, 402, 7, 31, "Input"],
Cell[362676, 7560, 733, 10, 31, "Output"]
}, Open  ]],
Cell[363424, 7573, 251, 5, 32, "Text"],
Cell[CellGroupData[{
Cell[363700, 7582, 556, 12, 31, "Input"],
Cell[364259, 7596, 1940, 64, 31, "Output"]
}, Open  ]],
Cell[366214, 7663, 2064, 63, 119, "Text"],
Cell[CellGroupData[{
Cell[368303, 7730, 576, 13, 31, "Input"],
Cell[368882, 7745, 966, 30, 31, "Output"]
}, Open  ]],
Cell[369863, 7778, 457, 12, 32, "Text"],
Cell[CellGroupData[{
Cell[370345, 7794, 486, 9, 31, "Input"],
Cell[370834, 7805, 835, 16, 45, "Output"]
}, Open  ]],
Cell[371684, 7824, 251, 5, 32, "Text"],
Cell[CellGroupData[{
Cell[371960, 7833, 579, 12, 31, "Input"],
Cell[372542, 7847, 1942, 65, 31, "Output"]
}, Open  ]],
Cell[374499, 7915, 739, 21, 32, "Text"],
Cell[CellGroupData[{
Cell[375263, 7940, 196, 3, 31, "Input"],
Cell[375462, 7945, 710, 10, 31, "Output"]
}, Open  ]],
Cell[376187, 7958, 1615, 57, 53, "Text"],
Cell[CellGroupData[{
Cell[377827, 8019, 409, 7, 49, "Subsection"],
Cell[378239, 8028, 204, 2, 32, "Text"],
Cell[CellGroupData[{
Cell[378468, 8034, 372, 7, 31, "Input"],
Cell[378843, 8043, 819, 15, 45, "Output"]
}, Open  ]],
Cell[379677, 8061, 86, 1, 32, "Text"],
Cell[CellGroupData[{
Cell[379788, 8066, 149, 3, 31, "Input"],
Cell[379940, 8071, 625, 9, 31, "Output"]
}, Open  ]],
Cell[380580, 8083, 1451, 39, 118, "Text"],
Cell[CellGroupData[{
Cell[382056, 8126, 150, 2, 31, "Input"],
Cell[382209, 8130, 734, 11, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[382980, 8146, 153, 3, 31, "Input"],
Cell[383136, 8151, 677, 9, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[383850, 8165, 211, 5, 31, "Input"],
Cell[384064, 8172, 790, 15, 45, "Output"]
}, Open  ]],
Cell[384869, 8190, 837, 23, 54, "Text"],
Cell[CellGroupData[{
Cell[385731, 8217, 151, 3, 31, "Input"],
Cell[385885, 8222, 709, 10, 31, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[386667, 8240, 115, 1, 56, "Subtitle"],
Cell[CellGroupData[{
Cell[386807, 8245, 480, 12, 59, "Input"],
Cell[387290, 8259, 1209, 17, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[388536, 8281, 248, 7, 31, "Input"],
Cell[388787, 8290, 474, 9, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[389298, 8304, 1323, 38, 60, "Input"],
Cell[390624, 8344, 1126, 17, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[391787, 8366, 773, 25, 60, "Input"],
Cell[392563, 8393, 996, 14, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[393596, 8412, 499, 15, 60, "Input"],
Cell[394098, 8429, 1055, 15, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[395190, 8449, 390, 12, 59, "Input"],
Cell[395583, 8463, 454, 9, 70, "Output"]
}, Open  ]],
Cell[396052, 8475, 110, 1, 32, "Text"],
Cell[CellGroupData[{
Cell[396187, 8480, 333, 10, 57, "Input"],
Cell[396523, 8492, 528, 10, 70, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[397100, 8508, 128, 1, 56, "Subtitle"],
Cell[397231, 8511, 1476, 42, 63, "Text"],
Cell[398710, 8555, 312, 6, 53, "Text"],
Cell[CellGroupData[{
Cell[399047, 8565, 461, 9, 31, "Input"],
Cell[399511, 8576, 1943, 29, 92, "Output"]
}, Open  ]],
Cell[401469, 8608, 303, 6, 32, "Text"],
Cell[401775, 8616, 554, 14, 55, "Input",
 InitializationCell->True],
Cell[402332, 8632, 191, 5, 32, "Text"],
Cell[CellGroupData[{
Cell[402548, 8641, 536, 11, 31, "Input"],
Cell[403087, 8654, 1664, 26, 52, "Output"]
}, Open  ]],
Cell[404766, 8683, 225, 3, 32, "Text"],
Cell[CellGroupData[{
Cell[405016, 8690, 557, 17, 31, "Input"],
Cell[405576, 8709, 677, 11, 31, "Output"]
}, Open  ]],
Cell[406268, 8723, 203, 2, 32, "Text"],
Cell[CellGroupData[{
Cell[406496, 8729, 464, 10, 31, "Input"],
Cell[406963, 8741, 1233, 20, 31, "Output"]
}, Open  ]],
Cell[408211, 8764, 310, 4, 32, "Text"],
Cell[CellGroupData[{
Cell[408546, 8772, 547, 16, 31, "Input"],
Cell[409096, 8790, 682, 10, 31, "Output"]
}, Open  ]],
Cell[409793, 8803, 800, 15, 158, "Text"],
Cell[CellGroupData[{
Cell[410618, 8822, 364, 8, 31, "Input"],
Cell[410985, 8832, 925, 15, 31, "Output"]
}, Open  ]],
Cell[411925, 8850, 131, 1, 32, "Text"],
Cell[CellGroupData[{
Cell[412081, 8855, 455, 11, 31, "Input"],
Cell[412539, 8868, 840, 14, 31, "Output"]
}, Open  ]],
Cell[413394, 8885, 201, 2, 32, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[413632, 8892, 198, 3, 56, "Subtitle"],
Cell[413833, 8897, 23320, 388, 191, "Text"],
Cell[437156, 9287, 153, 2, 32, "Text"],
Cell[CellGroupData[{
Cell[437334, 9293, 309, 9, 51, "Input"],
Cell[437646, 9304, 858, 12, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[438541, 9321, 1472, 47, 31, "Input"],
Cell[440016, 9370, 864, 12, 31, "Output"]
}, Open  ]],
Cell[440895, 9385, 1501, 41, 130, "Text"],
Cell[CellGroupData[{
Cell[442421, 9430, 341, 10, 59, "Input"],
Cell[442765, 9442, 886, 12, 31, "Output"]
}, Open  ]],
Cell[443666, 9457, 374, 7, 32, "Text"],
Cell[444043, 9466, 3367, 121, 131, "Text"],
Cell[447413, 9589, 1052, 23, 69, "Text"],
Cell[448468, 9614, 961, 28, 60, "Input"],
Cell[CellGroupData[{
Cell[449454, 9646, 252, 6, 31, "Input"],
Cell[449709, 9654, 1528, 35, 33, "Output"]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
